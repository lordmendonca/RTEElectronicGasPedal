ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccNhv63R.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"swc_control.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CONTROL_calcControl_run,"ax",%progbits
  20              		.align	2
  21              		.global	CONTROL_calcControl_run
  22              		.thumb
  23              		.thumb_func
  24              		.type	CONTROL_calcControl_run, %function
  25              	CONTROL_calcControl_run:
  26              	.LFB150:
  27              		.file 1 "source\\asw\\swc_control.c"
   1:source\asw/swc_control.c **** 
   2:source\asw/swc_control.c **** 
   3:source\asw/swc_control.c **** /*
   4:source\asw/swc_control.c ****  * Filename: swc_control.c
   5:source\asw/swc_control.c ****  *
   6:source\asw/swc_control.c ****  * Author: Autogenerated by H-DA RTE Generator, (c) Prof. Fromm
   7:source\asw/swc_control.c ****  */
   8:source\asw/swc_control.c **** 
   9:source\asw/swc_control.c **** #include "project.h"
  10:source\asw/swc_control.c **** #include "global.h"
  11:source\asw/swc_control.c **** #include "rte.h"
  12:source\asw/swc_control.c **** #include "rte_types.h"
  13:source\asw/swc_control.c **** #include "swc_control.h"
  14:source\asw/swc_control.c **** 
  15:source\asw/swc_control.c **** 
  16:source\asw/swc_control.c **** 
  17:source\asw/swc_control.c **** /* USER CODE START SWC_CONTROL_INCLUDE */
  18:source\asw/swc_control.c **** 
  19:source\asw/swc_control.c **** #include "intToASCII.h"
  20:source\asw/swc_control.c **** #include "watchdog.h"
  21:source\asw/swc_control.c **** 
  22:source\asw/swc_control.c **** /* USER CODE END SWC_CONTROL_INCLUDE */
  23:source\asw/swc_control.c **** 
  24:source\asw/swc_control.c **** 
  25:source\asw/swc_control.c **** #include "sp_common.h"
  26:source\asw/swc_control.c **** 
  27:source\asw/swc_control.c **** /* USER CODE START SWC_CONTROL_USERDEFINITIONS */
  28:source\asw/swc_control.c **** 
  29:source\asw/swc_control.c **** /* USER CODE END SWC_CONTROL_USERDEFINITIONS */
  30:source\asw/swc_control.c **** 
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccNhv63R.s 			page 2


  31:source\asw/swc_control.c **** 
  32:source\asw/swc_control.c **** 
  33:source\asw/swc_control.c **** /*
  34:source\asw/swc_control.c **** * component: swc_control
  35:source\asw/swc_control.c **** * cycletime: 0
  36:source\asw/swc_control.c **** * description: Runnable for the calculation control.
  37:source\asw/swc_control.c **** * events: ev_joystick_onData
  38:source\asw/swc_control.c **** * name: CONTROL_calcControl_run
  39:source\asw/swc_control.c **** * shortname: calcControl
  40:source\asw/swc_control.c **** * signalIN: so_joystick
  41:source\asw/swc_control.c **** * signalOUT: so_speed
  42:source\asw/swc_control.c **** * task: tsk_control
  43:source\asw/swc_control.c **** */
  44:source\asw/swc_control.c **** void CONTROL_calcControl_run(RTE_event ev){
  28              		.loc 1 44 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 16
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 30B5     		push	{r4, r5, lr}
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 85B0     		sub	sp, sp, #20
  39              		.cfi_def_cfa_offset 32
  45:source\asw/swc_control.c **** 	
  46:source\asw/swc_control.c **** 	/* USER CODE START CONTROL_calcControl_run */
  47:source\asw/swc_control.c ****     
  48:source\asw/swc_control.c ****     static SC_SPEED_data_t speedValue = SC_SPEED_INIT_DATA;
  49:source\asw/swc_control.c ****     static char asciiConvert[30];
  50:source\asw/swc_control.c ****     static RC_t res = RC_SUCCESS;
  51:source\asw/swc_control.c ****     /*
  52:source\asw/swc_control.c ****      * Updating the Alive Monitoring register. 
  53:source\asw/swc_control.c ****      * Bit Position 1 - RUNNABLE_CALCCONTROL
  54:source\asw/swc_control.c ****      **/
  55:source\asw/swc_control.c ****     WD_Alive(1);
  40              		.loc 1 55 0
  41 0004 0120     		movs	r0, #1
  42              	.LVL1:
  43 0006 FFF7FEFF 		bl	WD_Alive
  44              	.LVL2:
  45              	.LBB13:
  46              	.LBB14:
  47              		.file 2 ".\\source\\rte/sc_joystick.h"
   1:.\source\rte/sc_joystick.h **** 
   2:.\source\rte/sc_joystick.h **** 
   3:.\source\rte/sc_joystick.h **** /**
   4:.\source\rte/sc_joystick.h **** *  file    SC_JOYSTICK_signal.h
   5:.\source\rte/sc_joystick.h **** *
   6:.\source\rte/sc_joystick.h **** *  brief   signal base class for signal sc_joystick
   7:.\source\rte/sc_joystick.h **** *
   8:.\source\rte/sc_joystick.h **** *  author  Autogenerated, Peter Fromm       <peter.fromm@h-da.de>
   9:.\source\rte/sc_joystick.h **** *
  10:.\source\rte/sc_joystick.h **** *
  11:.\source\rte/sc_joystick.h **** */
  12:.\source\rte/sc_joystick.h **** 
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccNhv63R.s 			page 3


  13:.\source\rte/sc_joystick.h **** /*
  14:.\source\rte/sc_joystick.h **** * description: Signalclass representing the user input.
  15:.\source\rte/sc_joystick.h **** * name: sc_joystick
  16:.\source\rte/sc_joystick.h **** * shortname: joystick
  17:.\source\rte/sc_joystick.h **** */
  18:.\source\rte/sc_joystick.h **** 
  19:.\source\rte/sc_joystick.h **** #ifndef SC_JOYSTICK_SIGNAL_H_INCLUDED
  20:.\source\rte/sc_joystick.h **** #define SC_JOYSTICK_SIGNAL_H_INCLUDED
  21:.\source\rte/sc_joystick.h **** 
  22:.\source\rte/sc_joystick.h **** /*================================================[ public includes  ]=============================
  23:.\source\rte/sc_joystick.h **** #include "global.h"
  24:.\source\rte/sc_joystick.h **** #include "project.h"
  25:.\source\rte/sc_joystick.h **** #include "rte.h"
  26:.\source\rte/sc_joystick.h **** #include "rte_types.h"
  27:.\source\rte/sc_joystick.h **** 
  28:.\source\rte/sc_joystick.h **** #include "sc_joystick_type.h"
  29:.\source\rte/sc_joystick.h **** 
  30:.\source\rte/sc_joystick.h **** 
  31:.\source\rte/sc_joystick.h **** /**************************************************************************************************
  32:.\source\rte/sc_joystick.h **** /* The driver API block																						*/
  33:.\source\rte/sc_joystick.h **** /**************************************************************************************************
  34:.\source\rte/sc_joystick.h ****                                                                                                    
  35:.\source\rte/sc_joystick.h **** /**
  36:.\source\rte/sc_joystick.h ****  *  Definition of function types for driver interfaces.
  37:.\source\rte/sc_joystick.h ****  *  I-Port
  38:.\source\rte/sc_joystick.h ****  */
  39:.\source\rte/sc_joystick.h **** typedef RC_t (*SC_JOYSTICK_driverIn_t)(SC_JOYSTICK_data_t * const);
  40:.\source\rte/sc_joystick.h **** 
  41:.\source\rte/sc_joystick.h **** /**
  42:.\source\rte/sc_joystick.h ****  *  Definition of function types for driver interfaces.
  43:.\source\rte/sc_joystick.h ****  *  O-Port
  44:.\source\rte/sc_joystick.h ****  */
  45:.\source\rte/sc_joystick.h **** typedef RC_t (*SC_JOYSTICK_driverOut_t)( const SC_JOYSTICK_data_t * const);
  46:.\source\rte/sc_joystick.h **** 
  47:.\source\rte/sc_joystick.h **** 
  48:.\source\rte/sc_joystick.h **** /**************************************************************************************************
  49:.\source\rte/sc_joystick.h **** /* The signal configuration API block																				*/
  50:.\source\rte/sc_joystick.h **** /**************************************************************************************************
  51:.\source\rte/sc_joystick.h **** 
  52:.\source\rte/sc_joystick.h **** /**
  53:.\source\rte/sc_joystick.h ****  * Instances of the struct SC_JOYSTICK_cfg_t represent the signal object configuration.
  54:.\source\rte/sc_joystick.h ****  */
  55:.\source\rte/sc_joystick.h **** struct SC_JOYSTICK_cfg_s
  56:.\source\rte/sc_joystick.h **** {
  57:.\source\rte/sc_joystick.h ****     /**
  58:.\source\rte/sc_joystick.h ****      * Function pointer to the input driver
  59:.\source\rte/sc_joystick.h ****      */
  60:.\source\rte/sc_joystick.h ****     SC_JOYSTICK_driverIn_t const inDriver;
  61:.\source\rte/sc_joystick.h **** 
  62:.\source\rte/sc_joystick.h ****     /**
  63:.\source\rte/sc_joystick.h ****      * Function pointer to the output driver table
  64:.\source\rte/sc_joystick.h ****      */
  65:.\source\rte/sc_joystick.h ****    SC_JOYSTICK_driverOut_t const outDriver;
  66:.\source\rte/sc_joystick.h ****    
  67:.\source\rte/sc_joystick.h ****     /**
  68:.\source\rte/sc_joystick.h ****      * Event onUpdate
  69:.\source\rte/sc_joystick.h ****      */
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccNhv63R.s 			page 4


  70:.\source\rte/sc_joystick.h ****     EventMaskType const evOnUpdate;
  71:.\source\rte/sc_joystick.h ****     
  72:.\source\rte/sc_joystick.h ****     
  73:.\source\rte/sc_joystick.h ****     /**
  74:.\source\rte/sc_joystick.h ****      * Event onError
  75:.\source\rte/sc_joystick.h ****      */
  76:.\source\rte/sc_joystick.h ****     EventMaskType const evOnError;
  77:.\source\rte/sc_joystick.h ****     
  78:.\source\rte/sc_joystick.h ****     /**
  79:.\source\rte/sc_joystick.h ****      * Task Count onUpdate
  80:.\source\rte/sc_joystick.h ****      */
  81:.\source\rte/sc_joystick.h ****     size_t const onUpdateTaskCount;
  82:.\source\rte/sc_joystick.h **** 
  83:.\source\rte/sc_joystick.h ****     /**
  84:.\source\rte/sc_joystick.h ****      * Task List onUpdate
  85:.\source\rte/sc_joystick.h ****      */
  86:.\source\rte/sc_joystick.h ****     TaskTypeArray* const onUpdateTasks;
  87:.\source\rte/sc_joystick.h ****     
  88:.\source\rte/sc_joystick.h ****     /**
  89:.\source\rte/sc_joystick.h ****      * Task Count onError
  90:.\source\rte/sc_joystick.h ****      */
  91:.\source\rte/sc_joystick.h ****     size_t const onErrorTaskCount;
  92:.\source\rte/sc_joystick.h **** 
  93:.\source\rte/sc_joystick.h ****     /**
  94:.\source\rte/sc_joystick.h ****      * Task List onError
  95:.\source\rte/sc_joystick.h ****      */
  96:.\source\rte/sc_joystick.h ****     TaskTypeArray* const onErrorTasks;
  97:.\source\rte/sc_joystick.h **** 	
  98:.\source\rte/sc_joystick.h **** 	
  99:.\source\rte/sc_joystick.h **** 	/**
 100:.\source\rte/sc_joystick.h **** 	 * Ressourse is active? We need an additional boolean as a ressource value 0 is valid.
 101:.\source\rte/sc_joystick.h **** 	 */
 102:.\source\rte/sc_joystick.h **** 	 boolean_t const resourceActive;
 103:.\source\rte/sc_joystick.h **** 	 
 104:.\source\rte/sc_joystick.h **** 	/**
 105:.\source\rte/sc_joystick.h **** 	 * Ressourse 
 106:.\source\rte/sc_joystick.h **** 	 */
 107:.\source\rte/sc_joystick.h **** 	 ResourceType const resource;
 108:.\source\rte/sc_joystick.h **** 
 109:.\source\rte/sc_joystick.h **** };                                                                                                 
 110:.\source\rte/sc_joystick.h **** typedef const struct SC_JOYSTICK_cfg_s SC_JOYSTICK_cfg_t;
 111:.\source\rte/sc_joystick.h ****                               
 112:.\source\rte/sc_joystick.h **** /**************************************************************************************************
 113:.\source\rte/sc_joystick.h **** /* The data interface block																							*/
 114:.\source\rte/sc_joystick.h **** /**************************************************************************************************
 115:.\source\rte/sc_joystick.h **** 
 116:.\source\rte/sc_joystick.h ****                                                                                                    
 117:.\source\rte/sc_joystick.h **** 							  
 118:.\source\rte/sc_joystick.h **** /**
 119:.\source\rte/sc_joystick.h ****  * Instances of the struct SC_JOYSTICK_t represent the signal objects.
 120:.\source\rte/sc_joystick.h ****  * A signal object contains the current application value 'value' as well as relevant meta data.
 121:.\source\rte/sc_joystick.h ****  */
 122:.\source\rte/sc_joystick.h **** struct SC_JOYSTICK_s
 123:.\source\rte/sc_joystick.h **** {                                                                                                  
 124:.\source\rte/sc_joystick.h **** 
 125:.\source\rte/sc_joystick.h **** 	/**
 126:.\source\rte/sc_joystick.h **** 	 * Data buffer for the application value
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccNhv63R.s 			page 5


 127:.\source\rte/sc_joystick.h **** 	 */
 128:.\source\rte/sc_joystick.h ****     SC_JOYSTICK_data_t value;
 129:.\source\rte/sc_joystick.h **** 
 130:.\source\rte/sc_joystick.h ****     /**
 131:.\source\rte/sc_joystick.h ****      * Current signal status
 132:.\source\rte/sc_joystick.h ****      */
 133:.\source\rte/sc_joystick.h ****     RTE_signalStatus_t status;
 134:.\source\rte/sc_joystick.h **** 
 135:.\source\rte/sc_joystick.h ****     /**
 136:.\source\rte/sc_joystick.h ****      * Current age of the signal (in calling cycles)
 137:.\source\rte/sc_joystick.h ****      */
 138:.\source\rte/sc_joystick.h ****     uint32_t age;
 139:.\source\rte/sc_joystick.h **** 
 140:.\source\rte/sc_joystick.h ****     /**
 141:.\source\rte/sc_joystick.h ****      * Pointer to the signal configuration
 142:.\source\rte/sc_joystick.h ****      */
 143:.\source\rte/sc_joystick.h **** 	const SC_JOYSTICK_cfg_t * const    pSigCfg;
 144:.\source\rte/sc_joystick.h **** 
 145:.\source\rte/sc_joystick.h **** };                                                                                                 
 146:.\source\rte/sc_joystick.h **** typedef struct SC_JOYSTICK_s SC_JOYSTICK_t;
 147:.\source\rte/sc_joystick.h **** 
 148:.\source\rte/sc_joystick.h **** /**************************************************************************************************
 149:.\source\rte/sc_joystick.h **** /* Signal initialisation   																							*/
 150:.\source\rte/sc_joystick.h **** /**************************************************************************************************
 151:.\source\rte/sc_joystick.h **** 
 152:.\source\rte/sc_joystick.h **** /**
 153:.\source\rte/sc_joystick.h ****  * Initializes a signal instance with a passed init value.
 154:.\source\rte/sc_joystick.h ****  * Depending on the configured conversion or scaling function the raw_value will be calculated.
 155:.\source\rte/sc_joystick.h ****  * Signal status will change from RTE_SIGNALSTATUS_STARTUP to RTE_SIGNALSTATUS_INITIALIZED.
 156:.\source\rte/sc_joystick.h ****  *
 157:.\source\rte/sc_joystick.h ****  * @param  SC_JOYSTICK_t * const signal: Pointer to the signal object which will be initialised
 158:.\source\rte/sc_joystick.h ****  * @param const sc_joystick_data_t * const value: Pointer to initial value of the application data
 159:.\source\rte/sc_joystick.h ****  * @return RC_t: standard return code, currently only RC_SUCCESS
 160:.\source\rte/sc_joystick.h ****  *
 161:.\source\rte/sc_joystick.h ****  **/
 162:.\source\rte/sc_joystick.h **** inline RC_t RTE_SC_JOYSTICK_init( SC_JOYSTICK_t * const signal, const SC_JOYSTICK_data_t * const va
 163:.\source\rte/sc_joystick.h **** {                                                                                                  
 164:.\source\rte/sc_joystick.h **** 
 165:.\source\rte/sc_joystick.h ****    RC_t ret = RC_SUCCESS;
 166:.\source\rte/sc_joystick.h **** 
 167:.\source\rte/sc_joystick.h ****    //Set value and raw value
 168:.\source\rte/sc_joystick.h ****    signal->value  = *value;
 169:.\source\rte/sc_joystick.h ****    signal->age    = 0;
 170:.\source\rte/sc_joystick.h ****    signal->status = RTE_SIGNALSTATUS_INITIALIZED;
 171:.\source\rte/sc_joystick.h **** 
 172:.\source\rte/sc_joystick.h ****    return ret;
 173:.\source\rte/sc_joystick.h **** }
 174:.\source\rte/sc_joystick.h **** 
 175:.\source\rte/sc_joystick.h **** /**************************************************************************************************
 176:.\source\rte/sc_joystick.h **** /* Status and timeout control																						*/
 177:.\source\rte/sc_joystick.h **** /**************************************************************************************************
 178:.\source\rte/sc_joystick.h **** 
 179:.\source\rte/sc_joystick.h **** /**
 180:.\source\rte/sc_joystick.h ****  *  Returns the current signal status of the passed signal instance.
 181:.\source\rte/sc_joystick.h ****  *
 182:.\source\rte/sc_joystick.h ****  * @param  SC_JOYSTICK_t * const signal: Pointer to the signal object
 183:.\source\rte/sc_joystick.h ****  * @return  sig_status_t: The current signal status
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccNhv63R.s 			page 6


 184:.\source\rte/sc_joystick.h ****  *
 185:.\source\rte/sc_joystick.h ****  **/
 186:.\source\rte/sc_joystick.h **** inline RTE_signalStatus_t RTE_SC_JOYSTICK_getStatus( const SC_JOYSTICK_t * const signal )
 187:.\source\rte/sc_joystick.h **** {
 188:.\source\rte/sc_joystick.h ****    return signal->status;
 189:.\source\rte/sc_joystick.h **** }
 190:.\source\rte/sc_joystick.h **** 
 191:.\source\rte/sc_joystick.h **** 
 192:.\source\rte/sc_joystick.h **** /**
 193:.\source\rte/sc_joystick.h ****  *  Sets a new signal status of the passed signal instance by passing the new status.
 194:.\source\rte/sc_joystick.h ****  *
 195:.\source\rte/sc_joystick.h ****  * @param  SC_JOYSTICK_t * const signal: Pointer to the signal object
 196:.\source\rte/sc_joystick.h ****  * @param  const sig_status_t status: New signal status
 197:.\source\rte/sc_joystick.h ****  * @return RC_t: standard return code, currently only RC_SUCCESS
 198:.\source\rte/sc_joystick.h ****  *
 199:.\source\rte/sc_joystick.h ****  */
 200:.\source\rte/sc_joystick.h **** inline RC_t RTE_SC_JOYSTICK_setStatus( SC_JOYSTICK_t * const signal, const RTE_signalStatus_t statu
 201:.\source\rte/sc_joystick.h **** {
 202:.\source\rte/sc_joystick.h ****    signal->status = status;
 203:.\source\rte/sc_joystick.h ****    size_t taskNum=0;
 204:.\source\rte/sc_joystick.h ****    
 205:.\source\rte/sc_joystick.h ****    //Fire error events in case of invalid state
 206:.\source\rte/sc_joystick.h ****    if (signal->status == RTE_SIGNALSTATUS_INVALID)
 207:.\source\rte/sc_joystick.h ****    {
 208:.\source\rte/sc_joystick.h **** 	    //Pointer to the Taskarray, containing the tasks receiving the onUpdate events
 209:.\source\rte/sc_joystick.h **** 		TaskTypeArray* pTaskArray = signal->pSigCfg->onErrorTasks;
 210:.\source\rte/sc_joystick.h **** 
 211:.\source\rte/sc_joystick.h **** 		if (NULL!=signal->pSigCfg->evOnError && NULL != pTaskArray){
 212:.\source\rte/sc_joystick.h **** 			for( taskNum=0 ; taskNum < signal->pSigCfg->onErrorTaskCount ;taskNum++){
 213:.\source\rte/sc_joystick.h **** 				TaskType task = (*pTaskArray)[taskNum];
 214:.\source\rte/sc_joystick.h **** 				SetEvent( task, signal->pSigCfg->evOnError);
 215:.\source\rte/sc_joystick.h **** 			}
 216:.\source\rte/sc_joystick.h **** 		}
 217:.\source\rte/sc_joystick.h ****    }
 218:.\source\rte/sc_joystick.h ****    
 219:.\source\rte/sc_joystick.h ****    return RC_SUCCESS;
 220:.\source\rte/sc_joystick.h **** }
 221:.\source\rte/sc_joystick.h **** 
 222:.\source\rte/sc_joystick.h **** 
 223:.\source\rte/sc_joystick.h **** /**
 224:.\source\rte/sc_joystick.h ****  * Returns the count of refreshing trials (refresh, set or set_raw) that failed.
 225:.\source\rte/sc_joystick.h ****  * Prerquisite: The signal is refreshed cyclically
 226:.\source\rte/sc_joystick.h ****  *
 227:.\source\rte/sc_joystick.h ****  * @param  SC_JOYSTICK_t * const signal: Pointer to the signal object
 228:.\source\rte/sc_joystick.h ****  * @return uint32_t: Number of cycles since the signal has been updated for the last time
 229:.\source\rte/sc_joystick.h ****  */
 230:.\source\rte/sc_joystick.h **** inline uint32_t RTE_SC_JOYSTICK_getAge( const SC_JOYSTICK_t * const signal )
 231:.\source\rte/sc_joystick.h **** {
 232:.\source\rte/sc_joystick.h ****    return signal->age;
 233:.\source\rte/sc_joystick.h **** }
 234:.\source\rte/sc_joystick.h **** 
 235:.\source\rte/sc_joystick.h **** /**
 236:.\source\rte/sc_joystick.h ****  * Should be called by application or driver if no new value can be provided.
 237:.\source\rte/sc_joystick.h ****  * @param  SC_JOYSTICK_t * const signal: Pointer to the signal object
 238:.\source\rte/sc_joystick.h ****  * @param uint32_t increment: incrementvalue, typically in [ms]
 239:.\source\rte/sc_joystick.h ****  * @return void
 240:.\source\rte/sc_joystick.h ****  */
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccNhv63R.s 			page 7


 241:.\source\rte/sc_joystick.h **** inline void RTE_SC_JOYSTICK_incAge(  SC_JOYSTICK_t * const signal , uint32_t increment)
 242:.\source\rte/sc_joystick.h **** {
 243:.\source\rte/sc_joystick.h **** 	   //Hack....
 244:.\source\rte/sc_joystick.h **** 	   if ( 0xFFFF0000 > (signal->age + increment) )
 245:.\source\rte/sc_joystick.h **** 	   {
 246:.\source\rte/sc_joystick.h **** 	      signal->age += increment;
 247:.\source\rte/sc_joystick.h **** 	   }
 248:.\source\rte/sc_joystick.h **** }
 249:.\source\rte/sc_joystick.h **** 
 250:.\source\rte/sc_joystick.h **** 
 251:.\source\rte/sc_joystick.h **** /**************************************************************************************************
 252:.\source\rte/sc_joystick.h **** /* Application Data read/write Interface																			*/
 253:.\source\rte/sc_joystick.h **** /**************************************************************************************************
 254:.\source\rte/sc_joystick.h **** 
 255:.\source\rte/sc_joystick.h **** /**
 256:.\source\rte/sc_joystick.h ****  * Returns the current application value of the passed signal instance.
 257:.\source\rte/sc_joystick.h ****  *
 258:.\source\rte/sc_joystick.h ****  * @param  SC_JOYSTICK_t * const signal: Pointer to the signal object
 259:.\source\rte/sc_joystick.h ****  * @return sc_joystick_data_t: current value of the application data buffer
 260:.\source\rte/sc_joystick.h ****  *
 261:.\source\rte/sc_joystick.h ****  **/
 262:.\source\rte/sc_joystick.h **** inline SC_JOYSTICK_data_t RTE_SC_JOYSTICK_get( const SC_JOYSTICK_t * const signal )
 263:.\source\rte/sc_joystick.h **** {               
 264:.\source\rte/sc_joystick.h ****    //Todo: Critical region cannot be protected using return values																						
 265:.\source\rte/sc_joystick.h ****    return signal->value;                                                                           
  48              		.loc 2 265 0
  49 000a 2D4B     		ldr	r3, .L12
  50 000c 1B88     		ldrh	r3, [r3]
  51 000e ADF80830 		strh	r3, [sp, #8]	@ movhi
  52 0012 ADF80030 		strh	r3, [sp]	@ movhi
  53              	.LVL3:
  54              	.LBE14:
  55              	.LBE13:
  56:source\asw/swc_control.c ****     /**
  57:source\asw/swc_control.c ****      * Error Handling
  58:source\asw/swc_control.c ****      **/
  59:source\asw/swc_control.c ****     if(res != RC_SUCCESS)
  60:source\asw/swc_control.c ****     {
  61:source\asw/swc_control.c ****         UART_LOG_PutString("Watchdog Status register update failed. \n");   
  62:source\asw/swc_control.c ****     }
  63:source\asw/swc_control.c ****     
  64:source\asw/swc_control.c ****     /**
  65:source\asw/swc_control.c ****      * Translating joystick value into speed value as 
  66:source\asw/swc_control.c ****      * speed value = 2 x joystick value along positive y-direction (front).
  67:source\asw/swc_control.c ****      * speed value = 0 along negative y-direction (back).
  68:source\asw/swc_control.c ****      **/
  69:source\asw/swc_control.c ****     if(RTE_SC_JOYSTICK_get(&SO_JOYSTICK_signal).Joystick_Y > 0)
  56              		.loc 1 69 0
  57 0016 43F30723 		sbfx	r3, r3, #8, #8
  58 001a 002B     		cmp	r3, #0
  59 001c 0BDD     		ble	.L2
  60              	.LVL4:
  61              	.LBB15:
  62              	.LBB16:
  63              		.loc 2 265 0
  64 001e 284B     		ldr	r3, .L12
  65 0020 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccNhv63R.s 			page 8


  66 0022 ADF80C30 		strh	r3, [sp, #12]	@ movhi
  67 0026 ADF80430 		strh	r3, [sp, #4]	@ movhi
  68              	.LVL5:
  69              	.LBE16:
  70              	.LBE15:
  70:source\asw/swc_control.c ****     {
  71:source\asw/swc_control.c ****         speedValue.speed = 2 * (RTE_SC_JOYSTICK_get(&SO_JOYSTICK_signal).Joystick_Y);
  71              		.loc 1 71 0
  72 002a 43F30723 		sbfx	r3, r3, #8, #8
  73 002e 5B00     		lsls	r3, r3, #1
  74 0030 244A     		ldr	r2, .L12+4
  75 0032 1370     		strb	r3, [r2]
  76 0034 02E0     		b	.L3
  77              	.L2:
  72:source\asw/swc_control.c ****     }
  73:source\asw/swc_control.c ****     else
  74:source\asw/swc_control.c ****     {
  75:source\asw/swc_control.c ****         speedValue.speed = 0;
  78              		.loc 1 75 0
  79 0036 0022     		movs	r2, #0
  80 0038 224B     		ldr	r3, .L12+4
  81 003a 1A70     		strb	r2, [r3]
  82              	.L3:
  76:source\asw/swc_control.c ****     }
  77:source\asw/swc_control.c ****     
  78:source\asw/swc_control.c ****     /**
  79:source\asw/swc_control.c ****      * Test Case for alive monitoring.
  80:source\asw/swc_control.c ****      * RTE_SC_SPEED_set(..) is when updates the speed also triggers the event 'ev_speed_onData'
  81:source\asw/swc_control.c ****      * that invokes the runnable 'BRAKELIGHT_setBrakeLight_run'.
  82:source\asw/swc_control.c ****      * However, to test the watchdog timer, the speed is not set and the runnable is not called.
  83:source\asw/swc_control.c ****      * Therefore, the 3rd bit of the alive monitoring status register is not set.
  84:source\asw/swc_control.c ****      * (Runnable 'BRAKELIGHT_setBrakeLight_run' needs the event 'ev_speed_onData' to execute).
  85:source\asw/swc_control.c ****      * Therefore, a watchdog timeout happens and the system restarts after this reset.
  86:source\asw/swc_control.c ****      **/
  87:source\asw/swc_control.c ****     if(wdt_test != TRUE)
  83              		.loc 1 87 0
  84 003c 224B     		ldr	r3, .L12+8
  85 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  86 0040 012B     		cmp	r3, #1
  87 0042 2BD0     		beq	.L4
  88              	.LVL6:
  89 0044 1F4B     		ldr	r3, .L12+4
  90 0046 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
  91              	.LVL7:
  92              	.LBB17:
  93              	.LBB18:
  94              		.file 3 ".\\source\\rte/sc_speed.h"
   1:.\source\rte/sc_speed.h **** 
   2:.\source\rte/sc_speed.h **** 
   3:.\source\rte/sc_speed.h **** /**
   4:.\source\rte/sc_speed.h **** *  file    SC_SPEED_signal.h
   5:.\source\rte/sc_speed.h **** *
   6:.\source\rte/sc_speed.h **** *  brief   signal base class for signal sc_speed
   7:.\source\rte/sc_speed.h **** *
   8:.\source\rte/sc_speed.h **** *  author  Autogenerated, Peter Fromm       <peter.fromm@h-da.de>
   9:.\source\rte/sc_speed.h **** *
  10:.\source\rte/sc_speed.h **** *
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccNhv63R.s 			page 9


  11:.\source\rte/sc_speed.h **** */
  12:.\source\rte/sc_speed.h **** 
  13:.\source\rte/sc_speed.h **** /*
  14:.\source\rte/sc_speed.h **** * description: Signalclass representing the speed.
  15:.\source\rte/sc_speed.h **** * name: sc_speed
  16:.\source\rte/sc_speed.h **** * shortname: speed
  17:.\source\rte/sc_speed.h **** */
  18:.\source\rte/sc_speed.h **** 
  19:.\source\rte/sc_speed.h **** #ifndef SC_SPEED_SIGNAL_H_INCLUDED
  20:.\source\rte/sc_speed.h **** #define SC_SPEED_SIGNAL_H_INCLUDED
  21:.\source\rte/sc_speed.h **** 
  22:.\source\rte/sc_speed.h **** /*================================================[ public includes  ]=============================
  23:.\source\rte/sc_speed.h **** #include "global.h"
  24:.\source\rte/sc_speed.h **** #include "project.h"
  25:.\source\rte/sc_speed.h **** #include "rte.h"
  26:.\source\rte/sc_speed.h **** #include "rte_types.h"
  27:.\source\rte/sc_speed.h **** 
  28:.\source\rte/sc_speed.h **** #include "sc_speed_type.h"
  29:.\source\rte/sc_speed.h **** 
  30:.\source\rte/sc_speed.h **** 
  31:.\source\rte/sc_speed.h **** /**************************************************************************************************
  32:.\source\rte/sc_speed.h **** /* The driver API block																						*/
  33:.\source\rte/sc_speed.h **** /**************************************************************************************************
  34:.\source\rte/sc_speed.h ****                                                                                                    
  35:.\source\rte/sc_speed.h **** /**
  36:.\source\rte/sc_speed.h ****  *  Definition of function types for driver interfaces.
  37:.\source\rte/sc_speed.h ****  *  I-Port
  38:.\source\rte/sc_speed.h ****  */
  39:.\source\rte/sc_speed.h **** typedef RC_t (*SC_SPEED_driverIn_t)(SC_SPEED_data_t * const);
  40:.\source\rte/sc_speed.h **** 
  41:.\source\rte/sc_speed.h **** /**
  42:.\source\rte/sc_speed.h ****  *  Definition of function types for driver interfaces.
  43:.\source\rte/sc_speed.h ****  *  O-Port
  44:.\source\rte/sc_speed.h ****  */
  45:.\source\rte/sc_speed.h **** typedef RC_t (*SC_SPEED_driverOut_t)( const SC_SPEED_data_t * const);
  46:.\source\rte/sc_speed.h **** 
  47:.\source\rte/sc_speed.h **** 
  48:.\source\rte/sc_speed.h **** /**************************************************************************************************
  49:.\source\rte/sc_speed.h **** /* The signal configuration API block																				*/
  50:.\source\rte/sc_speed.h **** /**************************************************************************************************
  51:.\source\rte/sc_speed.h **** 
  52:.\source\rte/sc_speed.h **** /**
  53:.\source\rte/sc_speed.h ****  * Instances of the struct SC_SPEED_cfg_t represent the signal object configuration.
  54:.\source\rte/sc_speed.h ****  */
  55:.\source\rte/sc_speed.h **** struct SC_SPEED_cfg_s
  56:.\source\rte/sc_speed.h **** {
  57:.\source\rte/sc_speed.h ****     /**
  58:.\source\rte/sc_speed.h ****      * Function pointer to the input driver
  59:.\source\rte/sc_speed.h ****      */
  60:.\source\rte/sc_speed.h ****     SC_SPEED_driverIn_t const inDriver;
  61:.\source\rte/sc_speed.h **** 
  62:.\source\rte/sc_speed.h ****     /**
  63:.\source\rte/sc_speed.h ****      * Function pointer to the output driver table
  64:.\source\rte/sc_speed.h ****      */
  65:.\source\rte/sc_speed.h ****    SC_SPEED_driverOut_t const outDriver;
  66:.\source\rte/sc_speed.h ****    
  67:.\source\rte/sc_speed.h ****     /**
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccNhv63R.s 			page 10


  68:.\source\rte/sc_speed.h ****      * Event onUpdate
  69:.\source\rte/sc_speed.h ****      */
  70:.\source\rte/sc_speed.h ****     EventMaskType const evOnUpdate;
  71:.\source\rte/sc_speed.h ****     
  72:.\source\rte/sc_speed.h ****     
  73:.\source\rte/sc_speed.h ****     /**
  74:.\source\rte/sc_speed.h ****      * Event onError
  75:.\source\rte/sc_speed.h ****      */
  76:.\source\rte/sc_speed.h ****     EventMaskType const evOnError;
  77:.\source\rte/sc_speed.h ****     
  78:.\source\rte/sc_speed.h ****     /**
  79:.\source\rte/sc_speed.h ****      * Task Count onUpdate
  80:.\source\rte/sc_speed.h ****      */
  81:.\source\rte/sc_speed.h ****     size_t const onUpdateTaskCount;
  82:.\source\rte/sc_speed.h **** 
  83:.\source\rte/sc_speed.h ****     /**
  84:.\source\rte/sc_speed.h ****      * Task List onUpdate
  85:.\source\rte/sc_speed.h ****      */
  86:.\source\rte/sc_speed.h ****     TaskTypeArray* const onUpdateTasks;
  87:.\source\rte/sc_speed.h ****     
  88:.\source\rte/sc_speed.h ****     /**
  89:.\source\rte/sc_speed.h ****      * Task Count onError
  90:.\source\rte/sc_speed.h ****      */
  91:.\source\rte/sc_speed.h ****     size_t const onErrorTaskCount;
  92:.\source\rte/sc_speed.h **** 
  93:.\source\rte/sc_speed.h ****     /**
  94:.\source\rte/sc_speed.h ****      * Task List onError
  95:.\source\rte/sc_speed.h ****      */
  96:.\source\rte/sc_speed.h ****     TaskTypeArray* const onErrorTasks;
  97:.\source\rte/sc_speed.h **** 	
  98:.\source\rte/sc_speed.h **** 	
  99:.\source\rte/sc_speed.h **** 	/**
 100:.\source\rte/sc_speed.h **** 	 * Ressourse is active? We need an additional boolean as a ressource value 0 is valid.
 101:.\source\rte/sc_speed.h **** 	 */
 102:.\source\rte/sc_speed.h **** 	 boolean_t const resourceActive;
 103:.\source\rte/sc_speed.h **** 	 
 104:.\source\rte/sc_speed.h **** 	/**
 105:.\source\rte/sc_speed.h **** 	 * Ressourse 
 106:.\source\rte/sc_speed.h **** 	 */
 107:.\source\rte/sc_speed.h **** 	 ResourceType const resource;
 108:.\source\rte/sc_speed.h **** 
 109:.\source\rte/sc_speed.h **** };                                                                                                 
 110:.\source\rte/sc_speed.h **** typedef const struct SC_SPEED_cfg_s SC_SPEED_cfg_t;
 111:.\source\rte/sc_speed.h ****                               
 112:.\source\rte/sc_speed.h **** /**************************************************************************************************
 113:.\source\rte/sc_speed.h **** /* The data interface block																							*/
 114:.\source\rte/sc_speed.h **** /**************************************************************************************************
 115:.\source\rte/sc_speed.h **** 
 116:.\source\rte/sc_speed.h ****                                                                                                    
 117:.\source\rte/sc_speed.h **** 							  
 118:.\source\rte/sc_speed.h **** /**
 119:.\source\rte/sc_speed.h ****  * Instances of the struct SC_SPEED_t represent the signal objects.
 120:.\source\rte/sc_speed.h ****  * A signal object contains the current application value 'value' as well as relevant meta data.
 121:.\source\rte/sc_speed.h ****  */
 122:.\source\rte/sc_speed.h **** struct SC_SPEED_s
 123:.\source\rte/sc_speed.h **** {                                                                                                  
 124:.\source\rte/sc_speed.h **** 
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccNhv63R.s 			page 11


 125:.\source\rte/sc_speed.h **** 	/**
 126:.\source\rte/sc_speed.h **** 	 * Data buffer for the application value
 127:.\source\rte/sc_speed.h **** 	 */
 128:.\source\rte/sc_speed.h ****     SC_SPEED_data_t value;
 129:.\source\rte/sc_speed.h **** 
 130:.\source\rte/sc_speed.h ****     /**
 131:.\source\rte/sc_speed.h ****      * Current signal status
 132:.\source\rte/sc_speed.h ****      */
 133:.\source\rte/sc_speed.h ****     RTE_signalStatus_t status;
 134:.\source\rte/sc_speed.h **** 
 135:.\source\rte/sc_speed.h ****     /**
 136:.\source\rte/sc_speed.h ****      * Current age of the signal (in calling cycles)
 137:.\source\rte/sc_speed.h ****      */
 138:.\source\rte/sc_speed.h ****     uint32_t age;
 139:.\source\rte/sc_speed.h **** 
 140:.\source\rte/sc_speed.h ****     /**
 141:.\source\rte/sc_speed.h ****      * Pointer to the signal configuration
 142:.\source\rte/sc_speed.h ****      */
 143:.\source\rte/sc_speed.h **** 	const SC_SPEED_cfg_t * const    pSigCfg;
 144:.\source\rte/sc_speed.h **** 
 145:.\source\rte/sc_speed.h **** };                                                                                                 
 146:.\source\rte/sc_speed.h **** typedef struct SC_SPEED_s SC_SPEED_t;
 147:.\source\rte/sc_speed.h **** 
 148:.\source\rte/sc_speed.h **** /**************************************************************************************************
 149:.\source\rte/sc_speed.h **** /* Signal initialisation   																							*/
 150:.\source\rte/sc_speed.h **** /**************************************************************************************************
 151:.\source\rte/sc_speed.h **** 
 152:.\source\rte/sc_speed.h **** /**
 153:.\source\rte/sc_speed.h ****  * Initializes a signal instance with a passed init value.
 154:.\source\rte/sc_speed.h ****  * Depending on the configured conversion or scaling function the raw_value will be calculated.
 155:.\source\rte/sc_speed.h ****  * Signal status will change from RTE_SIGNALSTATUS_STARTUP to RTE_SIGNALSTATUS_INITIALIZED.
 156:.\source\rte/sc_speed.h ****  *
 157:.\source\rte/sc_speed.h ****  * @param  SC_SPEED_t * const signal: Pointer to the signal object which will be initialised
 158:.\source\rte/sc_speed.h ****  * @param const sc_speed_data_t * const value: Pointer to initial value of the application data
 159:.\source\rte/sc_speed.h ****  * @return RC_t: standard return code, currently only RC_SUCCESS
 160:.\source\rte/sc_speed.h ****  *
 161:.\source\rte/sc_speed.h ****  **/
 162:.\source\rte/sc_speed.h **** inline RC_t RTE_SC_SPEED_init( SC_SPEED_t * const signal, const SC_SPEED_data_t * const value )
 163:.\source\rte/sc_speed.h **** {                                                                                                  
 164:.\source\rte/sc_speed.h **** 
 165:.\source\rte/sc_speed.h ****    RC_t ret = RC_SUCCESS;
 166:.\source\rte/sc_speed.h **** 
 167:.\source\rte/sc_speed.h ****    //Set value and raw value
 168:.\source\rte/sc_speed.h ****    signal->value  = *value;
 169:.\source\rte/sc_speed.h ****    signal->age    = 0;
 170:.\source\rte/sc_speed.h ****    signal->status = RTE_SIGNALSTATUS_INITIALIZED;
 171:.\source\rte/sc_speed.h **** 
 172:.\source\rte/sc_speed.h ****    return ret;
 173:.\source\rte/sc_speed.h **** }
 174:.\source\rte/sc_speed.h **** 
 175:.\source\rte/sc_speed.h **** /**************************************************************************************************
 176:.\source\rte/sc_speed.h **** /* Status and timeout control																						*/
 177:.\source\rte/sc_speed.h **** /**************************************************************************************************
 178:.\source\rte/sc_speed.h **** 
 179:.\source\rte/sc_speed.h **** /**
 180:.\source\rte/sc_speed.h ****  *  Returns the current signal status of the passed signal instance.
 181:.\source\rte/sc_speed.h ****  *
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccNhv63R.s 			page 12


 182:.\source\rte/sc_speed.h ****  * @param  SC_SPEED_t * const signal: Pointer to the signal object
 183:.\source\rte/sc_speed.h ****  * @return  sig_status_t: The current signal status
 184:.\source\rte/sc_speed.h ****  *
 185:.\source\rte/sc_speed.h ****  **/
 186:.\source\rte/sc_speed.h **** inline RTE_signalStatus_t RTE_SC_SPEED_getStatus( const SC_SPEED_t * const signal )
 187:.\source\rte/sc_speed.h **** {
 188:.\source\rte/sc_speed.h ****    return signal->status;
 189:.\source\rte/sc_speed.h **** }
 190:.\source\rte/sc_speed.h **** 
 191:.\source\rte/sc_speed.h **** 
 192:.\source\rte/sc_speed.h **** /**
 193:.\source\rte/sc_speed.h ****  *  Sets a new signal status of the passed signal instance by passing the new status.
 194:.\source\rte/sc_speed.h ****  *
 195:.\source\rte/sc_speed.h ****  * @param  SC_SPEED_t * const signal: Pointer to the signal object
 196:.\source\rte/sc_speed.h ****  * @param  const sig_status_t status: New signal status
 197:.\source\rte/sc_speed.h ****  * @return RC_t: standard return code, currently only RC_SUCCESS
 198:.\source\rte/sc_speed.h ****  *
 199:.\source\rte/sc_speed.h ****  */
 200:.\source\rte/sc_speed.h **** inline RC_t RTE_SC_SPEED_setStatus( SC_SPEED_t * const signal, const RTE_signalStatus_t status )
 201:.\source\rte/sc_speed.h **** {
 202:.\source\rte/sc_speed.h ****    signal->status = status;
 203:.\source\rte/sc_speed.h ****    size_t taskNum=0;
 204:.\source\rte/sc_speed.h ****    
 205:.\source\rte/sc_speed.h ****    //Fire error events in case of invalid state
 206:.\source\rte/sc_speed.h ****    if (signal->status == RTE_SIGNALSTATUS_INVALID)
 207:.\source\rte/sc_speed.h ****    {
 208:.\source\rte/sc_speed.h **** 	    //Pointer to the Taskarray, containing the tasks receiving the onUpdate events
 209:.\source\rte/sc_speed.h **** 		TaskTypeArray* pTaskArray = signal->pSigCfg->onErrorTasks;
 210:.\source\rte/sc_speed.h **** 
 211:.\source\rte/sc_speed.h **** 		if (NULL!=signal->pSigCfg->evOnError && NULL != pTaskArray){
 212:.\source\rte/sc_speed.h **** 			for( taskNum=0 ; taskNum < signal->pSigCfg->onErrorTaskCount ;taskNum++){
 213:.\source\rte/sc_speed.h **** 				TaskType task = (*pTaskArray)[taskNum];
 214:.\source\rte/sc_speed.h **** 				SetEvent( task, signal->pSigCfg->evOnError);
 215:.\source\rte/sc_speed.h **** 			}
 216:.\source\rte/sc_speed.h **** 		}
 217:.\source\rte/sc_speed.h ****    }
 218:.\source\rte/sc_speed.h ****    
 219:.\source\rte/sc_speed.h ****    return RC_SUCCESS;
 220:.\source\rte/sc_speed.h **** }
 221:.\source\rte/sc_speed.h **** 
 222:.\source\rte/sc_speed.h **** 
 223:.\source\rte/sc_speed.h **** /**
 224:.\source\rte/sc_speed.h ****  * Returns the count of refreshing trials (refresh, set or set_raw) that failed.
 225:.\source\rte/sc_speed.h ****  * Prerquisite: The signal is refreshed cyclically
 226:.\source\rte/sc_speed.h ****  *
 227:.\source\rte/sc_speed.h ****  * @param  SC_SPEED_t * const signal: Pointer to the signal object
 228:.\source\rte/sc_speed.h ****  * @return uint32_t: Number of cycles since the signal has been updated for the last time
 229:.\source\rte/sc_speed.h ****  */
 230:.\source\rte/sc_speed.h **** inline uint32_t RTE_SC_SPEED_getAge( const SC_SPEED_t * const signal )
 231:.\source\rte/sc_speed.h **** {
 232:.\source\rte/sc_speed.h ****    return signal->age;
 233:.\source\rte/sc_speed.h **** }
 234:.\source\rte/sc_speed.h **** 
 235:.\source\rte/sc_speed.h **** /**
 236:.\source\rte/sc_speed.h ****  * Should be called by application or driver if no new value can be provided.
 237:.\source\rte/sc_speed.h ****  * @param  SC_SPEED_t * const signal: Pointer to the signal object
 238:.\source\rte/sc_speed.h ****  * @param uint32_t increment: incrementvalue, typically in [ms]
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccNhv63R.s 			page 13


 239:.\source\rte/sc_speed.h ****  * @return void
 240:.\source\rte/sc_speed.h ****  */
 241:.\source\rte/sc_speed.h **** inline void RTE_SC_SPEED_incAge(  SC_SPEED_t * const signal , uint32_t increment)
 242:.\source\rte/sc_speed.h **** {
 243:.\source\rte/sc_speed.h **** 	   //Hack....
 244:.\source\rte/sc_speed.h **** 	   if ( 0xFFFF0000 > (signal->age + increment) )
 245:.\source\rte/sc_speed.h **** 	   {
 246:.\source\rte/sc_speed.h **** 	      signal->age += increment;
 247:.\source\rte/sc_speed.h **** 	   }
 248:.\source\rte/sc_speed.h **** }
 249:.\source\rte/sc_speed.h **** 
 250:.\source\rte/sc_speed.h **** 
 251:.\source\rte/sc_speed.h **** /**************************************************************************************************
 252:.\source\rte/sc_speed.h **** /* Application Data read/write Interface																			*/
 253:.\source\rte/sc_speed.h **** /**************************************************************************************************
 254:.\source\rte/sc_speed.h **** 
 255:.\source\rte/sc_speed.h **** /**
 256:.\source\rte/sc_speed.h ****  * Returns the current application value of the passed signal instance.
 257:.\source\rte/sc_speed.h ****  *
 258:.\source\rte/sc_speed.h ****  * @param  SC_SPEED_t * const signal: Pointer to the signal object
 259:.\source\rte/sc_speed.h ****  * @return sc_speed_data_t: current value of the application data buffer
 260:.\source\rte/sc_speed.h ****  *
 261:.\source\rte/sc_speed.h ****  **/
 262:.\source\rte/sc_speed.h **** inline SC_SPEED_data_t RTE_SC_SPEED_get( const SC_SPEED_t * const signal )
 263:.\source\rte/sc_speed.h **** {               
 264:.\source\rte/sc_speed.h ****    //Todo: Critical region cannot be protected using return values																						
 265:.\source\rte/sc_speed.h ****    return signal->value;                                                                           
 266:.\source\rte/sc_speed.h **** }                                                                                                  
 267:.\source\rte/sc_speed.h ****                                                                                                    
 268:.\source\rte/sc_speed.h **** /**
 269:.\source\rte/sc_speed.h ****  * Returns the current application value of the passed signal instance threadsafe.
 270:.\source\rte/sc_speed.h ****  *
 271:.\source\rte/sc_speed.h ****  * @param  SC_SPEED_t * const signal: Pointer to the signal object
 272:.\source\rte/sc_speed.h ****  * @param  SC_SPEED_data_t* data: Pointer to the return data Pointer to the signal object
 273:.\source\rte/sc_speed.h ****  * @return RC_SUCCESS
 274:.\source\rte/sc_speed.h ****  *
 275:.\source\rte/sc_speed.h ****  **/
 276:.\source\rte/sc_speed.h **** inline RC_t RTE_SC_SPEED_getThreadSafe( const SC_SPEED_t * const signal, SC_SPEED_data_t * const da
 277:.\source\rte/sc_speed.h **** {    
 278:.\source\rte/sc_speed.h ****    if (TRUE == signal->pSigCfg->resourceActive) GetResource(signal->pSigCfg->resource);
 279:.\source\rte/sc_speed.h ****    *data = signal->value;
 280:.\source\rte/sc_speed.h ****    if (TRUE == signal->pSigCfg->resourceActive) ReleaseResource(signal->pSigCfg->resource);        
 281:.\source\rte/sc_speed.h **** 
 282:.\source\rte/sc_speed.h ****    return RC_SUCCESS;                                                                   
 283:.\source\rte/sc_speed.h ****    
 284:.\source\rte/sc_speed.h **** }                                                                                                  
 285:.\source\rte/sc_speed.h ****                                                                                                    
 286:.\source\rte/sc_speed.h **** /**
 287:.\source\rte/sc_speed.h ****  * Sets a new application value to the passed signal instance by passing the new value.
 288:.\source\rte/sc_speed.h ****  * The corresponding driver raw value will be calculated immediately by using the default conversio
 289:.\source\rte/sc_speed.h ****  * signal specific scaling function.
 290:.\source\rte/sc_speed.h ****  * The signal age will be set to 0 and the new status will be 'RTE_SIGNALSTATUS_VALID'.
 291:.\source\rte/sc_speed.h ****  *
 292:.\source\rte/sc_speed.h ****  * @param  SC_SPEED_t * const signal: Pointer to the signal object
 293:.\source\rte/sc_speed.h ****  * @param  sc_speed_data_t const value: value for the application data buffer
 294:.\source\rte/sc_speed.h ****  * @return RC_t: standard return code, currently only RC_SUCCESS
 295:.\source\rte/sc_speed.h ****  *
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccNhv63R.s 			page 14


 296:.\source\rte/sc_speed.h ****  **/
 297:.\source\rte/sc_speed.h **** inline RC_t RTE_SC_SPEED_set(SC_SPEED_t * const signal, const SC_SPEED_data_t value  )
 298:.\source\rte/sc_speed.h **** {
 299:.\source\rte/sc_speed.h **** 
 300:.\source\rte/sc_speed.h ****    RC_t ret = RC_SUCCESS;
 301:.\source\rte/sc_speed.h ****    size_t taskNum=0;
 302:.\source\rte/sc_speed.h **** 
 303:.\source\rte/sc_speed.h **** 
 304:.\source\rte/sc_speed.h ****    if (TRUE == signal->pSigCfg->resourceActive) GetResource(signal->pSigCfg->resource);
  95              		.loc 3 304 0
  96 0048 204B     		ldr	r3, .L12+12
  97 004a 9A68     		ldr	r2, [r3, #8]
 305:.\source\rte/sc_speed.h ****    signal->value  = value;
  98              		.loc 3 305 0
  99 004c 1970     		strb	r1, [r3]
 306:.\source\rte/sc_speed.h ****    signal->age    = 0;
 100              		.loc 3 306 0
 101 004e 0021     		movs	r1, #0
 102 0050 5960     		str	r1, [r3, #4]
 307:.\source\rte/sc_speed.h ****    signal->status = RTE_SIGNALSTATUS_VALID;
 103              		.loc 3 307 0
 104 0052 0221     		movs	r1, #2
 105 0054 5970     		strb	r1, [r3, #1]
 308:.\source\rte/sc_speed.h ****    if (TRUE == signal->pSigCfg->resourceActive) ReleaseResource(signal->pSigCfg->resource);
 309:.\source\rte/sc_speed.h **** 
 310:.\source\rte/sc_speed.h ****    //Pointer to the Taskarray, containing the tasks receiving the onUpdate events
 311:.\source\rte/sc_speed.h ****    TaskTypeArray* pTaskArray = signal->pSigCfg->onUpdateTasks;
 106              		.loc 3 311 0
 107 0056 5569     		ldr	r5, [r2, #20]
 108              	.LVL8:
 312:.\source\rte/sc_speed.h **** 
 313:.\source\rte/sc_speed.h ****    if (NULL!=signal->pSigCfg->evOnUpdate && NULL != pTaskArray){
 109              		.loc 3 313 0
 110 0058 9368     		ldr	r3, [r2, #8]
 111 005a 73B1     		cbz	r3, .L5
 112 005c 3DB9     		cbnz	r5, .L10
 113 005e 0CE0     		b	.L5
 114              	.LVL9:
 115              	.L7:
 116              	.LBB19:
 314:.\source\rte/sc_speed.h ****       for( taskNum=0 ; taskNum < signal->pSigCfg->onUpdateTaskCount ;taskNum++){
 315:.\source\rte/sc_speed.h **** 		  
 316:.\source\rte/sc_speed.h ****           TaskType task = (*pTaskArray)[taskNum];
 317:.\source\rte/sc_speed.h **** 	      SetEvent( task, signal->pSigCfg->evOnUpdate);
 117              		.loc 3 317 0
 118 0060 9968     		ldr	r1, [r3, #8]
 119 0062 55F82400 		ldr	r0, [r5, r4, lsl #2]
 120 0066 FFF7FEFF 		bl	EE_oo_SetEvent
 121              	.LVL10:
 122              	.LBE19:
 314:.\source\rte/sc_speed.h ****       for( taskNum=0 ; taskNum < signal->pSigCfg->onUpdateTaskCount ;taskNum++){
 123              		.loc 3 314 0
 124 006a 0134     		adds	r4, r4, #1
 125              	.LVL11:
 126 006c 00E0     		b	.L6
 127              	.LVL12:
 128              	.L10:
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccNhv63R.s 			page 15


 313:.\source\rte/sc_speed.h ****       for( taskNum=0 ; taskNum < signal->pSigCfg->onUpdateTaskCount ;taskNum++){
 129              		.loc 3 313 0
 130 006e 0024     		movs	r4, #0
 131              	.LVL13:
 132              	.L6:
 314:.\source\rte/sc_speed.h ****       for( taskNum=0 ; taskNum < signal->pSigCfg->onUpdateTaskCount ;taskNum++){
 133              		.loc 3 314 0
 134 0070 164B     		ldr	r3, .L12+12
 135 0072 9B68     		ldr	r3, [r3, #8]
 136 0074 1A69     		ldr	r2, [r3, #16]
 137 0076 9442     		cmp	r4, r2
 138 0078 F2D3     		bcc	.L7
 139              	.LVL14:
 140              	.L5:
 141              	.LBE18:
 142              	.LBE17:
  88:source\asw/swc_control.c ****     {
  89:source\asw/swc_control.c ****         /**
  90:source\asw/swc_control.c ****          * Updates the speed into the speed object.
  91:source\asw/swc_control.c ****          **/
  92:source\asw/swc_control.c ****         RTE_SC_SPEED_set(&SO_SPEED_signal, speedValue);
  93:source\asw/swc_control.c ****         
  94:source\asw/swc_control.c ****         /**
  95:source\asw/swc_control.c ****          * Display Speed value.
  96:source\asw/swc_control.c ****          **/
  97:source\asw/swc_control.c ****         UART_LOG_PutString("Speed : ");
 143              		.loc 1 97 0
 144 007a 1548     		ldr	r0, .L12+16
 145 007c FFF7FEFF 		bl	UART_LOG_PutString
 146              	.LVL15:
  98:source\asw/swc_control.c ****         intToASCII((uint32_t)RTE_SC_SPEED_get(&SO_SPEED_signal).speed, (uint8_t*)&asciiConvert, 4);
 147              		.loc 1 98 0
 148 0080 144C     		ldr	r4, .L12+20
 149 0082 0422     		movs	r2, #4
 150 0084 2146     		mov	r1, r4
 151 0086 114B     		ldr	r3, .L12+12
 152 0088 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 153 008a FFF7FEFF 		bl	intToASCII
 154              	.LVL16:
  99:source\asw/swc_control.c ****         UART_LOG_PutString(asciiConvert);
 155              		.loc 1 99 0
 156 008e 2046     		mov	r0, r4
 157 0090 FFF7FEFF 		bl	UART_LOG_PutString
 158              	.LVL17:
 100:source\asw/swc_control.c ****         UART_LOG_PutString("\n");
 159              		.loc 1 100 0
 160 0094 1048     		ldr	r0, .L12+24
 161 0096 FFF7FEFF 		bl	UART_LOG_PutString
 162              	.LVL18:
 163 009a 0FE0     		b	.L1
 164              	.LVL19:
 165              	.L4:
 166              	.LBB20:
 167              	.LBB21:
 232:.\source\rte/sc_speed.h **** }
 168              		.loc 3 232 0
 169 009c 0B4B     		ldr	r3, .L12+12
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccNhv63R.s 			page 16


 170 009e 5A68     		ldr	r2, [r3, #4]
 171              	.LVL20:
 172              	.LBE21:
 173              	.LBE20:
 101:source\asw/swc_control.c ****         
 102:source\asw/swc_control.c ****     }
 103:source\asw/swc_control.c ****     else
 104:source\asw/swc_control.c ****     {
 105:source\asw/swc_control.c ****         // if(RTE_SC_SPEED_getAge(&SO_SPEED_signal) >= 2000) -- test case where watchdog timeout do
 106:source\asw/swc_control.c ****         if(RTE_SC_SPEED_getAge(&SO_SPEED_signal) >= 5000) // test case for watchdog timeout
 174              		.loc 1 106 0
 175 00a0 41F28733 		movw	r3, #4999
 176 00a4 9A42     		cmp	r2, r3
 177 00a6 06D9     		bls	.L9
 107:source\asw/swc_control.c ****         {
 108:source\asw/swc_control.c ****             /**
 109:source\asw/swc_control.c ****              * Setting of the speed will continue after 5s.
 110:source\asw/swc_control.c ****              * Fails to continue if the watchdog timeout is lesser than 5s as the system will then 
 111:source\asw/swc_control.c ****              **/
 112:source\asw/swc_control.c ****             wdt_test = FALSE;
 178              		.loc 1 112 0
 179 00a8 0022     		movs	r2, #0
 180 00aa 074B     		ldr	r3, .L12+8
 181 00ac 1A70     		strb	r2, [r3]
 113:source\asw/swc_control.c ****             UART_LOG_PutString("Watchdog timer did not overflow. \n");   
 182              		.loc 1 113 0
 183 00ae 0B48     		ldr	r0, .L12+28
 184 00b0 FFF7FEFF 		bl	UART_LOG_PutString
 185              	.LVL21:
 186 00b4 02E0     		b	.L1
 187              	.L9:
 114:source\asw/swc_control.c ****         }
 115:source\asw/swc_control.c ****         else
 116:source\asw/swc_control.c ****         {
 117:source\asw/swc_control.c ****             UART_LOG_PutString("Watchdog timer testing started ... \n");   
 188              		.loc 1 117 0
 189 00b6 0A48     		ldr	r0, .L12+32
 190 00b8 FFF7FEFF 		bl	UART_LOG_PutString
 191              	.LVL22:
 192              	.L1:
 118:source\asw/swc_control.c ****         }
 119:source\asw/swc_control.c ****     }
 120:source\asw/swc_control.c **** 
 121:source\asw/swc_control.c ****     /* USER CODE END CONTROL_calcControl_run */
 122:source\asw/swc_control.c **** }
 193              		.loc 1 122 0
 194 00bc 05B0     		add	sp, sp, #20
 195              		.cfi_def_cfa_offset 12
 196              		@ sp needed
 197 00be 30BD     		pop	{r4, r5, pc}
 198              	.L13:
 199              		.align	2
 200              	.L12:
 201 00c0 00000000 		.word	SO_JOYSTICK_signal
 202 00c4 00000000 		.word	.LANCHOR0
 203 00c8 00000000 		.word	wdt_test
 204 00cc 00000000 		.word	SO_SPEED_signal
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccNhv63R.s 			page 17


 205 00d0 00000000 		.word	.LC0
 206 00d4 04000000 		.word	.LANCHOR0+4
 207 00d8 0C000000 		.word	.LC1
 208 00dc 10000000 		.word	.LC2
 209 00e0 34000000 		.word	.LC3
 210              		.cfi_endproc
 211              	.LFE150:
 212              		.size	CONTROL_calcControl_run, .-CONTROL_calcControl_run
 213              		.section	.rodata.str1.4,"aMS",%progbits,1
 214              		.align	2
 215              	.LC0:
 216 0000 53706565 		.ascii	"Speed : \000"
 216      64203A20 
 216      00
 217 0009 000000   		.space	3
 218              	.LC1:
 219 000c 0A00     		.ascii	"\012\000"
 220 000e 0000     		.space	2
 221              	.LC2:
 222 0010 57617463 		.ascii	"Watchdog timer did not overflow. \012\000"
 222      68646F67 
 222      2074696D 
 222      65722064 
 222      6964206E 
 223 0033 00       		.space	1
 224              	.LC3:
 225 0034 57617463 		.ascii	"Watchdog timer testing started ... \012\000"
 225      68646F67 
 225      2074696D 
 225      65722074 
 225      65737469 
 226              		.bss
 227              		.align	2
 228              		.set	.LANCHOR0,. + 0
 229              		.type	speedValue.6971, %object
 230              		.size	speedValue.6971, 1
 231              	speedValue.6971:
 232 0000 00       		.space	1
 233 0001 000000   		.space	3
 234              		.type	asciiConvert.6973, %object
 235              		.size	asciiConvert.6973, 30
 236              	asciiConvert.6973:
 237 0004 00000000 		.space	30
 237      00000000 
 237      00000000 
 237      00000000 
 237      00000000 
 238              		.text
 239              	.Letext0:
 240              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 241              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 242              		.file 6 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 243              		.file 7 "Generated_Source\\PSoC5/ErikaOS_common_ee_types.inc"
 244              		.file 8 "Generated_Source\\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc"
 245              		.file 9 "Generated_Source\\PSoC5/ErikaOS_ee_oo_common.inc"
 246              		.file 10 ".\\source\\bsw/global.h"
 247              		.file 11 ".\\source\\rte/rte_types.h"
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccNhv63R.s 			page 18


 248              		.file 12 ".\\source\\rte/rte.h"
 249              		.file 13 ".\\source\\rte/sc_joystick_type.h"
 250              		.file 14 ".\\source\\rte/sc_speed_type.h"
 251              		.file 15 "Generated_Source\\PSoC5/ErikaOS_ee_oo_intfunc.inc"
 252              		.file 16 "Generated_Source\\PSoC5/ErikaOS_cortex_mx_ee_context.inc"
 253              		.file 17 "Generated_Source\\PSoC5/ErikaOS_common_ee_primitives.inc"
 254              		.file 18 "Generated_Source\\PSoC5/core_cm3.h"
 255              		.file 19 ".\\source\\bsw/watchdog.h"
 256              		.file 20 ".\\source\\rte/sp_common.h"
 257              		.file 21 "Generated_Source\\PSoC5/ErikaOS_ee_oo_kernel.inc"
 258              		.file 22 "Generated_Source\\PSoC5/UART_LOG.h"
 259              		.file 23 ".\\source\\bsw/intToASCII.h"
 260              		.section	.debug_info,"",%progbits
 261              	.Ldebug_info0:
 262 0000 70080000 		.4byte	0x870
 263 0004 0400     		.2byte	0x4
 264 0006 00000000 		.4byte	.Ldebug_abbrev0
 265 000a 04       		.byte	0x4
 266 000b 01       		.uleb128 0x1
 267 000c 37050000 		.4byte	.LASF118
 268 0010 0C       		.byte	0xc
 269 0011 2C020000 		.4byte	.LASF119
 270 0015 2D000000 		.4byte	.LASF120
 271 0019 00000000 		.4byte	.Ldebug_ranges0+0
 272 001d 00000000 		.4byte	0
 273 0021 00000000 		.4byte	.Ldebug_line0
 274 0025 02       		.uleb128 0x2
 275 0026 01       		.byte	0x1
 276 0027 06       		.byte	0x6
 277 0028 88000000 		.4byte	.LASF0
 278 002c 03       		.uleb128 0x3
 279 002d 94000000 		.4byte	.LASF4
 280 0031 04       		.byte	0x4
 281 0032 1D       		.byte	0x1d
 282 0033 37000000 		.4byte	0x37
 283 0037 02       		.uleb128 0x2
 284 0038 01       		.byte	0x1
 285 0039 08       		.byte	0x8
 286 003a E0040000 		.4byte	.LASF1
 287 003e 02       		.uleb128 0x2
 288 003f 02       		.byte	0x2
 289 0040 05       		.byte	0x5
 290 0041 F7040000 		.4byte	.LASF2
 291 0045 02       		.uleb128 0x2
 292 0046 02       		.byte	0x2
 293 0047 07       		.byte	0x7
 294 0048 EC060000 		.4byte	.LASF3
 295 004c 03       		.uleb128 0x3
 296 004d 95060000 		.4byte	.LASF5
 297 0051 04       		.byte	0x4
 298 0052 3F       		.byte	0x3f
 299 0053 57000000 		.4byte	0x57
 300 0057 02       		.uleb128 0x2
 301 0058 04       		.byte	0x4
 302 0059 05       		.byte	0x5
 303 005a 8B010000 		.4byte	.LASF6
 304 005e 03       		.uleb128 0x3
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccNhv63R.s 			page 19


 305 005f 21020000 		.4byte	.LASF7
 306 0063 04       		.byte	0x4
 307 0064 41       		.byte	0x41
 308 0065 69000000 		.4byte	0x69
 309 0069 02       		.uleb128 0x2
 310 006a 04       		.byte	0x4
 311 006b 07       		.byte	0x7
 312 006c FD020000 		.4byte	.LASF8
 313 0070 02       		.uleb128 0x2
 314 0071 08       		.byte	0x8
 315 0072 05       		.byte	0x5
 316 0073 26010000 		.4byte	.LASF9
 317 0077 02       		.uleb128 0x2
 318 0078 08       		.byte	0x8
 319 0079 07       		.byte	0x7
 320 007a AB000000 		.4byte	.LASF10
 321 007e 04       		.uleb128 0x4
 322 007f 04       		.byte	0x4
 323 0080 05       		.byte	0x5
 324 0081 696E7400 		.ascii	"int\000"
 325 0085 02       		.uleb128 0x2
 326 0086 04       		.byte	0x4
 327 0087 07       		.byte	0x7
 328 0088 78020000 		.4byte	.LASF11
 329 008c 03       		.uleb128 0x3
 330 008d 6A070000 		.4byte	.LASF12
 331 0091 05       		.byte	0x5
 332 0092 18       		.byte	0x18
 333 0093 2C000000 		.4byte	0x2c
 334 0097 03       		.uleb128 0x3
 335 0098 D8040000 		.4byte	.LASF13
 336 009c 05       		.byte	0x5
 337 009d 2C       		.byte	0x2c
 338 009e 4C000000 		.4byte	0x4c
 339 00a2 03       		.uleb128 0x3
 340 00a3 11060000 		.4byte	.LASF14
 341 00a7 05       		.byte	0x5
 342 00a8 30       		.byte	0x30
 343 00a9 5E000000 		.4byte	0x5e
 344 00ad 02       		.uleb128 0x2
 345 00ae 04       		.byte	0x4
 346 00af 04       		.byte	0x4
 347 00b0 86040000 		.4byte	.LASF15
 348 00b4 02       		.uleb128 0x2
 349 00b5 08       		.byte	0x8
 350 00b6 04       		.byte	0x4
 351 00b7 D8010000 		.4byte	.LASF16
 352 00bb 02       		.uleb128 0x2
 353 00bc 01       		.byte	0x1
 354 00bd 08       		.byte	0x8
 355 00be 50060000 		.4byte	.LASF17
 356 00c2 03       		.uleb128 0x3
 357 00c3 1B000000 		.4byte	.LASF18
 358 00c7 06       		.byte	0x6
 359 00c8 D8       		.byte	0xd8
 360 00c9 85000000 		.4byte	0x85
 361 00cd 02       		.uleb128 0x2
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccNhv63R.s 			page 20


 362 00ce 08       		.byte	0x8
 363 00cf 04       		.byte	0x4
 364 00d0 44060000 		.4byte	.LASF19
 365 00d4 03       		.uleb128 0x3
 366 00d5 61070000 		.4byte	.LASF20
 367 00d9 07       		.byte	0x7
 368 00da 53       		.byte	0x53
 369 00db 7E000000 		.4byte	0x7e
 370 00df 03       		.uleb128 0x3
 371 00e0 48070000 		.4byte	.LASF21
 372 00e4 07       		.byte	0x7
 373 00e5 54       		.byte	0x54
 374 00e6 85000000 		.4byte	0x85
 375 00ea 03       		.uleb128 0x3
 376 00eb A3000000 		.4byte	.LASF22
 377 00ef 08       		.byte	0x8
 378 00f0 4D       		.byte	0x4d
 379 00f1 DF000000 		.4byte	0xdf
 380 00f5 03       		.uleb128 0x3
 381 00f6 AE070000 		.4byte	.LASF23
 382 00fa 08       		.byte	0x8
 383 00fb 4F       		.byte	0x4f
 384 00fc DF000000 		.4byte	0xdf
 385 0100 03       		.uleb128 0x3
 386 0101 76040000 		.4byte	.LASF24
 387 0105 08       		.byte	0x8
 388 0106 78       		.byte	0x78
 389 0107 D4000000 		.4byte	0xd4
 390 010b 05       		.uleb128 0x5
 391 010c 32030000 		.4byte	.LASF25
 392 0110 09       		.byte	0x9
 393 0111 F701     		.2byte	0x1f7
 394 0113 00010000 		.4byte	0x100
 395 0117 05       		.uleb128 0x5
 396 0118 46010000 		.4byte	.LASF26
 397 011c 09       		.byte	0x9
 398 011d 2C02     		.2byte	0x22c
 399 011f EA000000 		.4byte	0xea
 400 0123 02       		.uleb128 0x2
 401 0124 04       		.byte	0x4
 402 0125 07       		.byte	0x7
 403 0126 54010000 		.4byte	.LASF27
 404 012a 03       		.uleb128 0x3
 405 012b 28070000 		.4byte	.LASF28
 406 012f 0A       		.byte	0xa
 407 0130 90       		.byte	0x90
 408 0131 25000000 		.4byte	0x25
 409 0135 03       		.uleb128 0x3
 410 0136 1A040000 		.4byte	.LASF29
 411 013a 0A       		.byte	0xa
 412 013b 9C       		.byte	0x9c
 413 013c 37000000 		.4byte	0x37
 414 0140 06       		.uleb128 0x6
 415 0141 01       		.byte	0x1
 416 0142 25000000 		.4byte	0x25
 417 0146 0A       		.byte	0xa
 418 0147 CF       		.byte	0xcf
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccNhv63R.s 			page 21


 419 0148 E9010000 		.4byte	0x1e9
 420 014c 07       		.uleb128 0x7
 421 014d 27030000 		.4byte	.LASF30
 422 0151 00       		.byte	0
 423 0152 08       		.uleb128 0x8
 424 0153 3B030000 		.4byte	.LASF31
 425 0157 7F       		.sleb128 -1
 426 0158 08       		.uleb128 0x8
 427 0159 0F030000 		.4byte	.LASF32
 428 015d 7E       		.sleb128 -2
 429 015e 08       		.uleb128 0x8
 430 015f E7050000 		.4byte	.LASF33
 431 0163 7D       		.sleb128 -3
 432 0164 08       		.uleb128 0x8
 433 0165 F1030000 		.4byte	.LASF34
 434 0169 7C       		.sleb128 -4
 435 016a 08       		.uleb128 0x8
 436 016b 52070000 		.4byte	.LASF35
 437 016f 7B       		.sleb128 -5
 438 0170 08       		.uleb128 0x8
 439 0171 C3060000 		.4byte	.LASF36
 440 0175 7A       		.sleb128 -6
 441 0176 08       		.uleb128 0x8
 442 0177 34010000 		.4byte	.LASF37
 443 017b 79       		.sleb128 -7
 444 017c 08       		.uleb128 0x8
 445 017d 44030000 		.4byte	.LASF38
 446 0181 78       		.sleb128 -8
 447 0182 08       		.uleb128 0x8
 448 0183 75010000 		.4byte	.LASF39
 449 0187 77       		.sleb128 -9
 450 0188 08       		.uleb128 0x8
 451 0189 A5040000 		.4byte	.LASF40
 452 018d 76       		.sleb128 -10
 453 018e 08       		.uleb128 0x8
 454 018f 00000000 		.4byte	.LASF41
 455 0193 75       		.sleb128 -11
 456 0194 08       		.uleb128 0x8
 457 0195 90030000 		.4byte	.LASF42
 458 0199 74       		.sleb128 -12
 459 019a 08       		.uleb128 0x8
 460 019b EB020000 		.4byte	.LASF43
 461 019f 73       		.sleb128 -13
 462 01a0 08       		.uleb128 0x8
 463 01a1 31060000 		.4byte	.LASF44
 464 01a5 72       		.sleb128 -14
 465 01a6 08       		.uleb128 0x8
 466 01a7 C4040000 		.4byte	.LASF45
 467 01ab 71       		.sleb128 -15
 468 01ac 08       		.uleb128 0x8
 469 01ad 37070000 		.4byte	.LASF46
 470 01b1 70       		.sleb128 -16
 471 01b2 08       		.uleb128 0x8
 472 01b3 62040000 		.4byte	.LASF47
 473 01b7 6F       		.sleb128 -17
 474 01b8 08       		.uleb128 0x8
 475 01b9 C3010000 		.4byte	.LASF48
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccNhv63R.s 			page 22


 476 01bd 6E       		.sleb128 -18
 477 01be 08       		.uleb128 0x8
 478 01bf 7D030000 		.4byte	.LASF49
 479 01c3 6D       		.sleb128 -19
 480 01c4 08       		.uleb128 0x8
 481 01c5 6A030000 		.4byte	.LASF50
 482 01c9 6C       		.sleb128 -20
 483 01ca 08       		.uleb128 0x8
 484 01cb D1000000 		.4byte	.LASF51
 485 01cf 6B       		.sleb128 -21
 486 01d0 08       		.uleb128 0x8
 487 01d1 50040000 		.4byte	.LASF52
 488 01d5 6A       		.sleb128 -22
 489 01d6 08       		.uleb128 0x8
 490 01d7 45020000 		.4byte	.LASF53
 491 01db 69       		.sleb128 -23
 492 01dc 08       		.uleb128 0x8
 493 01dd BC020000 		.4byte	.LASF54
 494 01e1 68       		.sleb128 -24
 495 01e2 08       		.uleb128 0x8
 496 01e3 9F060000 		.4byte	.LASF55
 497 01e7 67       		.sleb128 -25
 498 01e8 00       		.byte	0
 499 01e9 03       		.uleb128 0x3
 500 01ea 9E000000 		.4byte	.LASF56
 501 01ee 0A       		.byte	0xa
 502 01ef EA       		.byte	0xea
 503 01f0 40010000 		.4byte	0x140
 504 01f4 03       		.uleb128 0x3
 505 01f5 FF060000 		.4byte	.LASF57
 506 01f9 0B       		.byte	0xb
 507 01fa 19       		.byte	0x19
 508 01fb FF010000 		.4byte	0x1ff
 509 01ff 09       		.uleb128 0x9
 510 0200 0B010000 		.4byte	0x10b
 511 0204 0A020000 		.4byte	0x20a
 512 0208 0A       		.uleb128 0xa
 513 0209 00       		.byte	0
 514 020a 03       		.uleb128 0x3
 515 020b 1D030000 		.4byte	.LASF58
 516 020f 0B       		.byte	0xb
 517 0210 21       		.byte	0x21
 518 0211 17010000 		.4byte	0x117
 519 0215 03       		.uleb128 0x3
 520 0216 7B000000 		.4byte	.LASF59
 521 021a 0B       		.byte	0xb
 522 021b 2D       		.byte	0x2d
 523 021c A2000000 		.4byte	0xa2
 524 0220 06       		.uleb128 0x6
 525 0221 01       		.byte	0x1
 526 0222 37000000 		.4byte	0x37
 527 0226 0C       		.byte	0xc
 528 0227 59       		.byte	0x59
 529 0228 45020000 		.4byte	0x245
 530 022c 07       		.uleb128 0x7
 531 022d 94010000 		.4byte	.LASF60
 532 0231 00       		.byte	0
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccNhv63R.s 			page 23


 533 0232 07       		.uleb128 0x7
 534 0233 55060000 		.4byte	.LASF61
 535 0237 01       		.byte	0x1
 536 0238 07       		.uleb128 0x7
 537 0239 DF010000 		.4byte	.LASF62
 538 023d 02       		.byte	0x2
 539 023e 07       		.uleb128 0x7
 540 023f 01040000 		.4byte	.LASF63
 541 0243 03       		.byte	0x3
 542 0244 00       		.byte	0
 543 0245 03       		.uleb128 0x3
 544 0246 D9060000 		.4byte	.LASF64
 545 024a 0C       		.byte	0xc
 546 024b 5E       		.byte	0x5e
 547 024c 20020000 		.4byte	0x220
 548 0250 0B       		.uleb128 0xb
 549 0251 02       		.byte	0x2
 550 0252 0D       		.byte	0xd
 551 0253 1F       		.byte	0x1f
 552 0254 71020000 		.4byte	0x271
 553 0258 0C       		.uleb128 0xc
 554 0259 AD010000 		.4byte	.LASF65
 555 025d 0D       		.byte	0xd
 556 025e 21       		.byte	0x21
 557 025f 2A010000 		.4byte	0x12a
 558 0263 00       		.byte	0
 559 0264 0C       		.uleb128 0xc
 560 0265 B8010000 		.4byte	.LASF66
 561 0269 0D       		.byte	0xd
 562 026a 22       		.byte	0x22
 563 026b 2A010000 		.4byte	0x12a
 564 026f 01       		.byte	0x1
 565 0270 00       		.byte	0
 566 0271 03       		.uleb128 0x3
 567 0272 DE030000 		.4byte	.LASF67
 568 0276 0D       		.byte	0xd
 569 0277 25       		.byte	0x25
 570 0278 50020000 		.4byte	0x250
 571 027c 03       		.uleb128 0x3
 572 027d C7030000 		.4byte	.LASF68
 573 0281 02       		.byte	0x2
 574 0282 27       		.byte	0x27
 575 0283 87020000 		.4byte	0x287
 576 0287 0D       		.uleb128 0xd
 577 0288 04       		.byte	0x4
 578 0289 8D020000 		.4byte	0x28d
 579 028d 0E       		.uleb128 0xe
 580 028e E9010000 		.4byte	0x1e9
 581 0292 9C020000 		.4byte	0x29c
 582 0296 0F       		.uleb128 0xf
 583 0297 A2020000 		.4byte	0x2a2
 584 029b 00       		.byte	0
 585 029c 0D       		.uleb128 0xd
 586 029d 04       		.byte	0x4
 587 029e 71020000 		.4byte	0x271
 588 02a2 10       		.uleb128 0x10
 589 02a3 9C020000 		.4byte	0x29c
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccNhv63R.s 			page 24


 590 02a7 03       		.uleb128 0x3
 591 02a8 01050000 		.4byte	.LASF69
 592 02ac 02       		.byte	0x2
 593 02ad 2D       		.byte	0x2d
 594 02ae B2020000 		.4byte	0x2b2
 595 02b2 0D       		.uleb128 0xd
 596 02b3 04       		.byte	0x4
 597 02b4 B8020000 		.4byte	0x2b8
 598 02b8 0E       		.uleb128 0xe
 599 02b9 E9010000 		.4byte	0x1e9
 600 02bd C7020000 		.4byte	0x2c7
 601 02c1 0F       		.uleb128 0xf
 602 02c2 D2020000 		.4byte	0x2d2
 603 02c6 00       		.byte	0
 604 02c7 0D       		.uleb128 0xd
 605 02c8 04       		.byte	0x4
 606 02c9 CD020000 		.4byte	0x2cd
 607 02cd 10       		.uleb128 0x10
 608 02ce 71020000 		.4byte	0x271
 609 02d2 10       		.uleb128 0x10
 610 02d3 C7020000 		.4byte	0x2c7
 611 02d7 11       		.uleb128 0x11
 612 02d8 98020000 		.4byte	.LASF81
 613 02dc 28       		.byte	0x28
 614 02dd 02       		.byte	0x2
 615 02de 37       		.byte	0x37
 616 02df 5C030000 		.4byte	0x35c
 617 02e3 0C       		.uleb128 0xc
 618 02e4 7D040000 		.4byte	.LASF70
 619 02e8 02       		.byte	0x2
 620 02e9 3C       		.byte	0x3c
 621 02ea 5C030000 		.4byte	0x35c
 622 02ee 00       		.byte	0
 623 02ef 0C       		.uleb128 0xc
 624 02f0 E1020000 		.4byte	.LASF71
 625 02f4 02       		.byte	0x2
 626 02f5 41       		.byte	0x41
 627 02f6 61030000 		.4byte	0x361
 628 02fa 04       		.byte	0x4
 629 02fb 0C       		.uleb128 0xc
 630 02fc 5D010000 		.4byte	.LASF72
 631 0300 02       		.byte	0x2
 632 0301 46       		.byte	0x46
 633 0302 66030000 		.4byte	0x366
 634 0306 08       		.byte	0x8
 635 0307 0C       		.uleb128 0xc
 636 0308 DD050000 		.4byte	.LASF73
 637 030c 02       		.byte	0x2
 638 030d 4C       		.byte	0x4c
 639 030e 66030000 		.4byte	0x366
 640 0312 0C       		.byte	0xc
 641 0313 0C       		.uleb128 0xc
 642 0314 F6010000 		.4byte	.LASF74
 643 0318 02       		.byte	0x2
 644 0319 51       		.byte	0x51
 645 031a 6B030000 		.4byte	0x36b
 646 031e 10       		.byte	0x10
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccNhv63R.s 			page 25


 647 031f 0C       		.uleb128 0xc
 648 0320 19050000 		.4byte	.LASF75
 649 0324 02       		.byte	0x2
 650 0325 56       		.byte	0x56
 651 0326 76030000 		.4byte	0x376
 652 032a 14       		.byte	0x14
 653 032b 0C       		.uleb128 0xc
 654 032c B3040000 		.4byte	.LASF76
 655 0330 02       		.byte	0x2
 656 0331 5B       		.byte	0x5b
 657 0332 6B030000 		.4byte	0x36b
 658 0336 18       		.byte	0x18
 659 0337 0C       		.uleb128 0xc
 660 0338 A1070000 		.4byte	.LASF77
 661 033c 02       		.byte	0x2
 662 033d 60       		.byte	0x60
 663 033e 76030000 		.4byte	0x376
 664 0342 1C       		.byte	0x1c
 665 0343 0C       		.uleb128 0xc
 666 0344 7B060000 		.4byte	.LASF78
 667 0348 02       		.byte	0x2
 668 0349 66       		.byte	0x66
 669 034a 7B030000 		.4byte	0x37b
 670 034e 20       		.byte	0x20
 671 034f 0C       		.uleb128 0xc
 672 0350 12000000 		.4byte	.LASF79
 673 0354 02       		.byte	0x2
 674 0355 6B       		.byte	0x6b
 675 0356 80030000 		.4byte	0x380
 676 035a 24       		.byte	0x24
 677 035b 00       		.byte	0
 678 035c 10       		.uleb128 0x10
 679 035d 7C020000 		.4byte	0x27c
 680 0361 10       		.uleb128 0x10
 681 0362 A7020000 		.4byte	0x2a7
 682 0366 10       		.uleb128 0x10
 683 0367 17010000 		.4byte	0x117
 684 036b 10       		.uleb128 0x10
 685 036c C2000000 		.4byte	0xc2
 686 0370 0D       		.uleb128 0xd
 687 0371 04       		.byte	0x4
 688 0372 F4010000 		.4byte	0x1f4
 689 0376 10       		.uleb128 0x10
 690 0377 70030000 		.4byte	0x370
 691 037b 10       		.uleb128 0x10
 692 037c 35010000 		.4byte	0x135
 693 0380 10       		.uleb128 0x10
 694 0381 15020000 		.4byte	0x215
 695 0385 03       		.uleb128 0x3
 696 0386 AA020000 		.4byte	.LASF80
 697 038a 02       		.byte	0x2
 698 038b 6E       		.byte	0x6e
 699 038c 90030000 		.4byte	0x390
 700 0390 10       		.uleb128 0x10
 701 0391 D7020000 		.4byte	0x2d7
 702 0395 11       		.uleb128 0x11
 703 0396 F5050000 		.4byte	.LASF82
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccNhv63R.s 			page 26


 704 039a 0C       		.byte	0xc
 705 039b 02       		.byte	0x2
 706 039c 7A       		.byte	0x7a
 707 039d D2030000 		.4byte	0x3d2
 708 03a1 0C       		.uleb128 0xc
 709 03a2 5C020000 		.4byte	.LASF83
 710 03a6 02       		.byte	0x2
 711 03a7 80       		.byte	0x80
 712 03a8 71020000 		.4byte	0x271
 713 03ac 00       		.byte	0
 714 03ad 0C       		.uleb128 0xc
 715 03ae 30070000 		.4byte	.LASF84
 716 03b2 02       		.byte	0x2
 717 03b3 85       		.byte	0x85
 718 03b4 45020000 		.4byte	0x245
 719 03b8 02       		.byte	0x2
 720 03b9 12       		.uleb128 0x12
 721 03ba 61676500 		.ascii	"age\000"
 722 03be 02       		.byte	0x2
 723 03bf 8A       		.byte	0x8a
 724 03c0 A2000000 		.4byte	0xa2
 725 03c4 04       		.byte	0x4
 726 03c5 0C       		.uleb128 0xc
 727 03c6 8C040000 		.4byte	.LASF85
 728 03ca 02       		.byte	0x2
 729 03cb 8F       		.byte	0x8f
 730 03cc D8030000 		.4byte	0x3d8
 731 03d0 08       		.byte	0x8
 732 03d1 00       		.byte	0
 733 03d2 0D       		.uleb128 0xd
 734 03d3 04       		.byte	0x4
 735 03d4 85030000 		.4byte	0x385
 736 03d8 10       		.uleb128 0x10
 737 03d9 D2030000 		.4byte	0x3d2
 738 03dd 03       		.uleb128 0x3
 739 03de 03060000 		.4byte	.LASF86
 740 03e2 02       		.byte	0x2
 741 03e3 92       		.byte	0x92
 742 03e4 95030000 		.4byte	0x395
 743 03e8 0B       		.uleb128 0xb
 744 03e9 01       		.byte	0x1
 745 03ea 0E       		.byte	0xe
 746 03eb 1F       		.byte	0x1f
 747 03ec FD030000 		.4byte	0x3fd
 748 03f0 0C       		.uleb128 0xc
 749 03f1 9B070000 		.4byte	.LASF87
 750 03f5 0E       		.byte	0xe
 751 03f6 21       		.byte	0x21
 752 03f7 8C000000 		.4byte	0x8c
 753 03fb 00       		.byte	0
 754 03fc 00       		.byte	0
 755 03fd 03       		.uleb128 0x3
 756 03fe 21060000 		.4byte	.LASF88
 757 0402 0E       		.byte	0xe
 758 0403 24       		.byte	0x24
 759 0404 E8030000 		.4byte	0x3e8
 760 0408 03       		.uleb128 0x3
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccNhv63R.s 			page 27


 761 0409 B3030000 		.4byte	.LASF89
 762 040d 03       		.byte	0x3
 763 040e 27       		.byte	0x27
 764 040f 13040000 		.4byte	0x413
 765 0413 0D       		.uleb128 0xd
 766 0414 04       		.byte	0x4
 767 0415 19040000 		.4byte	0x419
 768 0419 0E       		.uleb128 0xe
 769 041a E9010000 		.4byte	0x1e9
 770 041e 28040000 		.4byte	0x428
 771 0422 0F       		.uleb128 0xf
 772 0423 2E040000 		.4byte	0x42e
 773 0427 00       		.byte	0
 774 0428 0D       		.uleb128 0xd
 775 0429 04       		.byte	0x4
 776 042a FD030000 		.4byte	0x3fd
 777 042e 10       		.uleb128 0x10
 778 042f 28040000 		.4byte	0x428
 779 0433 03       		.uleb128 0x3
 780 0434 9E030000 		.4byte	.LASF90
 781 0438 03       		.byte	0x3
 782 0439 2D       		.byte	0x2d
 783 043a 3E040000 		.4byte	0x43e
 784 043e 0D       		.uleb128 0xd
 785 043f 04       		.byte	0x4
 786 0440 44040000 		.4byte	0x444
 787 0444 0E       		.uleb128 0xe
 788 0445 E9010000 		.4byte	0x1e9
 789 0449 53040000 		.4byte	0x453
 790 044d 0F       		.uleb128 0xf
 791 044e 5E040000 		.4byte	0x45e
 792 0452 00       		.byte	0
 793 0453 0D       		.uleb128 0xd
 794 0454 04       		.byte	0x4
 795 0455 59040000 		.4byte	0x459
 796 0459 10       		.uleb128 0x10
 797 045a FD030000 		.4byte	0x3fd
 798 045e 10       		.uleb128 0x10
 799 045f 53040000 		.4byte	0x453
 800 0463 11       		.uleb128 0x11
 801 0464 08010000 		.4byte	.LASF91
 802 0468 28       		.byte	0x28
 803 0469 03       		.byte	0x3
 804 046a 37       		.byte	0x37
 805 046b E8040000 		.4byte	0x4e8
 806 046f 0C       		.uleb128 0xc
 807 0470 7D040000 		.4byte	.LASF70
 808 0474 03       		.byte	0x3
 809 0475 3C       		.byte	0x3c
 810 0476 E8040000 		.4byte	0x4e8
 811 047a 00       		.byte	0
 812 047b 0C       		.uleb128 0xc
 813 047c E1020000 		.4byte	.LASF71
 814 0480 03       		.byte	0x3
 815 0481 41       		.byte	0x41
 816 0482 ED040000 		.4byte	0x4ed
 817 0486 04       		.byte	0x4
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccNhv63R.s 			page 28


 818 0487 0C       		.uleb128 0xc
 819 0488 5D010000 		.4byte	.LASF72
 820 048c 03       		.byte	0x3
 821 048d 46       		.byte	0x46
 822 048e 66030000 		.4byte	0x366
 823 0492 08       		.byte	0x8
 824 0493 0C       		.uleb128 0xc
 825 0494 DD050000 		.4byte	.LASF73
 826 0498 03       		.byte	0x3
 827 0499 4C       		.byte	0x4c
 828 049a 66030000 		.4byte	0x366
 829 049e 0C       		.byte	0xc
 830 049f 0C       		.uleb128 0xc
 831 04a0 F6010000 		.4byte	.LASF74
 832 04a4 03       		.byte	0x3
 833 04a5 51       		.byte	0x51
 834 04a6 6B030000 		.4byte	0x36b
 835 04aa 10       		.byte	0x10
 836 04ab 0C       		.uleb128 0xc
 837 04ac 19050000 		.4byte	.LASF75
 838 04b0 03       		.byte	0x3
 839 04b1 56       		.byte	0x56
 840 04b2 76030000 		.4byte	0x376
 841 04b6 14       		.byte	0x14
 842 04b7 0C       		.uleb128 0xc
 843 04b8 B3040000 		.4byte	.LASF76
 844 04bc 03       		.byte	0x3
 845 04bd 5B       		.byte	0x5b
 846 04be 6B030000 		.4byte	0x36b
 847 04c2 18       		.byte	0x18
 848 04c3 0C       		.uleb128 0xc
 849 04c4 A1070000 		.4byte	.LASF77
 850 04c8 03       		.byte	0x3
 851 04c9 60       		.byte	0x60
 852 04ca 76030000 		.4byte	0x376
 853 04ce 1C       		.byte	0x1c
 854 04cf 0C       		.uleb128 0xc
 855 04d0 7B060000 		.4byte	.LASF78
 856 04d4 03       		.byte	0x3
 857 04d5 66       		.byte	0x66
 858 04d6 7B030000 		.4byte	0x37b
 859 04da 20       		.byte	0x20
 860 04db 0C       		.uleb128 0xc
 861 04dc 12000000 		.4byte	.LASF79
 862 04e0 03       		.byte	0x3
 863 04e1 6B       		.byte	0x6b
 864 04e2 80030000 		.4byte	0x380
 865 04e6 24       		.byte	0x24
 866 04e7 00       		.byte	0
 867 04e8 10       		.uleb128 0x10
 868 04e9 08040000 		.4byte	0x408
 869 04ed 10       		.uleb128 0x10
 870 04ee 33040000 		.4byte	0x433
 871 04f2 03       		.uleb128 0x3
 872 04f3 17010000 		.4byte	.LASF92
 873 04f7 03       		.byte	0x3
 874 04f8 6E       		.byte	0x6e
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccNhv63R.s 			page 29


 875 04f9 FD040000 		.4byte	0x4fd
 876 04fd 10       		.uleb128 0x10
 877 04fe 63040000 		.4byte	0x463
 878 0502 11       		.uleb128 0x11
 879 0503 62020000 		.4byte	.LASF93
 880 0507 0C       		.byte	0xc
 881 0508 03       		.byte	0x3
 882 0509 7A       		.byte	0x7a
 883 050a 3F050000 		.4byte	0x53f
 884 050e 0C       		.uleb128 0xc
 885 050f 5C020000 		.4byte	.LASF83
 886 0513 03       		.byte	0x3
 887 0514 80       		.byte	0x80
 888 0515 FD030000 		.4byte	0x3fd
 889 0519 00       		.byte	0
 890 051a 0C       		.uleb128 0xc
 891 051b 30070000 		.4byte	.LASF84
 892 051f 03       		.byte	0x3
 893 0520 85       		.byte	0x85
 894 0521 45020000 		.4byte	0x245
 895 0525 01       		.byte	0x1
 896 0526 12       		.uleb128 0x12
 897 0527 61676500 		.ascii	"age\000"
 898 052b 03       		.byte	0x3
 899 052c 8A       		.byte	0x8a
 900 052d A2000000 		.4byte	0xa2
 901 0531 04       		.byte	0x4
 902 0532 0C       		.uleb128 0xc
 903 0533 8C040000 		.4byte	.LASF85
 904 0537 03       		.byte	0x3
 905 0538 8F       		.byte	0x8f
 906 0539 45050000 		.4byte	0x545
 907 053d 08       		.byte	0x8
 908 053e 00       		.byte	0
 909 053f 0D       		.uleb128 0xd
 910 0540 04       		.byte	0x4
 911 0541 F2040000 		.4byte	0x4f2
 912 0545 10       		.uleb128 0x10
 913 0546 3F050000 		.4byte	0x53f
 914 054a 03       		.uleb128 0x3
 915 054b 6D020000 		.4byte	.LASF94
 916 054f 03       		.byte	0x3
 917 0550 92       		.byte	0x92
 918 0551 02050000 		.4byte	0x502
 919 0555 13       		.uleb128 0x13
 920 0556 CD020000 		.4byte	.LASF95
 921 055a 02       		.byte	0x2
 922 055b 0601     		.2byte	0x106
 923 055d 71020000 		.4byte	0x271
 924 0561 03       		.byte	0x3
 925 0562 73050000 		.4byte	0x573
 926 0566 14       		.uleb128 0x14
 927 0567 1A060000 		.4byte	.LASF97
 928 056b 02       		.byte	0x2
 929 056c 0601     		.2byte	0x106
 930 056e 7E050000 		.4byte	0x57e
 931 0572 00       		.byte	0
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccNhv63R.s 			page 30


 932 0573 0D       		.uleb128 0xd
 933 0574 04       		.byte	0x4
 934 0575 79050000 		.4byte	0x579
 935 0579 10       		.uleb128 0x10
 936 057a DD030000 		.4byte	0x3dd
 937 057e 10       		.uleb128 0x10
 938 057f 73050000 		.4byte	0x573
 939 0583 13       		.uleb128 0x13
 940 0584 94040000 		.4byte	.LASF96
 941 0588 03       		.byte	0x3
 942 0589 0601     		.2byte	0x106
 943 058b FD030000 		.4byte	0x3fd
 944 058f 03       		.byte	0x3
 945 0590 A1050000 		.4byte	0x5a1
 946 0594 14       		.uleb128 0x14
 947 0595 1A060000 		.4byte	.LASF97
 948 0599 03       		.byte	0x3
 949 059a 0601     		.2byte	0x106
 950 059c AC050000 		.4byte	0x5ac
 951 05a0 00       		.byte	0
 952 05a1 0D       		.uleb128 0xd
 953 05a2 04       		.byte	0x4
 954 05a3 A7050000 		.4byte	0x5a7
 955 05a7 10       		.uleb128 0x10
 956 05a8 4A050000 		.4byte	0x54a
 957 05ac 10       		.uleb128 0x10
 958 05ad A1050000 		.4byte	0x5a1
 959 05b1 13       		.uleb128 0x13
 960 05b2 59030000 		.4byte	.LASF98
 961 05b6 03       		.byte	0x3
 962 05b7 2901     		.2byte	0x129
 963 05b9 E9010000 		.4byte	0x1e9
 964 05bd 03       		.byte	0x3
 965 05be 0D060000 		.4byte	0x60d
 966 05c2 14       		.uleb128 0x14
 967 05c3 1A060000 		.4byte	.LASF97
 968 05c7 03       		.byte	0x3
 969 05c8 2901     		.2byte	0x129
 970 05ca 13060000 		.4byte	0x613
 971 05ce 14       		.uleb128 0x14
 972 05cf 5C020000 		.4byte	.LASF83
 973 05d3 03       		.byte	0x3
 974 05d4 2901     		.2byte	0x129
 975 05d6 59040000 		.4byte	0x459
 976 05da 15       		.uleb128 0x15
 977 05db 72657400 		.ascii	"ret\000"
 978 05df 03       		.byte	0x3
 979 05e0 2C01     		.2byte	0x12c
 980 05e2 E9010000 		.4byte	0x1e9
 981 05e6 16       		.uleb128 0x16
 982 05e7 0D070000 		.4byte	.LASF99
 983 05eb 03       		.byte	0x3
 984 05ec 2D01     		.2byte	0x12d
 985 05ee C2000000 		.4byte	0xc2
 986 05f2 16       		.uleb128 0x16
 987 05f3 22000000 		.4byte	.LASF100
 988 05f7 03       		.byte	0x3
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccNhv63R.s 			page 31


 989 05f8 3701     		.2byte	0x137
 990 05fa 70030000 		.4byte	0x370
 991 05fe 17       		.uleb128 0x17
 992 05ff 16       		.uleb128 0x16
 993 0600 D4060000 		.4byte	.LASF101
 994 0604 03       		.byte	0x3
 995 0605 3C01     		.2byte	0x13c
 996 0607 0B010000 		.4byte	0x10b
 997 060b 00       		.byte	0
 998 060c 00       		.byte	0
 999 060d 0D       		.uleb128 0xd
 1000 060e 04       		.byte	0x4
 1001 060f 4A050000 		.4byte	0x54a
 1002 0613 10       		.uleb128 0x10
 1003 0614 0D060000 		.4byte	0x60d
 1004 0618 18       		.uleb128 0x18
 1005 0619 87070000 		.4byte	.LASF102
 1006 061d 03       		.byte	0x3
 1007 061e E6       		.byte	0xe6
 1008 061f A2000000 		.4byte	0xa2
 1009 0623 03       		.byte	0x3
 1010 0624 34060000 		.4byte	0x634
 1011 0628 19       		.uleb128 0x19
 1012 0629 1A060000 		.4byte	.LASF97
 1013 062d 03       		.byte	0x3
 1014 062e E6       		.byte	0xe6
 1015 062f AC050000 		.4byte	0x5ac
 1016 0633 00       		.byte	0
 1017 0634 1A       		.uleb128 0x1a
 1018 0635 C5050000 		.4byte	.LASF121
 1019 0639 01       		.byte	0x1
 1020 063a 2C       		.byte	0x2c
 1021 063b 00000000 		.4byte	.LFB150
 1022 063f E4000000 		.4byte	.LFE150-.LFB150
 1023 0643 01       		.uleb128 0x1
 1024 0644 9C       		.byte	0x9c
 1025 0645 C8070000 		.4byte	0x7c8
 1026 0649 1B       		.uleb128 0x1b
 1027 064a 657600   		.ascii	"ev\000"
 1028 064d 01       		.byte	0x1
 1029 064e 2C       		.byte	0x2c
 1030 064f 0A020000 		.4byte	0x20a
 1031 0653 00000000 		.4byte	.LLST0
 1032 0657 1C       		.uleb128 0x1c
 1033 0658 B8060000 		.4byte	.LASF103
 1034 065c 01       		.byte	0x1
 1035 065d 30       		.byte	0x30
 1036 065e FD030000 		.4byte	0x3fd
 1037 0662 05       		.uleb128 0x5
 1038 0663 03       		.byte	0x3
 1039 0664 00000000 		.4byte	speedValue.6971
 1040 0668 1C       		.uleb128 0x1c
 1041 0669 68010000 		.4byte	.LASF104
 1042 066d 01       		.byte	0x1
 1043 066e 31       		.byte	0x31
 1044 066f C8070000 		.4byte	0x7c8
 1045 0673 05       		.uleb128 0x5
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccNhv63R.s 			page 32


 1046 0674 03       		.byte	0x3
 1047 0675 04000000 		.4byte	asciiConvert.6973
 1048 0679 1D       		.uleb128 0x1d
 1049 067a 72657300 		.ascii	"res\000"
 1050 067e 01       		.byte	0x1
 1051 067f 32       		.byte	0x32
 1052 0680 D8070000 		.4byte	0x7d8
 1053 0684 00       		.byte	0
 1054 0685 1E       		.uleb128 0x1e
 1055 0686 55050000 		.4byte	0x555
 1056 068a 0A000000 		.4byte	.LBB13
 1057 068e 0C000000 		.4byte	.LBE13-.LBB13
 1058 0692 01       		.byte	0x1
 1059 0693 45       		.byte	0x45
 1060 0694 9E060000 		.4byte	0x69e
 1061 0698 1F       		.uleb128 0x1f
 1062 0699 66050000 		.4byte	0x566
 1063 069d 00       		.byte	0
 1064 069e 1E       		.uleb128 0x1e
 1065 069f 55050000 		.4byte	0x555
 1066 06a3 1E000000 		.4byte	.LBB15
 1067 06a7 0C000000 		.4byte	.LBE15-.LBB15
 1068 06ab 01       		.byte	0x1
 1069 06ac 47       		.byte	0x47
 1070 06ad B7060000 		.4byte	0x6b7
 1071 06b1 1F       		.uleb128 0x1f
 1072 06b2 66050000 		.4byte	0x566
 1073 06b6 00       		.byte	0
 1074 06b7 1E       		.uleb128 0x1e
 1075 06b8 B1050000 		.4byte	0x5b1
 1076 06bc 48000000 		.4byte	.LBB17
 1077 06c0 32000000 		.4byte	.LBE17-.LBB17
 1078 06c4 01       		.byte	0x1
 1079 06c5 5C       		.byte	0x5c
 1080 06c6 16070000 		.4byte	0x716
 1081 06ca 1F       		.uleb128 0x1f
 1082 06cb CE050000 		.4byte	0x5ce
 1083 06cf 1F       		.uleb128 0x1f
 1084 06d0 C2050000 		.4byte	0x5c2
 1085 06d4 20       		.uleb128 0x20
 1086 06d5 48000000 		.4byte	.LBB18
 1087 06d9 32000000 		.4byte	.LBE18-.LBB18
 1088 06dd 21       		.uleb128 0x21
 1089 06de DA050000 		.4byte	0x5da
 1090 06e2 21000000 		.4byte	.LLST1
 1091 06e6 21       		.uleb128 0x21
 1092 06e7 E6050000 		.4byte	0x5e6
 1093 06eb 35000000 		.4byte	.LLST2
 1094 06ef 21       		.uleb128 0x21
 1095 06f0 F2050000 		.4byte	0x5f2
 1096 06f4 6B000000 		.4byte	.LLST3
 1097 06f8 20       		.uleb128 0x20
 1098 06f9 60000000 		.4byte	.LBB19
 1099 06fd 0A000000 		.4byte	.LBE19-.LBB19
 1100 0701 21       		.uleb128 0x21
 1101 0702 FF050000 		.4byte	0x5ff
 1102 0706 7E000000 		.4byte	.LLST4
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccNhv63R.s 			page 33


 1103 070a 22       		.uleb128 0x22
 1104 070b 6A000000 		.4byte	.LVL10
 1105 070f 46080000 		.4byte	0x846
 1106 0713 00       		.byte	0
 1107 0714 00       		.byte	0
 1108 0715 00       		.byte	0
 1109 0716 1E       		.uleb128 0x1e
 1110 0717 18060000 		.4byte	0x618
 1111 071b 9C000000 		.4byte	.LBB20
 1112 071f 04000000 		.4byte	.LBE20-.LBB20
 1113 0723 01       		.byte	0x1
 1114 0724 6A       		.byte	0x6a
 1115 0725 2F070000 		.4byte	0x72f
 1116 0729 1F       		.uleb128 0x1f
 1117 072a 28060000 		.4byte	0x628
 1118 072e 00       		.byte	0
 1119 072f 23       		.uleb128 0x23
 1120 0730 0A000000 		.4byte	.LVL2
 1121 0734 52080000 		.4byte	0x852
 1122 0738 42070000 		.4byte	0x742
 1123 073c 24       		.uleb128 0x24
 1124 073d 01       		.uleb128 0x1
 1125 073e 50       		.byte	0x50
 1126 073f 01       		.uleb128 0x1
 1127 0740 31       		.byte	0x31
 1128 0741 00       		.byte	0
 1129 0742 23       		.uleb128 0x23
 1130 0743 80000000 		.4byte	.LVL15
 1131 0747 5D080000 		.4byte	0x85d
 1132 074b 59070000 		.4byte	0x759
 1133 074f 24       		.uleb128 0x24
 1134 0750 01       		.uleb128 0x1
 1135 0751 50       		.byte	0x50
 1136 0752 05       		.uleb128 0x5
 1137 0753 03       		.byte	0x3
 1138 0754 00000000 		.4byte	.LC0
 1139 0758 00       		.byte	0
 1140 0759 23       		.uleb128 0x23
 1141 075a 8E000000 		.4byte	.LVL16
 1142 075e 68080000 		.4byte	0x868
 1143 0762 72070000 		.4byte	0x772
 1144 0766 24       		.uleb128 0x24
 1145 0767 01       		.uleb128 0x1
 1146 0768 51       		.byte	0x51
 1147 0769 02       		.uleb128 0x2
 1148 076a 74       		.byte	0x74
 1149 076b 00       		.sleb128 0
 1150 076c 24       		.uleb128 0x24
 1151 076d 01       		.uleb128 0x1
 1152 076e 52       		.byte	0x52
 1153 076f 01       		.uleb128 0x1
 1154 0770 34       		.byte	0x34
 1155 0771 00       		.byte	0
 1156 0772 23       		.uleb128 0x23
 1157 0773 94000000 		.4byte	.LVL17
 1158 0777 5D080000 		.4byte	0x85d
 1159 077b 86070000 		.4byte	0x786
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccNhv63R.s 			page 34


 1160 077f 24       		.uleb128 0x24
 1161 0780 01       		.uleb128 0x1
 1162 0781 50       		.byte	0x50
 1163 0782 02       		.uleb128 0x2
 1164 0783 74       		.byte	0x74
 1165 0784 00       		.sleb128 0
 1166 0785 00       		.byte	0
 1167 0786 23       		.uleb128 0x23
 1168 0787 9A000000 		.4byte	.LVL18
 1169 078b 5D080000 		.4byte	0x85d
 1170 078f 9D070000 		.4byte	0x79d
 1171 0793 24       		.uleb128 0x24
 1172 0794 01       		.uleb128 0x1
 1173 0795 50       		.byte	0x50
 1174 0796 05       		.uleb128 0x5
 1175 0797 03       		.byte	0x3
 1176 0798 0C000000 		.4byte	.LC1
 1177 079c 00       		.byte	0
 1178 079d 23       		.uleb128 0x23
 1179 079e B4000000 		.4byte	.LVL21
 1180 07a2 5D080000 		.4byte	0x85d
 1181 07a6 B4070000 		.4byte	0x7b4
 1182 07aa 24       		.uleb128 0x24
 1183 07ab 01       		.uleb128 0x1
 1184 07ac 50       		.byte	0x50
 1185 07ad 05       		.uleb128 0x5
 1186 07ae 03       		.byte	0x3
 1187 07af 10000000 		.4byte	.LC2
 1188 07b3 00       		.byte	0
 1189 07b4 25       		.uleb128 0x25
 1190 07b5 BC000000 		.4byte	.LVL22
 1191 07b9 5D080000 		.4byte	0x85d
 1192 07bd 24       		.uleb128 0x24
 1193 07be 01       		.uleb128 0x1
 1194 07bf 50       		.byte	0x50
 1195 07c0 05       		.uleb128 0x5
 1196 07c1 03       		.byte	0x3
 1197 07c2 34000000 		.4byte	.LC3
 1198 07c6 00       		.byte	0
 1199 07c7 00       		.byte	0
 1200 07c8 09       		.uleb128 0x9
 1201 07c9 BB000000 		.4byte	0xbb
 1202 07cd D8070000 		.4byte	0x7d8
 1203 07d1 26       		.uleb128 0x26
 1204 07d2 23010000 		.4byte	0x123
 1205 07d6 1D       		.byte	0x1d
 1206 07d7 00       		.byte	0
 1207 07d8 10       		.uleb128 0x10
 1208 07d9 E9010000 		.4byte	0x1e9
 1209 07dd 27       		.uleb128 0x27
 1210 07de E3000000 		.4byte	.LASF105
 1211 07e2 0F       		.byte	0xf
 1212 07e3 40       		.byte	0x40
 1213 07e4 EA000000 		.4byte	0xea
 1214 07e8 27       		.uleb128 0x27
 1215 07e9 24040000 		.4byte	.LASF106
 1216 07ed 0F       		.byte	0xf
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccNhv63R.s 			page 35


 1217 07ee 47       		.byte	0x47
 1218 07ef F5000000 		.4byte	0xf5
 1219 07f3 27       		.uleb128 0x27
 1220 07f4 3D040000 		.4byte	.LASF107
 1221 07f8 0F       		.byte	0xf
 1222 07f9 4A       		.byte	0x4a
 1223 07fa EA000000 		.4byte	0xea
 1224 07fe 27       		.uleb128 0x27
 1225 07ff 08020000 		.4byte	.LASF108
 1226 0803 10       		.byte	0x10
 1227 0804 48       		.byte	0x48
 1228 0805 00010000 		.4byte	0x100
 1229 0809 27       		.uleb128 0x27
 1230 080a 72070000 		.4byte	.LASF109
 1231 080e 11       		.byte	0x11
 1232 080f 44       		.byte	0x44
 1233 0810 EA000000 		.4byte	0xea
 1234 0814 28       		.uleb128 0x28
 1235 0815 FB000000 		.4byte	.LASF110
 1236 0819 12       		.byte	0x12
 1237 081a 1207     		.2byte	0x712
 1238 081c 20080000 		.4byte	0x820
 1239 0820 29       		.uleb128 0x29
 1240 0821 97000000 		.4byte	0x97
 1241 0825 27       		.uleb128 0x27
 1242 0826 EE040000 		.4byte	.LASF111
 1243 082a 13       		.byte	0x13
 1244 082b 33       		.byte	0x33
 1245 082c 35010000 		.4byte	0x135
 1246 0830 27       		.uleb128 0x27
 1247 0831 85020000 		.4byte	.LASF112
 1248 0835 14       		.byte	0x14
 1249 0836 28       		.byte	0x28
 1250 0837 DD030000 		.4byte	0x3dd
 1251 083b 27       		.uleb128 0x27
 1252 083c 27050000 		.4byte	.LASF113
 1253 0840 14       		.byte	0x14
 1254 0841 37       		.byte	0x37
 1255 0842 4A050000 		.4byte	0x54a
 1256 0846 2A       		.uleb128 0x2a
 1257 0847 C2000000 		.4byte	.LASF114
 1258 084b C2000000 		.4byte	.LASF114
 1259 084f 15       		.byte	0x15
 1260 0850 4A01     		.2byte	0x14a
 1261 0852 2B       		.uleb128 0x2b
 1262 0853 72060000 		.4byte	.LASF115
 1263 0857 72060000 		.4byte	.LASF115
 1264 085b 13       		.byte	0x13
 1265 085c 4C       		.byte	0x4c
 1266 085d 2B       		.uleb128 0x2b
 1267 085e 15070000 		.4byte	.LASF116
 1268 0862 15070000 		.4byte	.LASF116
 1269 0866 16       		.byte	0x16
 1270 0867 8B       		.byte	0x8b
 1271 0868 2B       		.uleb128 0x2b
 1272 0869 8A060000 		.4byte	.LASF117
 1273 086d 8A060000 		.4byte	.LASF117
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccNhv63R.s 			page 36


 1274 0871 17       		.byte	0x17
 1275 0872 19       		.byte	0x19
 1276 0873 00       		.byte	0
 1277              		.section	.debug_abbrev,"",%progbits
 1278              	.Ldebug_abbrev0:
 1279 0000 01       		.uleb128 0x1
 1280 0001 11       		.uleb128 0x11
 1281 0002 01       		.byte	0x1
 1282 0003 25       		.uleb128 0x25
 1283 0004 0E       		.uleb128 0xe
 1284 0005 13       		.uleb128 0x13
 1285 0006 0B       		.uleb128 0xb
 1286 0007 03       		.uleb128 0x3
 1287 0008 0E       		.uleb128 0xe
 1288 0009 1B       		.uleb128 0x1b
 1289 000a 0E       		.uleb128 0xe
 1290 000b 55       		.uleb128 0x55
 1291 000c 17       		.uleb128 0x17
 1292 000d 11       		.uleb128 0x11
 1293 000e 01       		.uleb128 0x1
 1294 000f 10       		.uleb128 0x10
 1295 0010 17       		.uleb128 0x17
 1296 0011 00       		.byte	0
 1297 0012 00       		.byte	0
 1298 0013 02       		.uleb128 0x2
 1299 0014 24       		.uleb128 0x24
 1300 0015 00       		.byte	0
 1301 0016 0B       		.uleb128 0xb
 1302 0017 0B       		.uleb128 0xb
 1303 0018 3E       		.uleb128 0x3e
 1304 0019 0B       		.uleb128 0xb
 1305 001a 03       		.uleb128 0x3
 1306 001b 0E       		.uleb128 0xe
 1307 001c 00       		.byte	0
 1308 001d 00       		.byte	0
 1309 001e 03       		.uleb128 0x3
 1310 001f 16       		.uleb128 0x16
 1311 0020 00       		.byte	0
 1312 0021 03       		.uleb128 0x3
 1313 0022 0E       		.uleb128 0xe
 1314 0023 3A       		.uleb128 0x3a
 1315 0024 0B       		.uleb128 0xb
 1316 0025 3B       		.uleb128 0x3b
 1317 0026 0B       		.uleb128 0xb
 1318 0027 49       		.uleb128 0x49
 1319 0028 13       		.uleb128 0x13
 1320 0029 00       		.byte	0
 1321 002a 00       		.byte	0
 1322 002b 04       		.uleb128 0x4
 1323 002c 24       		.uleb128 0x24
 1324 002d 00       		.byte	0
 1325 002e 0B       		.uleb128 0xb
 1326 002f 0B       		.uleb128 0xb
 1327 0030 3E       		.uleb128 0x3e
 1328 0031 0B       		.uleb128 0xb
 1329 0032 03       		.uleb128 0x3
 1330 0033 08       		.uleb128 0x8
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccNhv63R.s 			page 37


 1331 0034 00       		.byte	0
 1332 0035 00       		.byte	0
 1333 0036 05       		.uleb128 0x5
 1334 0037 16       		.uleb128 0x16
 1335 0038 00       		.byte	0
 1336 0039 03       		.uleb128 0x3
 1337 003a 0E       		.uleb128 0xe
 1338 003b 3A       		.uleb128 0x3a
 1339 003c 0B       		.uleb128 0xb
 1340 003d 3B       		.uleb128 0x3b
 1341 003e 05       		.uleb128 0x5
 1342 003f 49       		.uleb128 0x49
 1343 0040 13       		.uleb128 0x13
 1344 0041 00       		.byte	0
 1345 0042 00       		.byte	0
 1346 0043 06       		.uleb128 0x6
 1347 0044 04       		.uleb128 0x4
 1348 0045 01       		.byte	0x1
 1349 0046 0B       		.uleb128 0xb
 1350 0047 0B       		.uleb128 0xb
 1351 0048 49       		.uleb128 0x49
 1352 0049 13       		.uleb128 0x13
 1353 004a 3A       		.uleb128 0x3a
 1354 004b 0B       		.uleb128 0xb
 1355 004c 3B       		.uleb128 0x3b
 1356 004d 0B       		.uleb128 0xb
 1357 004e 01       		.uleb128 0x1
 1358 004f 13       		.uleb128 0x13
 1359 0050 00       		.byte	0
 1360 0051 00       		.byte	0
 1361 0052 07       		.uleb128 0x7
 1362 0053 28       		.uleb128 0x28
 1363 0054 00       		.byte	0
 1364 0055 03       		.uleb128 0x3
 1365 0056 0E       		.uleb128 0xe
 1366 0057 1C       		.uleb128 0x1c
 1367 0058 0B       		.uleb128 0xb
 1368 0059 00       		.byte	0
 1369 005a 00       		.byte	0
 1370 005b 08       		.uleb128 0x8
 1371 005c 28       		.uleb128 0x28
 1372 005d 00       		.byte	0
 1373 005e 03       		.uleb128 0x3
 1374 005f 0E       		.uleb128 0xe
 1375 0060 1C       		.uleb128 0x1c
 1376 0061 0D       		.uleb128 0xd
 1377 0062 00       		.byte	0
 1378 0063 00       		.byte	0
 1379 0064 09       		.uleb128 0x9
 1380 0065 01       		.uleb128 0x1
 1381 0066 01       		.byte	0x1
 1382 0067 49       		.uleb128 0x49
 1383 0068 13       		.uleb128 0x13
 1384 0069 01       		.uleb128 0x1
 1385 006a 13       		.uleb128 0x13
 1386 006b 00       		.byte	0
 1387 006c 00       		.byte	0
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccNhv63R.s 			page 38


 1388 006d 0A       		.uleb128 0xa
 1389 006e 21       		.uleb128 0x21
 1390 006f 00       		.byte	0
 1391 0070 00       		.byte	0
 1392 0071 00       		.byte	0
 1393 0072 0B       		.uleb128 0xb
 1394 0073 13       		.uleb128 0x13
 1395 0074 01       		.byte	0x1
 1396 0075 0B       		.uleb128 0xb
 1397 0076 0B       		.uleb128 0xb
 1398 0077 3A       		.uleb128 0x3a
 1399 0078 0B       		.uleb128 0xb
 1400 0079 3B       		.uleb128 0x3b
 1401 007a 0B       		.uleb128 0xb
 1402 007b 01       		.uleb128 0x1
 1403 007c 13       		.uleb128 0x13
 1404 007d 00       		.byte	0
 1405 007e 00       		.byte	0
 1406 007f 0C       		.uleb128 0xc
 1407 0080 0D       		.uleb128 0xd
 1408 0081 00       		.byte	0
 1409 0082 03       		.uleb128 0x3
 1410 0083 0E       		.uleb128 0xe
 1411 0084 3A       		.uleb128 0x3a
 1412 0085 0B       		.uleb128 0xb
 1413 0086 3B       		.uleb128 0x3b
 1414 0087 0B       		.uleb128 0xb
 1415 0088 49       		.uleb128 0x49
 1416 0089 13       		.uleb128 0x13
 1417 008a 38       		.uleb128 0x38
 1418 008b 0B       		.uleb128 0xb
 1419 008c 00       		.byte	0
 1420 008d 00       		.byte	0
 1421 008e 0D       		.uleb128 0xd
 1422 008f 0F       		.uleb128 0xf
 1423 0090 00       		.byte	0
 1424 0091 0B       		.uleb128 0xb
 1425 0092 0B       		.uleb128 0xb
 1426 0093 49       		.uleb128 0x49
 1427 0094 13       		.uleb128 0x13
 1428 0095 00       		.byte	0
 1429 0096 00       		.byte	0
 1430 0097 0E       		.uleb128 0xe
 1431 0098 15       		.uleb128 0x15
 1432 0099 01       		.byte	0x1
 1433 009a 27       		.uleb128 0x27
 1434 009b 19       		.uleb128 0x19
 1435 009c 49       		.uleb128 0x49
 1436 009d 13       		.uleb128 0x13
 1437 009e 01       		.uleb128 0x1
 1438 009f 13       		.uleb128 0x13
 1439 00a0 00       		.byte	0
 1440 00a1 00       		.byte	0
 1441 00a2 0F       		.uleb128 0xf
 1442 00a3 05       		.uleb128 0x5
 1443 00a4 00       		.byte	0
 1444 00a5 49       		.uleb128 0x49
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccNhv63R.s 			page 39


 1445 00a6 13       		.uleb128 0x13
 1446 00a7 00       		.byte	0
 1447 00a8 00       		.byte	0
 1448 00a9 10       		.uleb128 0x10
 1449 00aa 26       		.uleb128 0x26
 1450 00ab 00       		.byte	0
 1451 00ac 49       		.uleb128 0x49
 1452 00ad 13       		.uleb128 0x13
 1453 00ae 00       		.byte	0
 1454 00af 00       		.byte	0
 1455 00b0 11       		.uleb128 0x11
 1456 00b1 13       		.uleb128 0x13
 1457 00b2 01       		.byte	0x1
 1458 00b3 03       		.uleb128 0x3
 1459 00b4 0E       		.uleb128 0xe
 1460 00b5 0B       		.uleb128 0xb
 1461 00b6 0B       		.uleb128 0xb
 1462 00b7 3A       		.uleb128 0x3a
 1463 00b8 0B       		.uleb128 0xb
 1464 00b9 3B       		.uleb128 0x3b
 1465 00ba 0B       		.uleb128 0xb
 1466 00bb 01       		.uleb128 0x1
 1467 00bc 13       		.uleb128 0x13
 1468 00bd 00       		.byte	0
 1469 00be 00       		.byte	0
 1470 00bf 12       		.uleb128 0x12
 1471 00c0 0D       		.uleb128 0xd
 1472 00c1 00       		.byte	0
 1473 00c2 03       		.uleb128 0x3
 1474 00c3 08       		.uleb128 0x8
 1475 00c4 3A       		.uleb128 0x3a
 1476 00c5 0B       		.uleb128 0xb
 1477 00c6 3B       		.uleb128 0x3b
 1478 00c7 0B       		.uleb128 0xb
 1479 00c8 49       		.uleb128 0x49
 1480 00c9 13       		.uleb128 0x13
 1481 00ca 38       		.uleb128 0x38
 1482 00cb 0B       		.uleb128 0xb
 1483 00cc 00       		.byte	0
 1484 00cd 00       		.byte	0
 1485 00ce 13       		.uleb128 0x13
 1486 00cf 2E       		.uleb128 0x2e
 1487 00d0 01       		.byte	0x1
 1488 00d1 3F       		.uleb128 0x3f
 1489 00d2 19       		.uleb128 0x19
 1490 00d3 03       		.uleb128 0x3
 1491 00d4 0E       		.uleb128 0xe
 1492 00d5 3A       		.uleb128 0x3a
 1493 00d6 0B       		.uleb128 0xb
 1494 00d7 3B       		.uleb128 0x3b
 1495 00d8 05       		.uleb128 0x5
 1496 00d9 27       		.uleb128 0x27
 1497 00da 19       		.uleb128 0x19
 1498 00db 49       		.uleb128 0x49
 1499 00dc 13       		.uleb128 0x13
 1500 00dd 20       		.uleb128 0x20
 1501 00de 0B       		.uleb128 0xb
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccNhv63R.s 			page 40


 1502 00df 01       		.uleb128 0x1
 1503 00e0 13       		.uleb128 0x13
 1504 00e1 00       		.byte	0
 1505 00e2 00       		.byte	0
 1506 00e3 14       		.uleb128 0x14
 1507 00e4 05       		.uleb128 0x5
 1508 00e5 00       		.byte	0
 1509 00e6 03       		.uleb128 0x3
 1510 00e7 0E       		.uleb128 0xe
 1511 00e8 3A       		.uleb128 0x3a
 1512 00e9 0B       		.uleb128 0xb
 1513 00ea 3B       		.uleb128 0x3b
 1514 00eb 05       		.uleb128 0x5
 1515 00ec 49       		.uleb128 0x49
 1516 00ed 13       		.uleb128 0x13
 1517 00ee 00       		.byte	0
 1518 00ef 00       		.byte	0
 1519 00f0 15       		.uleb128 0x15
 1520 00f1 34       		.uleb128 0x34
 1521 00f2 00       		.byte	0
 1522 00f3 03       		.uleb128 0x3
 1523 00f4 08       		.uleb128 0x8
 1524 00f5 3A       		.uleb128 0x3a
 1525 00f6 0B       		.uleb128 0xb
 1526 00f7 3B       		.uleb128 0x3b
 1527 00f8 05       		.uleb128 0x5
 1528 00f9 49       		.uleb128 0x49
 1529 00fa 13       		.uleb128 0x13
 1530 00fb 00       		.byte	0
 1531 00fc 00       		.byte	0
 1532 00fd 16       		.uleb128 0x16
 1533 00fe 34       		.uleb128 0x34
 1534 00ff 00       		.byte	0
 1535 0100 03       		.uleb128 0x3
 1536 0101 0E       		.uleb128 0xe
 1537 0102 3A       		.uleb128 0x3a
 1538 0103 0B       		.uleb128 0xb
 1539 0104 3B       		.uleb128 0x3b
 1540 0105 05       		.uleb128 0x5
 1541 0106 49       		.uleb128 0x49
 1542 0107 13       		.uleb128 0x13
 1543 0108 00       		.byte	0
 1544 0109 00       		.byte	0
 1545 010a 17       		.uleb128 0x17
 1546 010b 0B       		.uleb128 0xb
 1547 010c 01       		.byte	0x1
 1548 010d 00       		.byte	0
 1549 010e 00       		.byte	0
 1550 010f 18       		.uleb128 0x18
 1551 0110 2E       		.uleb128 0x2e
 1552 0111 01       		.byte	0x1
 1553 0112 3F       		.uleb128 0x3f
 1554 0113 19       		.uleb128 0x19
 1555 0114 03       		.uleb128 0x3
 1556 0115 0E       		.uleb128 0xe
 1557 0116 3A       		.uleb128 0x3a
 1558 0117 0B       		.uleb128 0xb
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccNhv63R.s 			page 41


 1559 0118 3B       		.uleb128 0x3b
 1560 0119 0B       		.uleb128 0xb
 1561 011a 27       		.uleb128 0x27
 1562 011b 19       		.uleb128 0x19
 1563 011c 49       		.uleb128 0x49
 1564 011d 13       		.uleb128 0x13
 1565 011e 20       		.uleb128 0x20
 1566 011f 0B       		.uleb128 0xb
 1567 0120 01       		.uleb128 0x1
 1568 0121 13       		.uleb128 0x13
 1569 0122 00       		.byte	0
 1570 0123 00       		.byte	0
 1571 0124 19       		.uleb128 0x19
 1572 0125 05       		.uleb128 0x5
 1573 0126 00       		.byte	0
 1574 0127 03       		.uleb128 0x3
 1575 0128 0E       		.uleb128 0xe
 1576 0129 3A       		.uleb128 0x3a
 1577 012a 0B       		.uleb128 0xb
 1578 012b 3B       		.uleb128 0x3b
 1579 012c 0B       		.uleb128 0xb
 1580 012d 49       		.uleb128 0x49
 1581 012e 13       		.uleb128 0x13
 1582 012f 00       		.byte	0
 1583 0130 00       		.byte	0
 1584 0131 1A       		.uleb128 0x1a
 1585 0132 2E       		.uleb128 0x2e
 1586 0133 01       		.byte	0x1
 1587 0134 3F       		.uleb128 0x3f
 1588 0135 19       		.uleb128 0x19
 1589 0136 03       		.uleb128 0x3
 1590 0137 0E       		.uleb128 0xe
 1591 0138 3A       		.uleb128 0x3a
 1592 0139 0B       		.uleb128 0xb
 1593 013a 3B       		.uleb128 0x3b
 1594 013b 0B       		.uleb128 0xb
 1595 013c 27       		.uleb128 0x27
 1596 013d 19       		.uleb128 0x19
 1597 013e 11       		.uleb128 0x11
 1598 013f 01       		.uleb128 0x1
 1599 0140 12       		.uleb128 0x12
 1600 0141 06       		.uleb128 0x6
 1601 0142 40       		.uleb128 0x40
 1602 0143 18       		.uleb128 0x18
 1603 0144 9742     		.uleb128 0x2117
 1604 0146 19       		.uleb128 0x19
 1605 0147 01       		.uleb128 0x1
 1606 0148 13       		.uleb128 0x13
 1607 0149 00       		.byte	0
 1608 014a 00       		.byte	0
 1609 014b 1B       		.uleb128 0x1b
 1610 014c 05       		.uleb128 0x5
 1611 014d 00       		.byte	0
 1612 014e 03       		.uleb128 0x3
 1613 014f 08       		.uleb128 0x8
 1614 0150 3A       		.uleb128 0x3a
 1615 0151 0B       		.uleb128 0xb
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccNhv63R.s 			page 42


 1616 0152 3B       		.uleb128 0x3b
 1617 0153 0B       		.uleb128 0xb
 1618 0154 49       		.uleb128 0x49
 1619 0155 13       		.uleb128 0x13
 1620 0156 02       		.uleb128 0x2
 1621 0157 17       		.uleb128 0x17
 1622 0158 00       		.byte	0
 1623 0159 00       		.byte	0
 1624 015a 1C       		.uleb128 0x1c
 1625 015b 34       		.uleb128 0x34
 1626 015c 00       		.byte	0
 1627 015d 03       		.uleb128 0x3
 1628 015e 0E       		.uleb128 0xe
 1629 015f 3A       		.uleb128 0x3a
 1630 0160 0B       		.uleb128 0xb
 1631 0161 3B       		.uleb128 0x3b
 1632 0162 0B       		.uleb128 0xb
 1633 0163 49       		.uleb128 0x49
 1634 0164 13       		.uleb128 0x13
 1635 0165 02       		.uleb128 0x2
 1636 0166 18       		.uleb128 0x18
 1637 0167 00       		.byte	0
 1638 0168 00       		.byte	0
 1639 0169 1D       		.uleb128 0x1d
 1640 016a 34       		.uleb128 0x34
 1641 016b 00       		.byte	0
 1642 016c 03       		.uleb128 0x3
 1643 016d 08       		.uleb128 0x8
 1644 016e 3A       		.uleb128 0x3a
 1645 016f 0B       		.uleb128 0xb
 1646 0170 3B       		.uleb128 0x3b
 1647 0171 0B       		.uleb128 0xb
 1648 0172 49       		.uleb128 0x49
 1649 0173 13       		.uleb128 0x13
 1650 0174 1C       		.uleb128 0x1c
 1651 0175 0B       		.uleb128 0xb
 1652 0176 00       		.byte	0
 1653 0177 00       		.byte	0
 1654 0178 1E       		.uleb128 0x1e
 1655 0179 1D       		.uleb128 0x1d
 1656 017a 01       		.byte	0x1
 1657 017b 31       		.uleb128 0x31
 1658 017c 13       		.uleb128 0x13
 1659 017d 11       		.uleb128 0x11
 1660 017e 01       		.uleb128 0x1
 1661 017f 12       		.uleb128 0x12
 1662 0180 06       		.uleb128 0x6
 1663 0181 58       		.uleb128 0x58
 1664 0182 0B       		.uleb128 0xb
 1665 0183 59       		.uleb128 0x59
 1666 0184 0B       		.uleb128 0xb
 1667 0185 01       		.uleb128 0x1
 1668 0186 13       		.uleb128 0x13
 1669 0187 00       		.byte	0
 1670 0188 00       		.byte	0
 1671 0189 1F       		.uleb128 0x1f
 1672 018a 05       		.uleb128 0x5
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccNhv63R.s 			page 43


 1673 018b 00       		.byte	0
 1674 018c 31       		.uleb128 0x31
 1675 018d 13       		.uleb128 0x13
 1676 018e 00       		.byte	0
 1677 018f 00       		.byte	0
 1678 0190 20       		.uleb128 0x20
 1679 0191 0B       		.uleb128 0xb
 1680 0192 01       		.byte	0x1
 1681 0193 11       		.uleb128 0x11
 1682 0194 01       		.uleb128 0x1
 1683 0195 12       		.uleb128 0x12
 1684 0196 06       		.uleb128 0x6
 1685 0197 00       		.byte	0
 1686 0198 00       		.byte	0
 1687 0199 21       		.uleb128 0x21
 1688 019a 34       		.uleb128 0x34
 1689 019b 00       		.byte	0
 1690 019c 31       		.uleb128 0x31
 1691 019d 13       		.uleb128 0x13
 1692 019e 02       		.uleb128 0x2
 1693 019f 17       		.uleb128 0x17
 1694 01a0 00       		.byte	0
 1695 01a1 00       		.byte	0
 1696 01a2 22       		.uleb128 0x22
 1697 01a3 898201   		.uleb128 0x4109
 1698 01a6 00       		.byte	0
 1699 01a7 11       		.uleb128 0x11
 1700 01a8 01       		.uleb128 0x1
 1701 01a9 31       		.uleb128 0x31
 1702 01aa 13       		.uleb128 0x13
 1703 01ab 00       		.byte	0
 1704 01ac 00       		.byte	0
 1705 01ad 23       		.uleb128 0x23
 1706 01ae 898201   		.uleb128 0x4109
 1707 01b1 01       		.byte	0x1
 1708 01b2 11       		.uleb128 0x11
 1709 01b3 01       		.uleb128 0x1
 1710 01b4 31       		.uleb128 0x31
 1711 01b5 13       		.uleb128 0x13
 1712 01b6 01       		.uleb128 0x1
 1713 01b7 13       		.uleb128 0x13
 1714 01b8 00       		.byte	0
 1715 01b9 00       		.byte	0
 1716 01ba 24       		.uleb128 0x24
 1717 01bb 8A8201   		.uleb128 0x410a
 1718 01be 00       		.byte	0
 1719 01bf 02       		.uleb128 0x2
 1720 01c0 18       		.uleb128 0x18
 1721 01c1 9142     		.uleb128 0x2111
 1722 01c3 18       		.uleb128 0x18
 1723 01c4 00       		.byte	0
 1724 01c5 00       		.byte	0
 1725 01c6 25       		.uleb128 0x25
 1726 01c7 898201   		.uleb128 0x4109
 1727 01ca 01       		.byte	0x1
 1728 01cb 11       		.uleb128 0x11
 1729 01cc 01       		.uleb128 0x1
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccNhv63R.s 			page 44


 1730 01cd 31       		.uleb128 0x31
 1731 01ce 13       		.uleb128 0x13
 1732 01cf 00       		.byte	0
 1733 01d0 00       		.byte	0
 1734 01d1 26       		.uleb128 0x26
 1735 01d2 21       		.uleb128 0x21
 1736 01d3 00       		.byte	0
 1737 01d4 49       		.uleb128 0x49
 1738 01d5 13       		.uleb128 0x13
 1739 01d6 2F       		.uleb128 0x2f
 1740 01d7 0B       		.uleb128 0xb
 1741 01d8 00       		.byte	0
 1742 01d9 00       		.byte	0
 1743 01da 27       		.uleb128 0x27
 1744 01db 34       		.uleb128 0x34
 1745 01dc 00       		.byte	0
 1746 01dd 03       		.uleb128 0x3
 1747 01de 0E       		.uleb128 0xe
 1748 01df 3A       		.uleb128 0x3a
 1749 01e0 0B       		.uleb128 0xb
 1750 01e1 3B       		.uleb128 0x3b
 1751 01e2 0B       		.uleb128 0xb
 1752 01e3 49       		.uleb128 0x49
 1753 01e4 13       		.uleb128 0x13
 1754 01e5 3F       		.uleb128 0x3f
 1755 01e6 19       		.uleb128 0x19
 1756 01e7 3C       		.uleb128 0x3c
 1757 01e8 19       		.uleb128 0x19
 1758 01e9 00       		.byte	0
 1759 01ea 00       		.byte	0
 1760 01eb 28       		.uleb128 0x28
 1761 01ec 34       		.uleb128 0x34
 1762 01ed 00       		.byte	0
 1763 01ee 03       		.uleb128 0x3
 1764 01ef 0E       		.uleb128 0xe
 1765 01f0 3A       		.uleb128 0x3a
 1766 01f1 0B       		.uleb128 0xb
 1767 01f2 3B       		.uleb128 0x3b
 1768 01f3 05       		.uleb128 0x5
 1769 01f4 49       		.uleb128 0x49
 1770 01f5 13       		.uleb128 0x13
 1771 01f6 3F       		.uleb128 0x3f
 1772 01f7 19       		.uleb128 0x19
 1773 01f8 3C       		.uleb128 0x3c
 1774 01f9 19       		.uleb128 0x19
 1775 01fa 00       		.byte	0
 1776 01fb 00       		.byte	0
 1777 01fc 29       		.uleb128 0x29
 1778 01fd 35       		.uleb128 0x35
 1779 01fe 00       		.byte	0
 1780 01ff 49       		.uleb128 0x49
 1781 0200 13       		.uleb128 0x13
 1782 0201 00       		.byte	0
 1783 0202 00       		.byte	0
 1784 0203 2A       		.uleb128 0x2a
 1785 0204 2E       		.uleb128 0x2e
 1786 0205 00       		.byte	0
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccNhv63R.s 			page 45


 1787 0206 3F       		.uleb128 0x3f
 1788 0207 19       		.uleb128 0x19
 1789 0208 3C       		.uleb128 0x3c
 1790 0209 19       		.uleb128 0x19
 1791 020a 6E       		.uleb128 0x6e
 1792 020b 0E       		.uleb128 0xe
 1793 020c 03       		.uleb128 0x3
 1794 020d 0E       		.uleb128 0xe
 1795 020e 3A       		.uleb128 0x3a
 1796 020f 0B       		.uleb128 0xb
 1797 0210 3B       		.uleb128 0x3b
 1798 0211 05       		.uleb128 0x5
 1799 0212 00       		.byte	0
 1800 0213 00       		.byte	0
 1801 0214 2B       		.uleb128 0x2b
 1802 0215 2E       		.uleb128 0x2e
 1803 0216 00       		.byte	0
 1804 0217 3F       		.uleb128 0x3f
 1805 0218 19       		.uleb128 0x19
 1806 0219 3C       		.uleb128 0x3c
 1807 021a 19       		.uleb128 0x19
 1808 021b 6E       		.uleb128 0x6e
 1809 021c 0E       		.uleb128 0xe
 1810 021d 03       		.uleb128 0x3
 1811 021e 0E       		.uleb128 0xe
 1812 021f 3A       		.uleb128 0x3a
 1813 0220 0B       		.uleb128 0xb
 1814 0221 3B       		.uleb128 0x3b
 1815 0222 0B       		.uleb128 0xb
 1816 0223 00       		.byte	0
 1817 0224 00       		.byte	0
 1818 0225 00       		.byte	0
 1819              		.section	.debug_loc,"",%progbits
 1820              	.Ldebug_loc0:
 1821              	.LLST0:
 1822 0000 00000000 		.4byte	.LVL0
 1823 0004 06000000 		.4byte	.LVL1
 1824 0008 0100     		.2byte	0x1
 1825 000a 50       		.byte	0x50
 1826 000b 06000000 		.4byte	.LVL1
 1827 000f E4000000 		.4byte	.LFE150
 1828 0013 0400     		.2byte	0x4
 1829 0015 F3       		.byte	0xf3
 1830 0016 01       		.uleb128 0x1
 1831 0017 50       		.byte	0x50
 1832 0018 9F       		.byte	0x9f
 1833 0019 00000000 		.4byte	0
 1834 001d 00000000 		.4byte	0
 1835              	.LLST1:
 1836 0021 48000000 		.4byte	.LVL7
 1837 0025 9C000000 		.4byte	.LVL19
 1838 0029 0200     		.2byte	0x2
 1839 002b 30       		.byte	0x30
 1840 002c 9F       		.byte	0x9f
 1841 002d 00000000 		.4byte	0
 1842 0031 00000000 		.4byte	0
 1843              	.LLST2:
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccNhv63R.s 			page 46


 1844 0035 48000000 		.4byte	.LVL7
 1845 0039 60000000 		.4byte	.LVL9
 1846 003d 0200     		.2byte	0x2
 1847 003f 30       		.byte	0x30
 1848 0040 9F       		.byte	0x9f
 1849 0041 60000000 		.4byte	.LVL9
 1850 0045 6E000000 		.4byte	.LVL12
 1851 0049 0100     		.2byte	0x1
 1852 004b 54       		.byte	0x54
 1853 004c 6E000000 		.4byte	.LVL12
 1854 0050 70000000 		.4byte	.LVL13
 1855 0054 0200     		.2byte	0x2
 1856 0056 30       		.byte	0x30
 1857 0057 9F       		.byte	0x9f
 1858 0058 70000000 		.4byte	.LVL13
 1859 005c 7A000000 		.4byte	.LVL14
 1860 0060 0100     		.2byte	0x1
 1861 0062 54       		.byte	0x54
 1862 0063 00000000 		.4byte	0
 1863 0067 00000000 		.4byte	0
 1864              	.LLST3:
 1865 006b 58000000 		.4byte	.LVL8
 1866 006f 7A000000 		.4byte	.LVL14
 1867 0073 0100     		.2byte	0x1
 1868 0075 55       		.byte	0x55
 1869 0076 00000000 		.4byte	0
 1870 007a 00000000 		.4byte	0
 1871              	.LLST4:
 1872 007e 60000000 		.4byte	.LVL9
 1873 0082 69000000 		.4byte	.LVL10-1
 1874 0086 0700     		.2byte	0x7
 1875 0088 74       		.byte	0x74
 1876 0089 00       		.sleb128 0
 1877 008a 32       		.byte	0x32
 1878 008b 24       		.byte	0x24
 1879 008c 75       		.byte	0x75
 1880 008d 00       		.sleb128 0
 1881 008e 22       		.byte	0x22
 1882 008f 00000000 		.4byte	0
 1883 0093 00000000 		.4byte	0
 1884              		.section	.debug_aranges,"",%progbits
 1885 0000 1C000000 		.4byte	0x1c
 1886 0004 0200     		.2byte	0x2
 1887 0006 00000000 		.4byte	.Ldebug_info0
 1888 000a 04       		.byte	0x4
 1889 000b 00       		.byte	0
 1890 000c 0000     		.2byte	0
 1891 000e 0000     		.2byte	0
 1892 0010 00000000 		.4byte	.LFB150
 1893 0014 E4000000 		.4byte	.LFE150-.LFB150
 1894 0018 00000000 		.4byte	0
 1895 001c 00000000 		.4byte	0
 1896              		.section	.debug_ranges,"",%progbits
 1897              	.Ldebug_ranges0:
 1898 0000 00000000 		.4byte	.LFB150
 1899 0004 E4000000 		.4byte	.LFE150
 1900 0008 00000000 		.4byte	0
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccNhv63R.s 			page 47


 1901 000c 00000000 		.4byte	0
 1902              		.section	.debug_line,"",%progbits
 1903              	.Ldebug_line0:
 1904 0000 CC030000 		.section	.debug_str,"MS",%progbits,1
 1904      02007003 
 1904      00000201 
 1904      FB0E0D00 
 1904      01010101 
 1905              	.LASF41:
 1906 0000 52435F45 		.ascii	"RC_ERROR_TIME_OUT\000"
 1906      52524F52 
 1906      5F54494D 
 1906      455F4F55 
 1906      5400
 1907              	.LASF79:
 1908 0012 7265736F 		.ascii	"resource\000"
 1908      75726365 
 1908      00
 1909              	.LASF18:
 1910 001b 73697A65 		.ascii	"size_t\000"
 1910      5F7400
 1911              	.LASF100:
 1912 0022 70546173 		.ascii	"pTaskArray\000"
 1912      6B417272 
 1912      617900
 1913              	.LASF120:
 1914 002d 433A5C4A 		.ascii	"C:\\Jason\\EIT\\Semester_02\\01_EAA\\Lab\\Assignmen"
 1914      61736F6E 
 1914      5C454954 
 1914      5C53656D 
 1914      65737465 
 1915 005a 745F315C 		.ascii	"t_1\\01_Electronic_GasPedal.cydsn\000"
 1915      30315F45 
 1915      6C656374 
 1915      726F6E69 
 1915      635F4761 
 1916              	.LASF59:
 1917 007b 5265736F 		.ascii	"ResourceType\000"
 1917      75726365 
 1917      54797065 
 1917      00
 1918              	.LASF0:
 1919 0088 7369676E 		.ascii	"signed char\000"
 1919      65642063 
 1919      68617200 
 1920              	.LASF4:
 1921 0094 5F5F7569 		.ascii	"__uint8_t\000"
 1921      6E74385F 
 1921      7400
 1922              	.LASF56:
 1923 009e 52435F74 		.ascii	"RC_t\000"
 1923      00
 1924              	.LASF22:
 1925 00a3 45455F55 		.ascii	"EE_UREG\000"
 1925      52454700 
 1926              	.LASF10:
 1927 00ab 6C6F6E67 		.ascii	"long long unsigned int\000"
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccNhv63R.s 			page 48


 1927      206C6F6E 
 1927      6720756E 
 1927      7369676E 
 1927      65642069 
 1928              	.LASF114:
 1929 00c2 45455F6F 		.ascii	"EE_oo_SetEvent\000"
 1929      6F5F5365 
 1929      74457665 
 1929      6E7400
 1930              	.LASF51:
 1931 00d1 52435F45 		.ascii	"RC_ERROR_BAD_DATA\000"
 1931      52524F52 
 1931      5F424144 
 1931      5F444154 
 1931      4100
 1932              	.LASF105:
 1933 00e3 45455F6F 		.ascii	"EE_oo_IRQ_disable_count\000"
 1933      6F5F4952 
 1933      515F6469 
 1933      7361626C 
 1933      655F636F 
 1934              	.LASF110:
 1935 00fb 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1935      52784275 
 1935      66666572 
 1935      00
 1936              	.LASF91:
 1937 0108 53435F53 		.ascii	"SC_SPEED_cfg_s\000"
 1937      50454544 
 1937      5F636667 
 1937      5F7300
 1938              	.LASF92:
 1939 0117 53435F53 		.ascii	"SC_SPEED_cfg_t\000"
 1939      50454544 
 1939      5F636667 
 1939      5F7400
 1940              	.LASF9:
 1941 0126 6C6F6E67 		.ascii	"long long int\000"
 1941      206C6F6E 
 1941      6720696E 
 1941      7400
 1942              	.LASF37:
 1943 0134 52435F45 		.ascii	"RC_ERROR_UNDERRUN\000"
 1943      52524F52 
 1943      5F554E44 
 1943      45525255 
 1943      4E00
 1944              	.LASF26:
 1945 0146 4576656E 		.ascii	"EventMaskType\000"
 1945      744D6173 
 1945      6B547970 
 1945      6500
 1946              	.LASF27:
 1947 0154 73697A65 		.ascii	"sizetype\000"
 1947      74797065 
 1947      00
 1948              	.LASF72:
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccNhv63R.s 			page 49


 1949 015d 65764F6E 		.ascii	"evOnUpdate\000"
 1949      55706461 
 1949      746500
 1950              	.LASF104:
 1951 0168 61736369 		.ascii	"asciiConvert\000"
 1951      69436F6E 
 1951      76657274 
 1951      00
 1952              	.LASF39:
 1953 0175 52435F45 		.ascii	"RC_ERROR_BUFFER_EMTPY\000"
 1953      52524F52 
 1953      5F425546 
 1953      4645525F 
 1953      454D5450 
 1954              	.LASF6:
 1955 018b 6C6F6E67 		.ascii	"long int\000"
 1955      20696E74 
 1955      00
 1956              	.LASF60:
 1957 0194 5254455F 		.ascii	"RTE_SIGNALSTATUS_STARTUP\000"
 1957      5349474E 
 1957      414C5354 
 1957      41545553 
 1957      5F535441 
 1958              	.LASF65:
 1959 01ad 4A6F7973 		.ascii	"Joystick_X\000"
 1959      7469636B 
 1959      5F5800
 1960              	.LASF66:
 1961 01b8 4A6F7973 		.ascii	"Joystick_Y\000"
 1961      7469636B 
 1961      5F5900
 1962              	.LASF48:
 1963 01c3 52435F45 		.ascii	"RC_ERROR_WRITE_FAILS\000"
 1963      52524F52 
 1963      5F575249 
 1963      54455F46 
 1963      41494C53 
 1964              	.LASF16:
 1965 01d8 646F7562 		.ascii	"double\000"
 1965      6C6500
 1966              	.LASF62:
 1967 01df 5254455F 		.ascii	"RTE_SIGNALSTATUS_VALID\000"
 1967      5349474E 
 1967      414C5354 
 1967      41545553 
 1967      5F56414C 
 1968              	.LASF74:
 1969 01f6 6F6E5570 		.ascii	"onUpdateTaskCount\000"
 1969      64617465 
 1969      5461736B 
 1969      436F756E 
 1969      7400
 1970              	.LASF108:
 1971 0208 45455F73 		.ascii	"EE_std_endcycle_next_tid\000"
 1971      74645F65 
 1971      6E646379 
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccNhv63R.s 			page 50


 1971      636C655F 
 1971      6E657874 
 1972              	.LASF7:
 1973 0221 5F5F7569 		.ascii	"__uint32_t\000"
 1973      6E743332 
 1973      5F7400
 1974              	.LASF119:
 1975 022c 736F7572 		.ascii	"source\\asw\\swc_control.c\000"
 1975      63655C61 
 1975      73775C73 
 1975      77635F63 
 1975      6F6E7472 
 1976              	.LASF53:
 1977 0245 52435F45 		.ascii	"RC_ERROR_INVALID_STATE\000"
 1977      52524F52 
 1977      5F494E56 
 1977      414C4944 
 1977      5F535441 
 1978              	.LASF83:
 1979 025c 76616C75 		.ascii	"value\000"
 1979      6500
 1980              	.LASF93:
 1981 0262 53435F53 		.ascii	"SC_SPEED_s\000"
 1981      50454544 
 1981      5F7300
 1982              	.LASF94:
 1983 026d 53435F53 		.ascii	"SC_SPEED_t\000"
 1983      50454544 
 1983      5F7400
 1984              	.LASF11:
 1985 0278 756E7369 		.ascii	"unsigned int\000"
 1985      676E6564 
 1985      20696E74 
 1985      00
 1986              	.LASF112:
 1987 0285 534F5F4A 		.ascii	"SO_JOYSTICK_signal\000"
 1987      4F595354 
 1987      49434B5F 
 1987      7369676E 
 1987      616C00
 1988              	.LASF81:
 1989 0298 53435F4A 		.ascii	"SC_JOYSTICK_cfg_s\000"
 1989      4F595354 
 1989      49434B5F 
 1989      6366675F 
 1989      7300
 1990              	.LASF80:
 1991 02aa 53435F4A 		.ascii	"SC_JOYSTICK_cfg_t\000"
 1991      4F595354 
 1991      49434B5F 
 1991      6366675F 
 1991      7400
 1992              	.LASF54:
 1993 02bc 52435F45 		.ascii	"RC_ERROR_UNKNOWN\000"
 1993      52524F52 
 1993      5F554E4B 
 1993      4E4F574E 
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccNhv63R.s 			page 51


 1993      00
 1994              	.LASF95:
 1995 02cd 5254455F 		.ascii	"RTE_SC_JOYSTICK_get\000"
 1995      53435F4A 
 1995      4F595354 
 1995      49434B5F 
 1995      67657400 
 1996              	.LASF71:
 1997 02e1 6F757444 		.ascii	"outDriver\000"
 1997      72697665 
 1997      7200
 1998              	.LASF43:
 1999 02eb 52435F45 		.ascii	"RC_ERROR_CHECKSUM\000"
 1999      52524F52 
 1999      5F434845 
 1999      434B5355 
 1999      4D00
 2000              	.LASF8:
 2001 02fd 6C6F6E67 		.ascii	"long unsigned int\000"
 2001      20756E73 
 2001      69676E65 
 2001      6420696E 
 2001      7400
 2002              	.LASF32:
 2003 030f 52435F45 		.ascii	"RC_ERROR_NULL\000"
 2003      52524F52 
 2003      5F4E554C 
 2003      4C00
 2004              	.LASF58:
 2005 031d 5254455F 		.ascii	"RTE_event\000"
 2005      6576656E 
 2005      7400
 2006              	.LASF30:
 2007 0327 52435F53 		.ascii	"RC_SUCCESS\000"
 2007      55434345 
 2007      535300
 2008              	.LASF25:
 2009 0332 5461736B 		.ascii	"TaskType\000"
 2009      54797065 
 2009      00
 2010              	.LASF31:
 2011 033b 52435F45 		.ascii	"RC_ERROR\000"
 2011      52524F52 
 2011      00
 2012              	.LASF38:
 2013 0344 52435F45 		.ascii	"RC_ERROR_BUFFER_FULL\000"
 2013      52524F52 
 2013      5F425546 
 2013      4645525F 
 2013      46554C4C 
 2014              	.LASF98:
 2015 0359 5254455F 		.ascii	"RTE_SC_SPEED_set\000"
 2015      53435F53 
 2015      50454544 
 2015      5F736574 
 2015      00
 2016              	.LASF50:
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccNhv63R.s 			page 52


 2017 036a 52435F45 		.ascii	"RC_ERROR_BAD_PARAM\000"
 2017      52524F52 
 2017      5F424144 
 2017      5F504152 
 2017      414D00
 2018              	.LASF49:
 2019 037d 52435F45 		.ascii	"RC_ERROR_NOT_MATCH\000"
 2019      52524F52 
 2019      5F4E4F54 
 2019      5F4D4154 
 2019      434800
 2020              	.LASF42:
 2021 0390 52435F45 		.ascii	"RC_ERROR_OPEN\000"
 2021      52524F52 
 2021      5F4F5045 
 2021      4E00
 2022              	.LASF90:
 2023 039e 53435F53 		.ascii	"SC_SPEED_driverOut_t\000"
 2023      50454544 
 2023      5F647269 
 2023      7665724F 
 2023      75745F74 
 2024              	.LASF89:
 2025 03b3 53435F53 		.ascii	"SC_SPEED_driverIn_t\000"
 2025      50454544 
 2025      5F647269 
 2025      76657249 
 2025      6E5F7400 
 2026              	.LASF68:
 2027 03c7 53435F4A 		.ascii	"SC_JOYSTICK_driverIn_t\000"
 2027      4F595354 
 2027      49434B5F 
 2027      64726976 
 2027      6572496E 
 2028              	.LASF67:
 2029 03de 53435F4A 		.ascii	"SC_JOYSTICK_data_t\000"
 2029      4F595354 
 2029      49434B5F 
 2029      64617461 
 2029      5F7400
 2030              	.LASF34:
 2031 03f1 52435F45 		.ascii	"RC_ERROR_MEMORY\000"
 2031      52524F52 
 2031      5F4D454D 
 2031      4F525900 
 2032              	.LASF63:
 2033 0401 5254455F 		.ascii	"RTE_SIGNALSTATUS_INVALID\000"
 2033      5349474E 
 2033      414C5354 
 2033      41545553 
 2033      5F494E56 
 2034              	.LASF29:
 2035 041a 626F6F6C 		.ascii	"boolean_t\000"
 2035      65616E5F 
 2035      7400
 2036              	.LASF106:
 2037 0424 45455F6F 		.ascii	"EE_oo_IRQ_suspend_status\000"
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccNhv63R.s 			page 53


 2037      6F5F4952 
 2037      515F7375 
 2037      7370656E 
 2037      645F7374 
 2038              	.LASF107:
 2039 043d 45455F41 		.ascii	"EE_ApplicationMode\000"
 2039      70706C69 
 2039      63617469 
 2039      6F6E4D6F 
 2039      646500
 2040              	.LASF52:
 2041 0450 52435F45 		.ascii	"RC_ERROR_CANCELED\000"
 2041      52524F52 
 2041      5F43414E 
 2041      43454C45 
 2041      4400
 2042              	.LASF47:
 2043 0462 52435F45 		.ascii	"RC_ERROR_READ_FAILS\000"
 2043      52524F52 
 2043      5F524541 
 2043      445F4641 
 2043      494C5300 
 2044              	.LASF24:
 2045 0476 45455F54 		.ascii	"EE_TID\000"
 2045      494400
 2046              	.LASF70:
 2047 047d 696E4472 		.ascii	"inDriver\000"
 2047      69766572 
 2047      00
 2048              	.LASF15:
 2049 0486 666C6F61 		.ascii	"float\000"
 2049      7400
 2050              	.LASF85:
 2051 048c 70536967 		.ascii	"pSigCfg\000"
 2051      43666700 
 2052              	.LASF96:
 2053 0494 5254455F 		.ascii	"RTE_SC_SPEED_get\000"
 2053      53435F53 
 2053      50454544 
 2053      5F676574 
 2053      00
 2054              	.LASF40:
 2055 04a5 52435F45 		.ascii	"RC_ERROR_BUSY\000"
 2055      52524F52 
 2055      5F425553 
 2055      5900
 2056              	.LASF76:
 2057 04b3 6F6E4572 		.ascii	"onErrorTaskCount\000"
 2057      726F7254 
 2057      61736B43 
 2057      6F756E74 
 2057      00
 2058              	.LASF45:
 2059 04c4 52435F45 		.ascii	"RC_ERROR_WRITE_ONLY\000"
 2059      52524F52 
 2059      5F575249 
 2059      54455F4F 
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccNhv63R.s 			page 54


 2059      4E4C5900 
 2060              	.LASF13:
 2061 04d8 696E7433 		.ascii	"int32_t\000"
 2061      325F7400 
 2062              	.LASF1:
 2063 04e0 756E7369 		.ascii	"unsigned char\000"
 2063      676E6564 
 2063      20636861 
 2063      7200
 2064              	.LASF111:
 2065 04ee 7764745F 		.ascii	"wdt_test\000"
 2065      74657374 
 2065      00
 2066              	.LASF2:
 2067 04f7 73686F72 		.ascii	"short int\000"
 2067      7420696E 
 2067      7400
 2068              	.LASF69:
 2069 0501 53435F4A 		.ascii	"SC_JOYSTICK_driverOut_t\000"
 2069      4F595354 
 2069      49434B5F 
 2069      64726976 
 2069      65724F75 
 2070              	.LASF75:
 2071 0519 6F6E5570 		.ascii	"onUpdateTasks\000"
 2071      64617465 
 2071      5461736B 
 2071      7300
 2072              	.LASF113:
 2073 0527 534F5F53 		.ascii	"SO_SPEED_signal\000"
 2073      50454544 
 2073      5F736967 
 2073      6E616C00 
 2074              	.LASF118:
 2075 0537 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2075      43313120 
 2075      352E342E 
 2075      31203230 
 2075      31363036 
 2076 056a 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2076      20726576 
 2076      6973696F 
 2076      6E203233 
 2076      37373135 
 2077 059d 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2077      66756E63 
 2077      74696F6E 
 2077      2D736563 
 2077      74696F6E 
 2078              	.LASF121:
 2079 05c5 434F4E54 		.ascii	"CONTROL_calcControl_run\000"
 2079      524F4C5F 
 2079      63616C63 
 2079      436F6E74 
 2079      726F6C5F 
 2080              	.LASF73:
 2081 05dd 65764F6E 		.ascii	"evOnError\000"
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccNhv63R.s 			page 55


 2081      4572726F 
 2081      7200
 2082              	.LASF33:
 2083 05e7 52435F45 		.ascii	"RC_ERROR_ZERO\000"
 2083      52524F52 
 2083      5F5A4552 
 2083      4F00
 2084              	.LASF82:
 2085 05f5 53435F4A 		.ascii	"SC_JOYSTICK_s\000"
 2085      4F595354 
 2085      49434B5F 
 2085      7300
 2086              	.LASF86:
 2087 0603 53435F4A 		.ascii	"SC_JOYSTICK_t\000"
 2087      4F595354 
 2087      49434B5F 
 2087      7400
 2088              	.LASF14:
 2089 0611 75696E74 		.ascii	"uint32_t\000"
 2089      33325F74 
 2089      00
 2090              	.LASF97:
 2091 061a 7369676E 		.ascii	"signal\000"
 2091      616C00
 2092              	.LASF88:
 2093 0621 53435F53 		.ascii	"SC_SPEED_data_t\000"
 2093      50454544 
 2093      5F646174 
 2093      615F7400 
 2094              	.LASF44:
 2095 0631 52435F45 		.ascii	"RC_ERROR_READ_ONLY\000"
 2095      52524F52 
 2095      5F524541 
 2095      445F4F4E 
 2095      4C5900
 2096              	.LASF19:
 2097 0644 6C6F6E67 		.ascii	"long double\000"
 2097      20646F75 
 2097      626C6500 
 2098              	.LASF17:
 2099 0650 63686172 		.ascii	"char\000"
 2099      00
 2100              	.LASF61:
 2101 0655 5254455F 		.ascii	"RTE_SIGNALSTATUS_INITIALIZED\000"
 2101      5349474E 
 2101      414C5354 
 2101      41545553 
 2101      5F494E49 
 2102              	.LASF115:
 2103 0672 57445F41 		.ascii	"WD_Alive\000"
 2103      6C697665 
 2103      00
 2104              	.LASF78:
 2105 067b 7265736F 		.ascii	"resourceActive\000"
 2105      75726365 
 2105      41637469 
 2105      766500
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccNhv63R.s 			page 56


 2106              	.LASF117:
 2107 068a 696E7454 		.ascii	"intToASCII\000"
 2107      6F415343 
 2107      494900
 2108              	.LASF5:
 2109 0695 5F5F696E 		.ascii	"__int32_t\000"
 2109      7433325F 
 2109      7400
 2110              	.LASF55:
 2111 069f 52435F45 		.ascii	"RC_ERROR_NOT_IMPLEMENTED\000"
 2111      52524F52 
 2111      5F4E4F54 
 2111      5F494D50 
 2111      4C454D45 
 2112              	.LASF103:
 2113 06b8 73706565 		.ascii	"speedValue\000"
 2113      6456616C 
 2113      756500
 2114              	.LASF36:
 2115 06c3 52435F45 		.ascii	"RC_ERROR_OVERRUN\000"
 2115      52524F52 
 2115      5F4F5645 
 2115      5252554E 
 2115      00
 2116              	.LASF101:
 2117 06d4 7461736B 		.ascii	"task\000"
 2117      00
 2118              	.LASF64:
 2119 06d9 5254455F 		.ascii	"RTE_signalStatus_t\000"
 2119      7369676E 
 2119      616C5374 
 2119      61747573 
 2119      5F7400
 2120              	.LASF3:
 2121 06ec 73686F72 		.ascii	"short unsigned int\000"
 2121      7420756E 
 2121      7369676E 
 2121      65642069 
 2121      6E7400
 2122              	.LASF57:
 2123 06ff 5461736B 		.ascii	"TaskTypeArray\000"
 2123      54797065 
 2123      41727261 
 2123      7900
 2124              	.LASF99:
 2125 070d 7461736B 		.ascii	"taskNum\000"
 2125      4E756D00 
 2126              	.LASF116:
 2127 0715 55415254 		.ascii	"UART_LOG_PutString\000"
 2127      5F4C4F47 
 2127      5F507574 
 2127      53747269 
 2127      6E6700
 2128              	.LASF28:
 2129 0728 73696E74 		.ascii	"sint8_t\000"
 2129      385F7400 
 2130              	.LASF84:
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccNhv63R.s 			page 57


 2131 0730 73746174 		.ascii	"status\000"
 2131      757300
 2132              	.LASF46:
 2133 0737 52435F45 		.ascii	"RC_ERROR_INVALID\000"
 2133      52524F52 
 2133      5F494E56 
 2133      414C4944 
 2133      00
 2134              	.LASF21:
 2135 0748 45455F55 		.ascii	"EE_UINT32\000"
 2135      494E5433 
 2135      3200
 2136              	.LASF35:
 2137 0752 52435F45 		.ascii	"RC_ERROR_RANGE\000"
 2137      52524F52 
 2137      5F52414E 
 2137      474500
 2138              	.LASF20:
 2139 0761 45455F49 		.ascii	"EE_INT32\000"
 2139      4E543332 
 2139      00
 2140              	.LASF12:
 2141 076a 75696E74 		.ascii	"uint8_t\000"
 2141      385F7400 
 2142              	.LASF109:
 2143 0772 45455F49 		.ascii	"EE_IRQ_nesting_level\000"
 2143      52515F6E 
 2143      65737469 
 2143      6E675F6C 
 2143      6576656C 
 2144              	.LASF102:
 2145 0787 5254455F 		.ascii	"RTE_SC_SPEED_getAge\000"
 2145      53435F53 
 2145      50454544 
 2145      5F676574 
 2145      41676500 
 2146              	.LASF87:
 2147 079b 73706565 		.ascii	"speed\000"
 2147      6400
 2148              	.LASF77:
 2149 07a1 6F6E4572 		.ascii	"onErrorTasks\000"
 2149      726F7254 
 2149      61736B73 
 2149      00
 2150              	.LASF23:
 2151 07ae 45455F46 		.ascii	"EE_FREG\000"
 2151      52454700 
 2152              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
