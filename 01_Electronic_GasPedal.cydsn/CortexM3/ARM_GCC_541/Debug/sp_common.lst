ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"sp_common.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.RTE_timertick_sp_common_tick,"ax",%progbits
  20              		.align	2
  21              		.global	RTE_timertick_sp_common_tick
  22              		.thumb
  23              		.thumb_func
  24              		.type	RTE_timertick_sp_common_tick, %function
  25              	RTE_timertick_sp_common_tick:
  26              	.LFB150:
  27              		.file 1 "source\\rte\\sp_common.c"
   1:source\rte/sp_common.c **** 
   2:source\rte/sp_common.c **** 
   3:source\rte/sp_common.c **** /*
   4:source\rte/sp_common.c ****  * Filename: sp_common.c
   5:source\rte/sp_common.c ****  *
   6:source\rte/sp_common.c ****  * Author: Autogenerated by H-DA RTE Generator, (c) Prof. Fromm
   7:source\rte/sp_common.c ****  */
   8:source\rte/sp_common.c **** 
   9:source\rte/sp_common.c **** #include "project.h"
  10:source\rte/sp_common.c **** #include "global.h"
  11:source\rte/sp_common.c **** #include "rte.h"
  12:source\rte/sp_common.c **** #include "rte_types.h"
  13:source\rte/sp_common.c **** #include "sp_common.h"
  14:source\rte/sp_common.c **** 
  15:source\rte/sp_common.c **** 
  16:source\rte/sp_common.c **** 
  17:source\rte/sp_common.c **** /* USER CODE START SP_COMMON_INCLUDE */
  18:source\rte/sp_common.c **** 
  19:source\rte/sp_common.c **** /* USER CODE END SP_COMMON_INCLUDE */
  20:source\rte/sp_common.c **** 
  21:source\rte/sp_common.c **** #include "sc_joystick.h"
  22:source\rte/sp_common.c **** #include "sc_joystick_type.h"
  23:source\rte/sp_common.c **** #include "sc_speed.h"
  24:source\rte/sp_common.c **** #include "sc_speed_type.h"
  25:source\rte/sp_common.c **** #include "sc_engine.h"
  26:source\rte/sp_common.c **** #include "sc_engine_type.h"
  27:source\rte/sp_common.c **** #include "sc_brakelight.h"
  28:source\rte/sp_common.c **** #include "sc_brakelight_type.h"
  29:source\rte/sp_common.c **** 
  30:source\rte/sp_common.c **** 
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 2


  31:source\rte/sp_common.c **** 
  32:source\rte/sp_common.c **** /* signal configuration */
  33:source\rte/sp_common.c **** /*
  34:source\rte/sp_common.c **** * description: A Signal representing the joystick.
  35:source\rte/sp_common.c **** * indriver: default
  36:source\rte/sp_common.c **** * name: so_joystick
  37:source\rte/sp_common.c **** * onDataError: 0
  38:source\rte/sp_common.c **** * onDataUpdate: ev_joystick_onData
  39:source\rte/sp_common.c **** * outdriver: 0
  40:source\rte/sp_common.c **** * resource: None
  41:source\rte/sp_common.c **** * shortname: joystick
  42:source\rte/sp_common.c **** * signalclass: sc_joystick
  43:source\rte/sp_common.c **** * signalpool: sp_common
  44:source\rte/sp_common.c **** */
  45:source\rte/sp_common.c **** 
  46:source\rte/sp_common.c **** 
  47:source\rte/sp_common.c **** /* The following array contains the receiving tasks for onUpdate signal events */
  48:source\rte/sp_common.c **** const TaskTypeArray so_joystick_updTasks = { tsk_control };
  49:source\rte/sp_common.c ****  
  50:source\rte/sp_common.c **** 
  51:source\rte/sp_common.c **** static const SC_JOYSTICK_cfg_t SO_JOYSTICK_cfg = 
  52:source\rte/sp_common.c **** {
  53:source\rte/sp_common.c ****    /* indriver           */  SC_JOYSTICK_driverIn,
  54:source\rte/sp_common.c ****    /* outdriver          */  0,
  55:source\rte/sp_common.c **** 
  56:source\rte/sp_common.c ****    /* onUpdate           */  ev_joystick_onData,
  57:source\rte/sp_common.c ****    /* onError            */  0,
  58:source\rte/sp_common.c ****    /* taskCount onUpdate */  1,
  59:source\rte/sp_common.c ****    /* task list onUpdate */  &so_joystick_updTasks,
  60:source\rte/sp_common.c ****    /* taskCount onError  */  0,
  61:source\rte/sp_common.c ****    /* task list onError  */  NULL,
  62:source\rte/sp_common.c **** 
  63:source\rte/sp_common.c ****    /* resource active    */  FALSE,
  64:source\rte/sp_common.c ****    /* resource           */  NULL,
  65:source\rte/sp_common.c ****    
  66:source\rte/sp_common.c **** }; /* configuration so_joystick */
  67:source\rte/sp_common.c **** 
  68:source\rte/sp_common.c **** 
  69:source\rte/sp_common.c **** /* signal data */
  70:source\rte/sp_common.c **** 
  71:source\rte/sp_common.c **** SC_JOYSTICK_t SO_JOYSTICK_signal= 
  72:source\rte/sp_common.c **** {
  73:source\rte/sp_common.c ****    /* init value    */  SC_JOYSTICK_INIT_DATA,
  74:source\rte/sp_common.c ****    /* status        */  RTE_SIGNALSTATUS_STARTUP,
  75:source\rte/sp_common.c ****    /* age           */  0,
  76:source\rte/sp_common.c ****    /* cfg           */  &SO_JOYSTICK_cfg,
  77:source\rte/sp_common.c **** }; /* data so_joystick */
  78:source\rte/sp_common.c **** 
  79:source\rte/sp_common.c **** /* signal configuration */
  80:source\rte/sp_common.c **** /*
  81:source\rte/sp_common.c **** * description: A Signal representing the speed.
  82:source\rte/sp_common.c **** * indriver: 0
  83:source\rte/sp_common.c **** * name: so_speed
  84:source\rte/sp_common.c **** * onDataError: 0
  85:source\rte/sp_common.c **** * onDataUpdate: ev_speed_onData
  86:source\rte/sp_common.c **** * outdriver: 0
  87:source\rte/sp_common.c **** * resource: None
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 3


  88:source\rte/sp_common.c **** * shortname: speed
  89:source\rte/sp_common.c **** * signalclass: sc_speed
  90:source\rte/sp_common.c **** * signalpool: sp_common
  91:source\rte/sp_common.c **** */
  92:source\rte/sp_common.c **** 
  93:source\rte/sp_common.c **** 
  94:source\rte/sp_common.c **** /* The following array contains the receiving tasks for onUpdate signal events */
  95:source\rte/sp_common.c **** const TaskTypeArray so_speed_updTasks = { tsk_inputoutput };
  96:source\rte/sp_common.c ****  
  97:source\rte/sp_common.c **** 
  98:source\rte/sp_common.c **** static const SC_SPEED_cfg_t SO_SPEED_cfg = 
  99:source\rte/sp_common.c **** {
 100:source\rte/sp_common.c ****    /* indriver           */  0,
 101:source\rte/sp_common.c ****    /* outdriver          */  0,
 102:source\rte/sp_common.c **** 
 103:source\rte/sp_common.c ****    /* onUpdate           */  ev_speed_onData,
 104:source\rte/sp_common.c ****    /* onError            */  0,
 105:source\rte/sp_common.c ****    /* taskCount onUpdate */  1,
 106:source\rte/sp_common.c ****    /* task list onUpdate */  &so_speed_updTasks,
 107:source\rte/sp_common.c ****    /* taskCount onError  */  0,
 108:source\rte/sp_common.c ****    /* task list onError  */  NULL,
 109:source\rte/sp_common.c **** 
 110:source\rte/sp_common.c ****    /* resource active    */  FALSE,
 111:source\rte/sp_common.c ****    /* resource           */  NULL,
 112:source\rte/sp_common.c ****    
 113:source\rte/sp_common.c **** }; /* configuration so_speed */
 114:source\rte/sp_common.c **** 
 115:source\rte/sp_common.c **** 
 116:source\rte/sp_common.c **** /* signal data */
 117:source\rte/sp_common.c **** 
 118:source\rte/sp_common.c **** SC_SPEED_t SO_SPEED_signal= 
 119:source\rte/sp_common.c **** {
 120:source\rte/sp_common.c ****    /* init value    */  SC_SPEED_INIT_DATA,
 121:source\rte/sp_common.c ****    /* status        */  RTE_SIGNALSTATUS_STARTUP,
 122:source\rte/sp_common.c ****    /* age           */  0,
 123:source\rte/sp_common.c ****    /* cfg           */  &SO_SPEED_cfg,
 124:source\rte/sp_common.c **** }; /* data so_speed */
 125:source\rte/sp_common.c **** 
 126:source\rte/sp_common.c **** /* signal configuration */
 127:source\rte/sp_common.c **** /*
 128:source\rte/sp_common.c **** * description: A Signal representing the engine.
 129:source\rte/sp_common.c **** * indriver: 0
 130:source\rte/sp_common.c **** * name: so_engine
 131:source\rte/sp_common.c **** * onDataError: 0
 132:source\rte/sp_common.c **** * onDataUpdate: 0
 133:source\rte/sp_common.c **** * outdriver: default
 134:source\rte/sp_common.c **** * resource: None
 135:source\rte/sp_common.c **** * shortname: engine
 136:source\rte/sp_common.c **** * signalclass: sc_engine
 137:source\rte/sp_common.c **** * signalpool: sp_common
 138:source\rte/sp_common.c **** */
 139:source\rte/sp_common.c **** 
 140:source\rte/sp_common.c ****  
 141:source\rte/sp_common.c **** 
 142:source\rte/sp_common.c **** static const SC_ENGINE_cfg_t SO_ENGINE_cfg = 
 143:source\rte/sp_common.c **** {
 144:source\rte/sp_common.c ****    /* indriver           */  0,
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 4


 145:source\rte/sp_common.c ****    /* outdriver          */  SC_ENGINE_driverOut,
 146:source\rte/sp_common.c **** 
 147:source\rte/sp_common.c ****    /* onUpdate           */  0,
 148:source\rte/sp_common.c ****    /* onError            */  0,
 149:source\rte/sp_common.c ****    /* taskCount onUpdate */  0,
 150:source\rte/sp_common.c ****    /* task list onUpdate */  NULL,
 151:source\rte/sp_common.c ****    /* taskCount onError  */  0,
 152:source\rte/sp_common.c ****    /* task list onError  */  NULL,
 153:source\rte/sp_common.c **** 
 154:source\rte/sp_common.c ****    /* resource active    */  FALSE,
 155:source\rte/sp_common.c ****    /* resource           */  NULL,
 156:source\rte/sp_common.c ****    
 157:source\rte/sp_common.c **** }; /* configuration so_engine */
 158:source\rte/sp_common.c **** 
 159:source\rte/sp_common.c **** 
 160:source\rte/sp_common.c **** /* signal data */
 161:source\rte/sp_common.c **** 
 162:source\rte/sp_common.c **** SC_ENGINE_t SO_ENGINE_signal= 
 163:source\rte/sp_common.c **** {
 164:source\rte/sp_common.c ****    /* init value    */  SC_ENGINE_INIT_DATA,
 165:source\rte/sp_common.c ****    /* status        */  RTE_SIGNALSTATUS_STARTUP,
 166:source\rte/sp_common.c ****    /* age           */  0,
 167:source\rte/sp_common.c ****    /* cfg           */  &SO_ENGINE_cfg,
 168:source\rte/sp_common.c **** }; /* data so_engine */
 169:source\rte/sp_common.c **** 
 170:source\rte/sp_common.c **** /* signal configuration */
 171:source\rte/sp_common.c **** /*
 172:source\rte/sp_common.c **** * description: A Signal representing the brake light.
 173:source\rte/sp_common.c **** * indriver: 0
 174:source\rte/sp_common.c **** * name: so_brakeLight
 175:source\rte/sp_common.c **** * onDataError: 0
 176:source\rte/sp_common.c **** * onDataUpdate: 0
 177:source\rte/sp_common.c **** * outdriver: default
 178:source\rte/sp_common.c **** * resource: None
 179:source\rte/sp_common.c **** * shortname: brakeLight
 180:source\rte/sp_common.c **** * signalclass: sc_brakeLight
 181:source\rte/sp_common.c **** * signalpool: sp_common
 182:source\rte/sp_common.c **** */
 183:source\rte/sp_common.c **** 
 184:source\rte/sp_common.c ****  
 185:source\rte/sp_common.c **** 
 186:source\rte/sp_common.c **** static const SC_BRAKELIGHT_cfg_t SO_BRAKELIGHT_cfg = 
 187:source\rte/sp_common.c **** {
 188:source\rte/sp_common.c ****    /* indriver           */  0,
 189:source\rte/sp_common.c ****    /* outdriver          */  SC_BRAKELIGHT_driverOut,
 190:source\rte/sp_common.c **** 
 191:source\rte/sp_common.c ****    /* onUpdate           */  0,
 192:source\rte/sp_common.c ****    /* onError            */  0,
 193:source\rte/sp_common.c ****    /* taskCount onUpdate */  0,
 194:source\rte/sp_common.c ****    /* task list onUpdate */  NULL,
 195:source\rte/sp_common.c ****    /* taskCount onError  */  0,
 196:source\rte/sp_common.c ****    /* task list onError  */  NULL,
 197:source\rte/sp_common.c **** 
 198:source\rte/sp_common.c ****    /* resource active    */  FALSE,
 199:source\rte/sp_common.c ****    /* resource           */  NULL,
 200:source\rte/sp_common.c ****    
 201:source\rte/sp_common.c **** }; /* configuration so_brakelight */
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 5


 202:source\rte/sp_common.c **** 
 203:source\rte/sp_common.c **** 
 204:source\rte/sp_common.c **** /* signal data */
 205:source\rte/sp_common.c **** 
 206:source\rte/sp_common.c **** SC_BRAKELIGHT_t SO_BRAKELIGHT_signal= 
 207:source\rte/sp_common.c **** {
 208:source\rte/sp_common.c ****    /* init value    */  SC_BRAKELIGHT_INIT_DATA,
 209:source\rte/sp_common.c ****    /* status        */  RTE_SIGNALSTATUS_STARTUP,
 210:source\rte/sp_common.c ****    /* age           */  0,
 211:source\rte/sp_common.c ****    /* cfg           */  &SO_BRAKELIGHT_cfg,
 212:source\rte/sp_common.c **** }; /* data so_brakelight */
 213:source\rte/sp_common.c **** 
 214:source\rte/sp_common.c **** 
 215:source\rte/sp_common.c **** 
 216:source\rte/sp_common.c **** void RTE_timertick_sp_common_tick(uint32_t tick){
  28              		.loc 1 216 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34              	.LBB10:
  35              	.LBB11:
  36              		.file 2 "source\\rte\\sc_joystick.h"
   1:source\rte/sc_joystick.h **** 
   2:source\rte/sc_joystick.h **** 
   3:source\rte/sc_joystick.h **** /**
   4:source\rte/sc_joystick.h **** *  file    SC_JOYSTICK_signal.h
   5:source\rte/sc_joystick.h **** *
   6:source\rte/sc_joystick.h **** *  brief   signal base class for signal sc_joystick
   7:source\rte/sc_joystick.h **** *
   8:source\rte/sc_joystick.h **** *  author  Autogenerated, Peter Fromm       <peter.fromm@h-da.de>
   9:source\rte/sc_joystick.h **** *
  10:source\rte/sc_joystick.h **** *
  11:source\rte/sc_joystick.h **** */
  12:source\rte/sc_joystick.h **** 
  13:source\rte/sc_joystick.h **** /*
  14:source\rte/sc_joystick.h **** * description: Signalclass representing the user input.
  15:source\rte/sc_joystick.h **** * name: sc_joystick
  16:source\rte/sc_joystick.h **** * shortname: joystick
  17:source\rte/sc_joystick.h **** */
  18:source\rte/sc_joystick.h **** 
  19:source\rte/sc_joystick.h **** #ifndef SC_JOYSTICK_SIGNAL_H_INCLUDED
  20:source\rte/sc_joystick.h **** #define SC_JOYSTICK_SIGNAL_H_INCLUDED
  21:source\rte/sc_joystick.h **** 
  22:source\rte/sc_joystick.h **** /*================================================[ public includes  ]=============================
  23:source\rte/sc_joystick.h **** #include "global.h"
  24:source\rte/sc_joystick.h **** #include "project.h"
  25:source\rte/sc_joystick.h **** #include "rte.h"
  26:source\rte/sc_joystick.h **** #include "rte_types.h"
  27:source\rte/sc_joystick.h **** 
  28:source\rte/sc_joystick.h **** #include "sc_joystick_type.h"
  29:source\rte/sc_joystick.h **** 
  30:source\rte/sc_joystick.h **** 
  31:source\rte/sc_joystick.h **** /**************************************************************************************************
  32:source\rte/sc_joystick.h **** /* The driver API block																						*/
  33:source\rte/sc_joystick.h **** /**************************************************************************************************
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 6


  34:source\rte/sc_joystick.h ****                                                                                                    
  35:source\rte/sc_joystick.h **** /**
  36:source\rte/sc_joystick.h ****  *  Definition of function types for driver interfaces.
  37:source\rte/sc_joystick.h ****  *  I-Port
  38:source\rte/sc_joystick.h ****  */
  39:source\rte/sc_joystick.h **** typedef RC_t (*SC_JOYSTICK_driverIn_t)(SC_JOYSTICK_data_t * const);
  40:source\rte/sc_joystick.h **** 
  41:source\rte/sc_joystick.h **** /**
  42:source\rte/sc_joystick.h ****  *  Definition of function types for driver interfaces.
  43:source\rte/sc_joystick.h ****  *  O-Port
  44:source\rte/sc_joystick.h ****  */
  45:source\rte/sc_joystick.h **** typedef RC_t (*SC_JOYSTICK_driverOut_t)( const SC_JOYSTICK_data_t * const);
  46:source\rte/sc_joystick.h **** 
  47:source\rte/sc_joystick.h **** 
  48:source\rte/sc_joystick.h **** /**************************************************************************************************
  49:source\rte/sc_joystick.h **** /* The signal configuration API block																				*/
  50:source\rte/sc_joystick.h **** /**************************************************************************************************
  51:source\rte/sc_joystick.h **** 
  52:source\rte/sc_joystick.h **** /**
  53:source\rte/sc_joystick.h ****  * Instances of the struct SC_JOYSTICK_cfg_t represent the signal object configuration.
  54:source\rte/sc_joystick.h ****  */
  55:source\rte/sc_joystick.h **** struct SC_JOYSTICK_cfg_s
  56:source\rte/sc_joystick.h **** {
  57:source\rte/sc_joystick.h ****     /**
  58:source\rte/sc_joystick.h ****      * Function pointer to the input driver
  59:source\rte/sc_joystick.h ****      */
  60:source\rte/sc_joystick.h ****     SC_JOYSTICK_driverIn_t const inDriver;
  61:source\rte/sc_joystick.h **** 
  62:source\rte/sc_joystick.h ****     /**
  63:source\rte/sc_joystick.h ****      * Function pointer to the output driver table
  64:source\rte/sc_joystick.h ****      */
  65:source\rte/sc_joystick.h ****    SC_JOYSTICK_driverOut_t const outDriver;
  66:source\rte/sc_joystick.h ****    
  67:source\rte/sc_joystick.h ****     /**
  68:source\rte/sc_joystick.h ****      * Event onUpdate
  69:source\rte/sc_joystick.h ****      */
  70:source\rte/sc_joystick.h ****     EventMaskType const evOnUpdate;
  71:source\rte/sc_joystick.h ****     
  72:source\rte/sc_joystick.h ****     
  73:source\rte/sc_joystick.h ****     /**
  74:source\rte/sc_joystick.h ****      * Event onError
  75:source\rte/sc_joystick.h ****      */
  76:source\rte/sc_joystick.h ****     EventMaskType const evOnError;
  77:source\rte/sc_joystick.h ****     
  78:source\rte/sc_joystick.h ****     /**
  79:source\rte/sc_joystick.h ****      * Task Count onUpdate
  80:source\rte/sc_joystick.h ****      */
  81:source\rte/sc_joystick.h ****     size_t const onUpdateTaskCount;
  82:source\rte/sc_joystick.h **** 
  83:source\rte/sc_joystick.h ****     /**
  84:source\rte/sc_joystick.h ****      * Task List onUpdate
  85:source\rte/sc_joystick.h ****      */
  86:source\rte/sc_joystick.h ****     TaskTypeArray* const onUpdateTasks;
  87:source\rte/sc_joystick.h ****     
  88:source\rte/sc_joystick.h ****     /**
  89:source\rte/sc_joystick.h ****      * Task Count onError
  90:source\rte/sc_joystick.h ****      */
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 7


  91:source\rte/sc_joystick.h ****     size_t const onErrorTaskCount;
  92:source\rte/sc_joystick.h **** 
  93:source\rte/sc_joystick.h ****     /**
  94:source\rte/sc_joystick.h ****      * Task List onError
  95:source\rte/sc_joystick.h ****      */
  96:source\rte/sc_joystick.h ****     TaskTypeArray* const onErrorTasks;
  97:source\rte/sc_joystick.h **** 	
  98:source\rte/sc_joystick.h **** 	
  99:source\rte/sc_joystick.h **** 	/**
 100:source\rte/sc_joystick.h **** 	 * Ressourse is active? We need an additional boolean as a ressource value 0 is valid.
 101:source\rte/sc_joystick.h **** 	 */
 102:source\rte/sc_joystick.h **** 	 boolean_t const resourceActive;
 103:source\rte/sc_joystick.h **** 	 
 104:source\rte/sc_joystick.h **** 	/**
 105:source\rte/sc_joystick.h **** 	 * Ressourse 
 106:source\rte/sc_joystick.h **** 	 */
 107:source\rte/sc_joystick.h **** 	 ResourceType const resource;
 108:source\rte/sc_joystick.h **** 
 109:source\rte/sc_joystick.h **** };                                                                                                 
 110:source\rte/sc_joystick.h **** typedef const struct SC_JOYSTICK_cfg_s SC_JOYSTICK_cfg_t;
 111:source\rte/sc_joystick.h ****                               
 112:source\rte/sc_joystick.h **** /**************************************************************************************************
 113:source\rte/sc_joystick.h **** /* The data interface block																							*/
 114:source\rte/sc_joystick.h **** /**************************************************************************************************
 115:source\rte/sc_joystick.h **** 
 116:source\rte/sc_joystick.h ****                                                                                                    
 117:source\rte/sc_joystick.h **** 							  
 118:source\rte/sc_joystick.h **** /**
 119:source\rte/sc_joystick.h ****  * Instances of the struct SC_JOYSTICK_t represent the signal objects.
 120:source\rte/sc_joystick.h ****  * A signal object contains the current application value 'value' as well as relevant meta data.
 121:source\rte/sc_joystick.h ****  */
 122:source\rte/sc_joystick.h **** struct SC_JOYSTICK_s
 123:source\rte/sc_joystick.h **** {                                                                                                  
 124:source\rte/sc_joystick.h **** 
 125:source\rte/sc_joystick.h **** 	/**
 126:source\rte/sc_joystick.h **** 	 * Data buffer for the application value
 127:source\rte/sc_joystick.h **** 	 */
 128:source\rte/sc_joystick.h ****     SC_JOYSTICK_data_t value;
 129:source\rte/sc_joystick.h **** 
 130:source\rte/sc_joystick.h ****     /**
 131:source\rte/sc_joystick.h ****      * Current signal status
 132:source\rte/sc_joystick.h ****      */
 133:source\rte/sc_joystick.h ****     RTE_signalStatus_t status;
 134:source\rte/sc_joystick.h **** 
 135:source\rte/sc_joystick.h ****     /**
 136:source\rte/sc_joystick.h ****      * Current age of the signal (in calling cycles)
 137:source\rte/sc_joystick.h ****      */
 138:source\rte/sc_joystick.h ****     uint32_t age;
 139:source\rte/sc_joystick.h **** 
 140:source\rte/sc_joystick.h ****     /**
 141:source\rte/sc_joystick.h ****      * Pointer to the signal configuration
 142:source\rte/sc_joystick.h ****      */
 143:source\rte/sc_joystick.h **** 	const SC_JOYSTICK_cfg_t * const    pSigCfg;
 144:source\rte/sc_joystick.h **** 
 145:source\rte/sc_joystick.h **** };                                                                                                 
 146:source\rte/sc_joystick.h **** typedef struct SC_JOYSTICK_s SC_JOYSTICK_t;
 147:source\rte/sc_joystick.h **** 
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 8


 148:source\rte/sc_joystick.h **** /**************************************************************************************************
 149:source\rte/sc_joystick.h **** /* Signal initialisation   																							*/
 150:source\rte/sc_joystick.h **** /**************************************************************************************************
 151:source\rte/sc_joystick.h **** 
 152:source\rte/sc_joystick.h **** /**
 153:source\rte/sc_joystick.h ****  * Initializes a signal instance with a passed init value.
 154:source\rte/sc_joystick.h ****  * Depending on the configured conversion or scaling function the raw_value will be calculated.
 155:source\rte/sc_joystick.h ****  * Signal status will change from RTE_SIGNALSTATUS_STARTUP to RTE_SIGNALSTATUS_INITIALIZED.
 156:source\rte/sc_joystick.h ****  *
 157:source\rte/sc_joystick.h ****  * @param  SC_JOYSTICK_t * const signal: Pointer to the signal object which will be initialised
 158:source\rte/sc_joystick.h ****  * @param const sc_joystick_data_t * const value: Pointer to initial value of the application data
 159:source\rte/sc_joystick.h ****  * @return RC_t: standard return code, currently only RC_SUCCESS
 160:source\rte/sc_joystick.h ****  *
 161:source\rte/sc_joystick.h ****  **/
 162:source\rte/sc_joystick.h **** inline RC_t RTE_SC_JOYSTICK_init( SC_JOYSTICK_t * const signal, const SC_JOYSTICK_data_t * const va
 163:source\rte/sc_joystick.h **** {                                                                                                  
 164:source\rte/sc_joystick.h **** 
 165:source\rte/sc_joystick.h ****    RC_t ret = RC_SUCCESS;
 166:source\rte/sc_joystick.h **** 
 167:source\rte/sc_joystick.h ****    //Set value and raw value
 168:source\rte/sc_joystick.h ****    signal->value  = *value;
 169:source\rte/sc_joystick.h ****    signal->age    = 0;
 170:source\rte/sc_joystick.h ****    signal->status = RTE_SIGNALSTATUS_INITIALIZED;
 171:source\rte/sc_joystick.h **** 
 172:source\rte/sc_joystick.h ****    return ret;
 173:source\rte/sc_joystick.h **** }
 174:source\rte/sc_joystick.h **** 
 175:source\rte/sc_joystick.h **** /**************************************************************************************************
 176:source\rte/sc_joystick.h **** /* Status and timeout control																						*/
 177:source\rte/sc_joystick.h **** /**************************************************************************************************
 178:source\rte/sc_joystick.h **** 
 179:source\rte/sc_joystick.h **** /**
 180:source\rte/sc_joystick.h ****  *  Returns the current signal status of the passed signal instance.
 181:source\rte/sc_joystick.h ****  *
 182:source\rte/sc_joystick.h ****  * @param  SC_JOYSTICK_t * const signal: Pointer to the signal object
 183:source\rte/sc_joystick.h ****  * @return  sig_status_t: The current signal status
 184:source\rte/sc_joystick.h ****  *
 185:source\rte/sc_joystick.h ****  **/
 186:source\rte/sc_joystick.h **** inline RTE_signalStatus_t RTE_SC_JOYSTICK_getStatus( const SC_JOYSTICK_t * const signal )
 187:source\rte/sc_joystick.h **** {
 188:source\rte/sc_joystick.h ****    return signal->status;
 189:source\rte/sc_joystick.h **** }
 190:source\rte/sc_joystick.h **** 
 191:source\rte/sc_joystick.h **** 
 192:source\rte/sc_joystick.h **** /**
 193:source\rte/sc_joystick.h ****  *  Sets a new signal status of the passed signal instance by passing the new status.
 194:source\rte/sc_joystick.h ****  *
 195:source\rte/sc_joystick.h ****  * @param  SC_JOYSTICK_t * const signal: Pointer to the signal object
 196:source\rte/sc_joystick.h ****  * @param  const sig_status_t status: New signal status
 197:source\rte/sc_joystick.h ****  * @return RC_t: standard return code, currently only RC_SUCCESS
 198:source\rte/sc_joystick.h ****  *
 199:source\rte/sc_joystick.h ****  */
 200:source\rte/sc_joystick.h **** inline RC_t RTE_SC_JOYSTICK_setStatus( SC_JOYSTICK_t * const signal, const RTE_signalStatus_t statu
 201:source\rte/sc_joystick.h **** {
 202:source\rte/sc_joystick.h ****    signal->status = status;
 203:source\rte/sc_joystick.h ****    size_t taskNum=0;
 204:source\rte/sc_joystick.h ****    
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 9


 205:source\rte/sc_joystick.h ****    //Fire error events in case of invalid state
 206:source\rte/sc_joystick.h ****    if (signal->status == RTE_SIGNALSTATUS_INVALID)
 207:source\rte/sc_joystick.h ****    {
 208:source\rte/sc_joystick.h **** 	    //Pointer to the Taskarray, containing the tasks receiving the onUpdate events
 209:source\rte/sc_joystick.h **** 		TaskTypeArray* pTaskArray = signal->pSigCfg->onErrorTasks;
 210:source\rte/sc_joystick.h **** 
 211:source\rte/sc_joystick.h **** 		if (NULL!=signal->pSigCfg->evOnError && NULL != pTaskArray){
 212:source\rte/sc_joystick.h **** 			for( taskNum=0 ; taskNum < signal->pSigCfg->onErrorTaskCount ;taskNum++){
 213:source\rte/sc_joystick.h **** 				TaskType task = (*pTaskArray)[taskNum];
 214:source\rte/sc_joystick.h **** 				SetEvent( task, signal->pSigCfg->evOnError);
 215:source\rte/sc_joystick.h **** 			}
 216:source\rte/sc_joystick.h **** 		}
 217:source\rte/sc_joystick.h ****    }
 218:source\rte/sc_joystick.h ****    
 219:source\rte/sc_joystick.h ****    return RC_SUCCESS;
 220:source\rte/sc_joystick.h **** }
 221:source\rte/sc_joystick.h **** 
 222:source\rte/sc_joystick.h **** 
 223:source\rte/sc_joystick.h **** /**
 224:source\rte/sc_joystick.h ****  * Returns the count of refreshing trials (refresh, set or set_raw) that failed.
 225:source\rte/sc_joystick.h ****  * Prerquisite: The signal is refreshed cyclically
 226:source\rte/sc_joystick.h ****  *
 227:source\rte/sc_joystick.h ****  * @param  SC_JOYSTICK_t * const signal: Pointer to the signal object
 228:source\rte/sc_joystick.h ****  * @return uint32_t: Number of cycles since the signal has been updated for the last time
 229:source\rte/sc_joystick.h ****  */
 230:source\rte/sc_joystick.h **** inline uint32_t RTE_SC_JOYSTICK_getAge( const SC_JOYSTICK_t * const signal )
 231:source\rte/sc_joystick.h **** {
 232:source\rte/sc_joystick.h ****    return signal->age;
 233:source\rte/sc_joystick.h **** }
 234:source\rte/sc_joystick.h **** 
 235:source\rte/sc_joystick.h **** /**
 236:source\rte/sc_joystick.h ****  * Should be called by application or driver if no new value can be provided.
 237:source\rte/sc_joystick.h ****  * @param  SC_JOYSTICK_t * const signal: Pointer to the signal object
 238:source\rte/sc_joystick.h ****  * @param uint32_t increment: incrementvalue, typically in [ms]
 239:source\rte/sc_joystick.h ****  * @return void
 240:source\rte/sc_joystick.h ****  */
 241:source\rte/sc_joystick.h **** inline void RTE_SC_JOYSTICK_incAge(  SC_JOYSTICK_t * const signal , uint32_t increment)
 242:source\rte/sc_joystick.h **** {
 243:source\rte/sc_joystick.h **** 	   //Hack....
 244:source\rte/sc_joystick.h **** 	   if ( 0xFFFF0000 > (signal->age + increment) )
  37              		.loc 2 244 0
  38 0000 104B     		ldr	r3, .L6
  39 0002 5B68     		ldr	r3, [r3, #4]
  40 0004 0344     		add	r3, r3, r0
  41 0006 13F1011F 		cmn	r3, #65537
  42 000a 01D8     		bhi	.L2
 245:source\rte/sc_joystick.h **** 	   {
 246:source\rte/sc_joystick.h **** 	      signal->age += increment;
  43              		.loc 2 246 0
  44 000c 0D4A     		ldr	r2, .L6
  45 000e 5360     		str	r3, [r2, #4]
  46              	.L2:
  47              	.LVL1:
  48              	.LBE11:
  49              	.LBE10:
  50              	.LBB12:
  51              	.LBB13:
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 10


  52              		.file 3 "source\\rte\\sc_speed.h"
   1:source\rte/sc_speed.h **** 
   2:source\rte/sc_speed.h **** 
   3:source\rte/sc_speed.h **** /**
   4:source\rte/sc_speed.h **** *  file    SC_SPEED_signal.h
   5:source\rte/sc_speed.h **** *
   6:source\rte/sc_speed.h **** *  brief   signal base class for signal sc_speed
   7:source\rte/sc_speed.h **** *
   8:source\rte/sc_speed.h **** *  author  Autogenerated, Peter Fromm       <peter.fromm@h-da.de>
   9:source\rte/sc_speed.h **** *
  10:source\rte/sc_speed.h **** *
  11:source\rte/sc_speed.h **** */
  12:source\rte/sc_speed.h **** 
  13:source\rte/sc_speed.h **** /*
  14:source\rte/sc_speed.h **** * description: Signalclass representing the speed.
  15:source\rte/sc_speed.h **** * name: sc_speed
  16:source\rte/sc_speed.h **** * shortname: speed
  17:source\rte/sc_speed.h **** */
  18:source\rte/sc_speed.h **** 
  19:source\rte/sc_speed.h **** #ifndef SC_SPEED_SIGNAL_H_INCLUDED
  20:source\rte/sc_speed.h **** #define SC_SPEED_SIGNAL_H_INCLUDED
  21:source\rte/sc_speed.h **** 
  22:source\rte/sc_speed.h **** /*================================================[ public includes  ]=============================
  23:source\rte/sc_speed.h **** #include "global.h"
  24:source\rte/sc_speed.h **** #include "project.h"
  25:source\rte/sc_speed.h **** #include "rte.h"
  26:source\rte/sc_speed.h **** #include "rte_types.h"
  27:source\rte/sc_speed.h **** 
  28:source\rte/sc_speed.h **** #include "sc_speed_type.h"
  29:source\rte/sc_speed.h **** 
  30:source\rte/sc_speed.h **** 
  31:source\rte/sc_speed.h **** /**************************************************************************************************
  32:source\rte/sc_speed.h **** /* The driver API block																						*/
  33:source\rte/sc_speed.h **** /**************************************************************************************************
  34:source\rte/sc_speed.h ****                                                                                                    
  35:source\rte/sc_speed.h **** /**
  36:source\rte/sc_speed.h ****  *  Definition of function types for driver interfaces.
  37:source\rte/sc_speed.h ****  *  I-Port
  38:source\rte/sc_speed.h ****  */
  39:source\rte/sc_speed.h **** typedef RC_t (*SC_SPEED_driverIn_t)(SC_SPEED_data_t * const);
  40:source\rte/sc_speed.h **** 
  41:source\rte/sc_speed.h **** /**
  42:source\rte/sc_speed.h ****  *  Definition of function types for driver interfaces.
  43:source\rte/sc_speed.h ****  *  O-Port
  44:source\rte/sc_speed.h ****  */
  45:source\rte/sc_speed.h **** typedef RC_t (*SC_SPEED_driverOut_t)( const SC_SPEED_data_t * const);
  46:source\rte/sc_speed.h **** 
  47:source\rte/sc_speed.h **** 
  48:source\rte/sc_speed.h **** /**************************************************************************************************
  49:source\rte/sc_speed.h **** /* The signal configuration API block																				*/
  50:source\rte/sc_speed.h **** /**************************************************************************************************
  51:source\rte/sc_speed.h **** 
  52:source\rte/sc_speed.h **** /**
  53:source\rte/sc_speed.h ****  * Instances of the struct SC_SPEED_cfg_t represent the signal object configuration.
  54:source\rte/sc_speed.h ****  */
  55:source\rte/sc_speed.h **** struct SC_SPEED_cfg_s
  56:source\rte/sc_speed.h **** {
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 11


  57:source\rte/sc_speed.h ****     /**
  58:source\rte/sc_speed.h ****      * Function pointer to the input driver
  59:source\rte/sc_speed.h ****      */
  60:source\rte/sc_speed.h ****     SC_SPEED_driverIn_t const inDriver;
  61:source\rte/sc_speed.h **** 
  62:source\rte/sc_speed.h ****     /**
  63:source\rte/sc_speed.h ****      * Function pointer to the output driver table
  64:source\rte/sc_speed.h ****      */
  65:source\rte/sc_speed.h ****    SC_SPEED_driverOut_t const outDriver;
  66:source\rte/sc_speed.h ****    
  67:source\rte/sc_speed.h ****     /**
  68:source\rte/sc_speed.h ****      * Event onUpdate
  69:source\rte/sc_speed.h ****      */
  70:source\rte/sc_speed.h ****     EventMaskType const evOnUpdate;
  71:source\rte/sc_speed.h ****     
  72:source\rte/sc_speed.h ****     
  73:source\rte/sc_speed.h ****     /**
  74:source\rte/sc_speed.h ****      * Event onError
  75:source\rte/sc_speed.h ****      */
  76:source\rte/sc_speed.h ****     EventMaskType const evOnError;
  77:source\rte/sc_speed.h ****     
  78:source\rte/sc_speed.h ****     /**
  79:source\rte/sc_speed.h ****      * Task Count onUpdate
  80:source\rte/sc_speed.h ****      */
  81:source\rte/sc_speed.h ****     size_t const onUpdateTaskCount;
  82:source\rte/sc_speed.h **** 
  83:source\rte/sc_speed.h ****     /**
  84:source\rte/sc_speed.h ****      * Task List onUpdate
  85:source\rte/sc_speed.h ****      */
  86:source\rte/sc_speed.h ****     TaskTypeArray* const onUpdateTasks;
  87:source\rte/sc_speed.h ****     
  88:source\rte/sc_speed.h ****     /**
  89:source\rte/sc_speed.h ****      * Task Count onError
  90:source\rte/sc_speed.h ****      */
  91:source\rte/sc_speed.h ****     size_t const onErrorTaskCount;
  92:source\rte/sc_speed.h **** 
  93:source\rte/sc_speed.h ****     /**
  94:source\rte/sc_speed.h ****      * Task List onError
  95:source\rte/sc_speed.h ****      */
  96:source\rte/sc_speed.h ****     TaskTypeArray* const onErrorTasks;
  97:source\rte/sc_speed.h **** 	
  98:source\rte/sc_speed.h **** 	
  99:source\rte/sc_speed.h **** 	/**
 100:source\rte/sc_speed.h **** 	 * Ressourse is active? We need an additional boolean as a ressource value 0 is valid.
 101:source\rte/sc_speed.h **** 	 */
 102:source\rte/sc_speed.h **** 	 boolean_t const resourceActive;
 103:source\rte/sc_speed.h **** 	 
 104:source\rte/sc_speed.h **** 	/**
 105:source\rte/sc_speed.h **** 	 * Ressourse 
 106:source\rte/sc_speed.h **** 	 */
 107:source\rte/sc_speed.h **** 	 ResourceType const resource;
 108:source\rte/sc_speed.h **** 
 109:source\rte/sc_speed.h **** };                                                                                                 
 110:source\rte/sc_speed.h **** typedef const struct SC_SPEED_cfg_s SC_SPEED_cfg_t;
 111:source\rte/sc_speed.h ****                               
 112:source\rte/sc_speed.h **** /**************************************************************************************************
 113:source\rte/sc_speed.h **** /* The data interface block																							*/
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 12


 114:source\rte/sc_speed.h **** /**************************************************************************************************
 115:source\rte/sc_speed.h **** 
 116:source\rte/sc_speed.h ****                                                                                                    
 117:source\rte/sc_speed.h **** 							  
 118:source\rte/sc_speed.h **** /**
 119:source\rte/sc_speed.h ****  * Instances of the struct SC_SPEED_t represent the signal objects.
 120:source\rte/sc_speed.h ****  * A signal object contains the current application value 'value' as well as relevant meta data.
 121:source\rte/sc_speed.h ****  */
 122:source\rte/sc_speed.h **** struct SC_SPEED_s
 123:source\rte/sc_speed.h **** {                                                                                                  
 124:source\rte/sc_speed.h **** 
 125:source\rte/sc_speed.h **** 	/**
 126:source\rte/sc_speed.h **** 	 * Data buffer for the application value
 127:source\rte/sc_speed.h **** 	 */
 128:source\rte/sc_speed.h ****     SC_SPEED_data_t value;
 129:source\rte/sc_speed.h **** 
 130:source\rte/sc_speed.h ****     /**
 131:source\rte/sc_speed.h ****      * Current signal status
 132:source\rte/sc_speed.h ****      */
 133:source\rte/sc_speed.h ****     RTE_signalStatus_t status;
 134:source\rte/sc_speed.h **** 
 135:source\rte/sc_speed.h ****     /**
 136:source\rte/sc_speed.h ****      * Current age of the signal (in calling cycles)
 137:source\rte/sc_speed.h ****      */
 138:source\rte/sc_speed.h ****     uint32_t age;
 139:source\rte/sc_speed.h **** 
 140:source\rte/sc_speed.h ****     /**
 141:source\rte/sc_speed.h ****      * Pointer to the signal configuration
 142:source\rte/sc_speed.h ****      */
 143:source\rte/sc_speed.h **** 	const SC_SPEED_cfg_t * const    pSigCfg;
 144:source\rte/sc_speed.h **** 
 145:source\rte/sc_speed.h **** };                                                                                                 
 146:source\rte/sc_speed.h **** typedef struct SC_SPEED_s SC_SPEED_t;
 147:source\rte/sc_speed.h **** 
 148:source\rte/sc_speed.h **** /**************************************************************************************************
 149:source\rte/sc_speed.h **** /* Signal initialisation   																							*/
 150:source\rte/sc_speed.h **** /**************************************************************************************************
 151:source\rte/sc_speed.h **** 
 152:source\rte/sc_speed.h **** /**
 153:source\rte/sc_speed.h ****  * Initializes a signal instance with a passed init value.
 154:source\rte/sc_speed.h ****  * Depending on the configured conversion or scaling function the raw_value will be calculated.
 155:source\rte/sc_speed.h ****  * Signal status will change from RTE_SIGNALSTATUS_STARTUP to RTE_SIGNALSTATUS_INITIALIZED.
 156:source\rte/sc_speed.h ****  *
 157:source\rte/sc_speed.h ****  * @param  SC_SPEED_t * const signal: Pointer to the signal object which will be initialised
 158:source\rte/sc_speed.h ****  * @param const sc_speed_data_t * const value: Pointer to initial value of the application data
 159:source\rte/sc_speed.h ****  * @return RC_t: standard return code, currently only RC_SUCCESS
 160:source\rte/sc_speed.h ****  *
 161:source\rte/sc_speed.h ****  **/
 162:source\rte/sc_speed.h **** inline RC_t RTE_SC_SPEED_init( SC_SPEED_t * const signal, const SC_SPEED_data_t * const value )
 163:source\rte/sc_speed.h **** {                                                                                                  
 164:source\rte/sc_speed.h **** 
 165:source\rte/sc_speed.h ****    RC_t ret = RC_SUCCESS;
 166:source\rte/sc_speed.h **** 
 167:source\rte/sc_speed.h ****    //Set value and raw value
 168:source\rte/sc_speed.h ****    signal->value  = *value;
 169:source\rte/sc_speed.h ****    signal->age    = 0;
 170:source\rte/sc_speed.h ****    signal->status = RTE_SIGNALSTATUS_INITIALIZED;
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 13


 171:source\rte/sc_speed.h **** 
 172:source\rte/sc_speed.h ****    return ret;
 173:source\rte/sc_speed.h **** }
 174:source\rte/sc_speed.h **** 
 175:source\rte/sc_speed.h **** /**************************************************************************************************
 176:source\rte/sc_speed.h **** /* Status and timeout control																						*/
 177:source\rte/sc_speed.h **** /**************************************************************************************************
 178:source\rte/sc_speed.h **** 
 179:source\rte/sc_speed.h **** /**
 180:source\rte/sc_speed.h ****  *  Returns the current signal status of the passed signal instance.
 181:source\rte/sc_speed.h ****  *
 182:source\rte/sc_speed.h ****  * @param  SC_SPEED_t * const signal: Pointer to the signal object
 183:source\rte/sc_speed.h ****  * @return  sig_status_t: The current signal status
 184:source\rte/sc_speed.h ****  *
 185:source\rte/sc_speed.h ****  **/
 186:source\rte/sc_speed.h **** inline RTE_signalStatus_t RTE_SC_SPEED_getStatus( const SC_SPEED_t * const signal )
 187:source\rte/sc_speed.h **** {
 188:source\rte/sc_speed.h ****    return signal->status;
 189:source\rte/sc_speed.h **** }
 190:source\rte/sc_speed.h **** 
 191:source\rte/sc_speed.h **** 
 192:source\rte/sc_speed.h **** /**
 193:source\rte/sc_speed.h ****  *  Sets a new signal status of the passed signal instance by passing the new status.
 194:source\rte/sc_speed.h ****  *
 195:source\rte/sc_speed.h ****  * @param  SC_SPEED_t * const signal: Pointer to the signal object
 196:source\rte/sc_speed.h ****  * @param  const sig_status_t status: New signal status
 197:source\rte/sc_speed.h ****  * @return RC_t: standard return code, currently only RC_SUCCESS
 198:source\rte/sc_speed.h ****  *
 199:source\rte/sc_speed.h ****  */
 200:source\rte/sc_speed.h **** inline RC_t RTE_SC_SPEED_setStatus( SC_SPEED_t * const signal, const RTE_signalStatus_t status )
 201:source\rte/sc_speed.h **** {
 202:source\rte/sc_speed.h ****    signal->status = status;
 203:source\rte/sc_speed.h ****    size_t taskNum=0;
 204:source\rte/sc_speed.h ****    
 205:source\rte/sc_speed.h ****    //Fire error events in case of invalid state
 206:source\rte/sc_speed.h ****    if (signal->status == RTE_SIGNALSTATUS_INVALID)
 207:source\rte/sc_speed.h ****    {
 208:source\rte/sc_speed.h **** 	    //Pointer to the Taskarray, containing the tasks receiving the onUpdate events
 209:source\rte/sc_speed.h **** 		TaskTypeArray* pTaskArray = signal->pSigCfg->onErrorTasks;
 210:source\rte/sc_speed.h **** 
 211:source\rte/sc_speed.h **** 		if (NULL!=signal->pSigCfg->evOnError && NULL != pTaskArray){
 212:source\rte/sc_speed.h **** 			for( taskNum=0 ; taskNum < signal->pSigCfg->onErrorTaskCount ;taskNum++){
 213:source\rte/sc_speed.h **** 				TaskType task = (*pTaskArray)[taskNum];
 214:source\rte/sc_speed.h **** 				SetEvent( task, signal->pSigCfg->evOnError);
 215:source\rte/sc_speed.h **** 			}
 216:source\rte/sc_speed.h **** 		}
 217:source\rte/sc_speed.h ****    }
 218:source\rte/sc_speed.h ****    
 219:source\rte/sc_speed.h ****    return RC_SUCCESS;
 220:source\rte/sc_speed.h **** }
 221:source\rte/sc_speed.h **** 
 222:source\rte/sc_speed.h **** 
 223:source\rte/sc_speed.h **** /**
 224:source\rte/sc_speed.h ****  * Returns the count of refreshing trials (refresh, set or set_raw) that failed.
 225:source\rte/sc_speed.h ****  * Prerquisite: The signal is refreshed cyclically
 226:source\rte/sc_speed.h ****  *
 227:source\rte/sc_speed.h ****  * @param  SC_SPEED_t * const signal: Pointer to the signal object
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 14


 228:source\rte/sc_speed.h ****  * @return uint32_t: Number of cycles since the signal has been updated for the last time
 229:source\rte/sc_speed.h ****  */
 230:source\rte/sc_speed.h **** inline uint32_t RTE_SC_SPEED_getAge( const SC_SPEED_t * const signal )
 231:source\rte/sc_speed.h **** {
 232:source\rte/sc_speed.h ****    return signal->age;
 233:source\rte/sc_speed.h **** }
 234:source\rte/sc_speed.h **** 
 235:source\rte/sc_speed.h **** /**
 236:source\rte/sc_speed.h ****  * Should be called by application or driver if no new value can be provided.
 237:source\rte/sc_speed.h ****  * @param  SC_SPEED_t * const signal: Pointer to the signal object
 238:source\rte/sc_speed.h ****  * @param uint32_t increment: incrementvalue, typically in [ms]
 239:source\rte/sc_speed.h ****  * @return void
 240:source\rte/sc_speed.h ****  */
 241:source\rte/sc_speed.h **** inline void RTE_SC_SPEED_incAge(  SC_SPEED_t * const signal , uint32_t increment)
 242:source\rte/sc_speed.h **** {
 243:source\rte/sc_speed.h **** 	   //Hack....
 244:source\rte/sc_speed.h **** 	   if ( 0xFFFF0000 > (signal->age + increment) )
  53              		.loc 3 244 0
  54 0010 0C4B     		ldr	r3, .L6
  55 0012 1B69     		ldr	r3, [r3, #16]
  56 0014 0344     		add	r3, r3, r0
  57 0016 13F1011F 		cmn	r3, #65537
  58 001a 01D8     		bhi	.L3
 245:source\rte/sc_speed.h **** 	   {
 246:source\rte/sc_speed.h **** 	      signal->age += increment;
  59              		.loc 3 246 0
  60 001c 094A     		ldr	r2, .L6
  61 001e 1361     		str	r3, [r2, #16]
  62              	.L3:
  63              	.LVL2:
  64              	.LBE13:
  65              	.LBE12:
  66              	.LBB14:
  67              	.LBB15:
  68              		.file 4 "source\\rte\\sc_engine.h"
   1:source\rte/sc_engine.h **** 
   2:source\rte/sc_engine.h **** 
   3:source\rte/sc_engine.h **** /**
   4:source\rte/sc_engine.h **** *  file    SC_ENGINE_signal.h
   5:source\rte/sc_engine.h **** *
   6:source\rte/sc_engine.h **** *  brief   signal base class for signal sc_engine
   7:source\rte/sc_engine.h **** *
   8:source\rte/sc_engine.h **** *  author  Autogenerated, Peter Fromm       <peter.fromm@h-da.de>
   9:source\rte/sc_engine.h **** *
  10:source\rte/sc_engine.h **** *
  11:source\rte/sc_engine.h **** */
  12:source\rte/sc_engine.h **** 
  13:source\rte/sc_engine.h **** /*
  14:source\rte/sc_engine.h **** * description: Signalclass representing the engine.
  15:source\rte/sc_engine.h **** * name: sc_engine
  16:source\rte/sc_engine.h **** * shortname: engine
  17:source\rte/sc_engine.h **** */
  18:source\rte/sc_engine.h **** 
  19:source\rte/sc_engine.h **** #ifndef SC_ENGINE_SIGNAL_H_INCLUDED
  20:source\rte/sc_engine.h **** #define SC_ENGINE_SIGNAL_H_INCLUDED
  21:source\rte/sc_engine.h **** 
  22:source\rte/sc_engine.h **** /*================================================[ public includes  ]=============================
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 15


  23:source\rte/sc_engine.h **** #include "global.h"
  24:source\rte/sc_engine.h **** #include "project.h"
  25:source\rte/sc_engine.h **** #include "rte.h"
  26:source\rte/sc_engine.h **** #include "rte_types.h"
  27:source\rte/sc_engine.h **** 
  28:source\rte/sc_engine.h **** #include "sc_engine_type.h"
  29:source\rte/sc_engine.h **** 
  30:source\rte/sc_engine.h **** 
  31:source\rte/sc_engine.h **** /**************************************************************************************************
  32:source\rte/sc_engine.h **** /* The driver API block																						*/
  33:source\rte/sc_engine.h **** /**************************************************************************************************
  34:source\rte/sc_engine.h ****                                                                                                    
  35:source\rte/sc_engine.h **** /**
  36:source\rte/sc_engine.h ****  *  Definition of function types for driver interfaces.
  37:source\rte/sc_engine.h ****  *  I-Port
  38:source\rte/sc_engine.h ****  */
  39:source\rte/sc_engine.h **** typedef RC_t (*SC_ENGINE_driverIn_t)(SC_ENGINE_data_t * const);
  40:source\rte/sc_engine.h **** 
  41:source\rte/sc_engine.h **** /**
  42:source\rte/sc_engine.h ****  *  Definition of function types for driver interfaces.
  43:source\rte/sc_engine.h ****  *  O-Port
  44:source\rte/sc_engine.h ****  */
  45:source\rte/sc_engine.h **** typedef RC_t (*SC_ENGINE_driverOut_t)( const SC_ENGINE_data_t * const);
  46:source\rte/sc_engine.h **** 
  47:source\rte/sc_engine.h **** 
  48:source\rte/sc_engine.h **** /**************************************************************************************************
  49:source\rte/sc_engine.h **** /* The signal configuration API block																				*/
  50:source\rte/sc_engine.h **** /**************************************************************************************************
  51:source\rte/sc_engine.h **** 
  52:source\rte/sc_engine.h **** /**
  53:source\rte/sc_engine.h ****  * Instances of the struct SC_ENGINE_cfg_t represent the signal object configuration.
  54:source\rte/sc_engine.h ****  */
  55:source\rte/sc_engine.h **** struct SC_ENGINE_cfg_s
  56:source\rte/sc_engine.h **** {
  57:source\rte/sc_engine.h ****     /**
  58:source\rte/sc_engine.h ****      * Function pointer to the input driver
  59:source\rte/sc_engine.h ****      */
  60:source\rte/sc_engine.h ****     SC_ENGINE_driverIn_t const inDriver;
  61:source\rte/sc_engine.h **** 
  62:source\rte/sc_engine.h ****     /**
  63:source\rte/sc_engine.h ****      * Function pointer to the output driver table
  64:source\rte/sc_engine.h ****      */
  65:source\rte/sc_engine.h ****    SC_ENGINE_driverOut_t const outDriver;
  66:source\rte/sc_engine.h ****    
  67:source\rte/sc_engine.h ****     /**
  68:source\rte/sc_engine.h ****      * Event onUpdate
  69:source\rte/sc_engine.h ****      */
  70:source\rte/sc_engine.h ****     EventMaskType const evOnUpdate;
  71:source\rte/sc_engine.h ****     
  72:source\rte/sc_engine.h ****     
  73:source\rte/sc_engine.h ****     /**
  74:source\rte/sc_engine.h ****      * Event onError
  75:source\rte/sc_engine.h ****      */
  76:source\rte/sc_engine.h ****     EventMaskType const evOnError;
  77:source\rte/sc_engine.h ****     
  78:source\rte/sc_engine.h ****     /**
  79:source\rte/sc_engine.h ****      * Task Count onUpdate
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 16


  80:source\rte/sc_engine.h ****      */
  81:source\rte/sc_engine.h ****     size_t const onUpdateTaskCount;
  82:source\rte/sc_engine.h **** 
  83:source\rte/sc_engine.h ****     /**
  84:source\rte/sc_engine.h ****      * Task List onUpdate
  85:source\rte/sc_engine.h ****      */
  86:source\rte/sc_engine.h ****     TaskTypeArray* const onUpdateTasks;
  87:source\rte/sc_engine.h ****     
  88:source\rte/sc_engine.h ****     /**
  89:source\rte/sc_engine.h ****      * Task Count onError
  90:source\rte/sc_engine.h ****      */
  91:source\rte/sc_engine.h ****     size_t const onErrorTaskCount;
  92:source\rte/sc_engine.h **** 
  93:source\rte/sc_engine.h ****     /**
  94:source\rte/sc_engine.h ****      * Task List onError
  95:source\rte/sc_engine.h ****      */
  96:source\rte/sc_engine.h ****     TaskTypeArray* const onErrorTasks;
  97:source\rte/sc_engine.h **** 	
  98:source\rte/sc_engine.h **** 	
  99:source\rte/sc_engine.h **** 	/**
 100:source\rte/sc_engine.h **** 	 * Ressourse is active? We need an additional boolean as a ressource value 0 is valid.
 101:source\rte/sc_engine.h **** 	 */
 102:source\rte/sc_engine.h **** 	 boolean_t const resourceActive;
 103:source\rte/sc_engine.h **** 	 
 104:source\rte/sc_engine.h **** 	/**
 105:source\rte/sc_engine.h **** 	 * Ressourse 
 106:source\rte/sc_engine.h **** 	 */
 107:source\rte/sc_engine.h **** 	 ResourceType const resource;
 108:source\rte/sc_engine.h **** 
 109:source\rte/sc_engine.h **** };                                                                                                 
 110:source\rte/sc_engine.h **** typedef const struct SC_ENGINE_cfg_s SC_ENGINE_cfg_t;
 111:source\rte/sc_engine.h ****                               
 112:source\rte/sc_engine.h **** /**************************************************************************************************
 113:source\rte/sc_engine.h **** /* The data interface block																							*/
 114:source\rte/sc_engine.h **** /**************************************************************************************************
 115:source\rte/sc_engine.h **** 
 116:source\rte/sc_engine.h ****                                                                                                    
 117:source\rte/sc_engine.h **** 							  
 118:source\rte/sc_engine.h **** /**
 119:source\rte/sc_engine.h ****  * Instances of the struct SC_ENGINE_t represent the signal objects.
 120:source\rte/sc_engine.h ****  * A signal object contains the current application value 'value' as well as relevant meta data.
 121:source\rte/sc_engine.h ****  */
 122:source\rte/sc_engine.h **** struct SC_ENGINE_s
 123:source\rte/sc_engine.h **** {                                                                                                  
 124:source\rte/sc_engine.h **** 
 125:source\rte/sc_engine.h **** 	/**
 126:source\rte/sc_engine.h **** 	 * Data buffer for the application value
 127:source\rte/sc_engine.h **** 	 */
 128:source\rte/sc_engine.h ****     SC_ENGINE_data_t value;
 129:source\rte/sc_engine.h **** 
 130:source\rte/sc_engine.h ****     /**
 131:source\rte/sc_engine.h ****      * Current signal status
 132:source\rte/sc_engine.h ****      */
 133:source\rte/sc_engine.h ****     RTE_signalStatus_t status;
 134:source\rte/sc_engine.h **** 
 135:source\rte/sc_engine.h ****     /**
 136:source\rte/sc_engine.h ****      * Current age of the signal (in calling cycles)
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 17


 137:source\rte/sc_engine.h ****      */
 138:source\rte/sc_engine.h ****     uint32_t age;
 139:source\rte/sc_engine.h **** 
 140:source\rte/sc_engine.h ****     /**
 141:source\rte/sc_engine.h ****      * Pointer to the signal configuration
 142:source\rte/sc_engine.h ****      */
 143:source\rte/sc_engine.h **** 	const SC_ENGINE_cfg_t * const    pSigCfg;
 144:source\rte/sc_engine.h **** 
 145:source\rte/sc_engine.h **** };                                                                                                 
 146:source\rte/sc_engine.h **** typedef struct SC_ENGINE_s SC_ENGINE_t;
 147:source\rte/sc_engine.h **** 
 148:source\rte/sc_engine.h **** /**************************************************************************************************
 149:source\rte/sc_engine.h **** /* Signal initialisation   																							*/
 150:source\rte/sc_engine.h **** /**************************************************************************************************
 151:source\rte/sc_engine.h **** 
 152:source\rte/sc_engine.h **** /**
 153:source\rte/sc_engine.h ****  * Initializes a signal instance with a passed init value.
 154:source\rte/sc_engine.h ****  * Depending on the configured conversion or scaling function the raw_value will be calculated.
 155:source\rte/sc_engine.h ****  * Signal status will change from RTE_SIGNALSTATUS_STARTUP to RTE_SIGNALSTATUS_INITIALIZED.
 156:source\rte/sc_engine.h ****  *
 157:source\rte/sc_engine.h ****  * @param  SC_ENGINE_t * const signal: Pointer to the signal object which will be initialised
 158:source\rte/sc_engine.h ****  * @param const sc_engine_data_t * const value: Pointer to initial value of the application data
 159:source\rte/sc_engine.h ****  * @return RC_t: standard return code, currently only RC_SUCCESS
 160:source\rte/sc_engine.h ****  *
 161:source\rte/sc_engine.h ****  **/
 162:source\rte/sc_engine.h **** inline RC_t RTE_SC_ENGINE_init( SC_ENGINE_t * const signal, const SC_ENGINE_data_t * const value )
 163:source\rte/sc_engine.h **** {                                                                                                  
 164:source\rte/sc_engine.h **** 
 165:source\rte/sc_engine.h ****    RC_t ret = RC_SUCCESS;
 166:source\rte/sc_engine.h **** 
 167:source\rte/sc_engine.h ****    //Set value and raw value
 168:source\rte/sc_engine.h ****    signal->value  = *value;
 169:source\rte/sc_engine.h ****    signal->age    = 0;
 170:source\rte/sc_engine.h ****    signal->status = RTE_SIGNALSTATUS_INITIALIZED;
 171:source\rte/sc_engine.h **** 
 172:source\rte/sc_engine.h ****    return ret;
 173:source\rte/sc_engine.h **** }
 174:source\rte/sc_engine.h **** 
 175:source\rte/sc_engine.h **** /**************************************************************************************************
 176:source\rte/sc_engine.h **** /* Status and timeout control																						*/
 177:source\rte/sc_engine.h **** /**************************************************************************************************
 178:source\rte/sc_engine.h **** 
 179:source\rte/sc_engine.h **** /**
 180:source\rte/sc_engine.h ****  *  Returns the current signal status of the passed signal instance.
 181:source\rte/sc_engine.h ****  *
 182:source\rte/sc_engine.h ****  * @param  SC_ENGINE_t * const signal: Pointer to the signal object
 183:source\rte/sc_engine.h ****  * @return  sig_status_t: The current signal status
 184:source\rte/sc_engine.h ****  *
 185:source\rte/sc_engine.h ****  **/
 186:source\rte/sc_engine.h **** inline RTE_signalStatus_t RTE_SC_ENGINE_getStatus( const SC_ENGINE_t * const signal )
 187:source\rte/sc_engine.h **** {
 188:source\rte/sc_engine.h ****    return signal->status;
 189:source\rte/sc_engine.h **** }
 190:source\rte/sc_engine.h **** 
 191:source\rte/sc_engine.h **** 
 192:source\rte/sc_engine.h **** /**
 193:source\rte/sc_engine.h ****  *  Sets a new signal status of the passed signal instance by passing the new status.
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 18


 194:source\rte/sc_engine.h ****  *
 195:source\rte/sc_engine.h ****  * @param  SC_ENGINE_t * const signal: Pointer to the signal object
 196:source\rte/sc_engine.h ****  * @param  const sig_status_t status: New signal status
 197:source\rte/sc_engine.h ****  * @return RC_t: standard return code, currently only RC_SUCCESS
 198:source\rte/sc_engine.h ****  *
 199:source\rte/sc_engine.h ****  */
 200:source\rte/sc_engine.h **** inline RC_t RTE_SC_ENGINE_setStatus( SC_ENGINE_t * const signal, const RTE_signalStatus_t status )
 201:source\rte/sc_engine.h **** {
 202:source\rte/sc_engine.h ****    signal->status = status;
 203:source\rte/sc_engine.h ****    size_t taskNum=0;
 204:source\rte/sc_engine.h ****    
 205:source\rte/sc_engine.h ****    //Fire error events in case of invalid state
 206:source\rte/sc_engine.h ****    if (signal->status == RTE_SIGNALSTATUS_INVALID)
 207:source\rte/sc_engine.h ****    {
 208:source\rte/sc_engine.h **** 	    //Pointer to the Taskarray, containing the tasks receiving the onUpdate events
 209:source\rte/sc_engine.h **** 		TaskTypeArray* pTaskArray = signal->pSigCfg->onErrorTasks;
 210:source\rte/sc_engine.h **** 
 211:source\rte/sc_engine.h **** 		if (NULL!=signal->pSigCfg->evOnError && NULL != pTaskArray){
 212:source\rte/sc_engine.h **** 			for( taskNum=0 ; taskNum < signal->pSigCfg->onErrorTaskCount ;taskNum++){
 213:source\rte/sc_engine.h **** 				TaskType task = (*pTaskArray)[taskNum];
 214:source\rte/sc_engine.h **** 				SetEvent( task, signal->pSigCfg->evOnError);
 215:source\rte/sc_engine.h **** 			}
 216:source\rte/sc_engine.h **** 		}
 217:source\rte/sc_engine.h ****    }
 218:source\rte/sc_engine.h ****    
 219:source\rte/sc_engine.h ****    return RC_SUCCESS;
 220:source\rte/sc_engine.h **** }
 221:source\rte/sc_engine.h **** 
 222:source\rte/sc_engine.h **** 
 223:source\rte/sc_engine.h **** /**
 224:source\rte/sc_engine.h ****  * Returns the count of refreshing trials (refresh, set or set_raw) that failed.
 225:source\rte/sc_engine.h ****  * Prerquisite: The signal is refreshed cyclically
 226:source\rte/sc_engine.h ****  *
 227:source\rte/sc_engine.h ****  * @param  SC_ENGINE_t * const signal: Pointer to the signal object
 228:source\rte/sc_engine.h ****  * @return uint32_t: Number of cycles since the signal has been updated for the last time
 229:source\rte/sc_engine.h ****  */
 230:source\rte/sc_engine.h **** inline uint32_t RTE_SC_ENGINE_getAge( const SC_ENGINE_t * const signal )
 231:source\rte/sc_engine.h **** {
 232:source\rte/sc_engine.h ****    return signal->age;
 233:source\rte/sc_engine.h **** }
 234:source\rte/sc_engine.h **** 
 235:source\rte/sc_engine.h **** /**
 236:source\rte/sc_engine.h ****  * Should be called by application or driver if no new value can be provided.
 237:source\rte/sc_engine.h ****  * @param  SC_ENGINE_t * const signal: Pointer to the signal object
 238:source\rte/sc_engine.h ****  * @param uint32_t increment: incrementvalue, typically in [ms]
 239:source\rte/sc_engine.h ****  * @return void
 240:source\rte/sc_engine.h ****  */
 241:source\rte/sc_engine.h **** inline void RTE_SC_ENGINE_incAge(  SC_ENGINE_t * const signal , uint32_t increment)
 242:source\rte/sc_engine.h **** {
 243:source\rte/sc_engine.h **** 	   //Hack....
 244:source\rte/sc_engine.h **** 	   if ( 0xFFFF0000 > (signal->age + increment) )
  69              		.loc 4 244 0
  70 0020 084B     		ldr	r3, .L6
  71 0022 DB69     		ldr	r3, [r3, #28]
  72 0024 0344     		add	r3, r3, r0
  73 0026 13F1011F 		cmn	r3, #65537
  74 002a 01D8     		bhi	.L4
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 19


 245:source\rte/sc_engine.h **** 	   {
 246:source\rte/sc_engine.h **** 	      signal->age += increment;
  75              		.loc 4 246 0
  76 002c 054A     		ldr	r2, .L6
  77 002e D361     		str	r3, [r2, #28]
  78              	.L4:
  79              	.LVL3:
  80              	.LBE15:
  81              	.LBE14:
  82              	.LBB16:
  83              	.LBB17:
  84              		.file 5 "source\\rte\\sc_brakelight.h"
   1:source\rte/sc_brakelight.h **** 
   2:source\rte/sc_brakelight.h **** 
   3:source\rte/sc_brakelight.h **** /**
   4:source\rte/sc_brakelight.h **** *  file    SC_BRAKELIGHT_signal.h
   5:source\rte/sc_brakelight.h **** *
   6:source\rte/sc_brakelight.h **** *  brief   signal base class for signal sc_brakelight
   7:source\rte/sc_brakelight.h **** *
   8:source\rte/sc_brakelight.h **** *  author  Autogenerated, Peter Fromm       <peter.fromm@h-da.de>
   9:source\rte/sc_brakelight.h **** *
  10:source\rte/sc_brakelight.h **** *
  11:source\rte/sc_brakelight.h **** */
  12:source\rte/sc_brakelight.h **** 
  13:source\rte/sc_brakelight.h **** /*
  14:source\rte/sc_brakelight.h **** * description: Signalclass representing the brake light.
  15:source\rte/sc_brakelight.h **** * name: sc_brakeLight
  16:source\rte/sc_brakelight.h **** * shortname: brakeLight
  17:source\rte/sc_brakelight.h **** */
  18:source\rte/sc_brakelight.h **** 
  19:source\rte/sc_brakelight.h **** #ifndef SC_BRAKELIGHT_SIGNAL_H_INCLUDED
  20:source\rte/sc_brakelight.h **** #define SC_BRAKELIGHT_SIGNAL_H_INCLUDED
  21:source\rte/sc_brakelight.h **** 
  22:source\rte/sc_brakelight.h **** /*================================================[ public includes  ]=============================
  23:source\rte/sc_brakelight.h **** #include "global.h"
  24:source\rte/sc_brakelight.h **** #include "project.h"
  25:source\rte/sc_brakelight.h **** #include "rte.h"
  26:source\rte/sc_brakelight.h **** #include "rte_types.h"
  27:source\rte/sc_brakelight.h **** 
  28:source\rte/sc_brakelight.h **** #include "sc_brakelight_type.h"
  29:source\rte/sc_brakelight.h **** 
  30:source\rte/sc_brakelight.h **** 
  31:source\rte/sc_brakelight.h **** /**************************************************************************************************
  32:source\rte/sc_brakelight.h **** /* The driver API block																						*/
  33:source\rte/sc_brakelight.h **** /**************************************************************************************************
  34:source\rte/sc_brakelight.h ****                                                                                                    
  35:source\rte/sc_brakelight.h **** /**
  36:source\rte/sc_brakelight.h ****  *  Definition of function types for driver interfaces.
  37:source\rte/sc_brakelight.h ****  *  I-Port
  38:source\rte/sc_brakelight.h ****  */
  39:source\rte/sc_brakelight.h **** typedef RC_t (*SC_BRAKELIGHT_driverIn_t)(SC_BRAKELIGHT_data_t * const);
  40:source\rte/sc_brakelight.h **** 
  41:source\rte/sc_brakelight.h **** /**
  42:source\rte/sc_brakelight.h ****  *  Definition of function types for driver interfaces.
  43:source\rte/sc_brakelight.h ****  *  O-Port
  44:source\rte/sc_brakelight.h ****  */
  45:source\rte/sc_brakelight.h **** typedef RC_t (*SC_BRAKELIGHT_driverOut_t)( const SC_BRAKELIGHT_data_t * const);
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 20


  46:source\rte/sc_brakelight.h **** 
  47:source\rte/sc_brakelight.h **** 
  48:source\rte/sc_brakelight.h **** /**************************************************************************************************
  49:source\rte/sc_brakelight.h **** /* The signal configuration API block																				*/
  50:source\rte/sc_brakelight.h **** /**************************************************************************************************
  51:source\rte/sc_brakelight.h **** 
  52:source\rte/sc_brakelight.h **** /**
  53:source\rte/sc_brakelight.h ****  * Instances of the struct SC_BRAKELIGHT_cfg_t represent the signal object configuration.
  54:source\rte/sc_brakelight.h ****  */
  55:source\rte/sc_brakelight.h **** struct SC_BRAKELIGHT_cfg_s
  56:source\rte/sc_brakelight.h **** {
  57:source\rte/sc_brakelight.h ****     /**
  58:source\rte/sc_brakelight.h ****      * Function pointer to the input driver
  59:source\rte/sc_brakelight.h ****      */
  60:source\rte/sc_brakelight.h ****     SC_BRAKELIGHT_driverIn_t const inDriver;
  61:source\rte/sc_brakelight.h **** 
  62:source\rte/sc_brakelight.h ****     /**
  63:source\rte/sc_brakelight.h ****      * Function pointer to the output driver table
  64:source\rte/sc_brakelight.h ****      */
  65:source\rte/sc_brakelight.h ****    SC_BRAKELIGHT_driverOut_t const outDriver;
  66:source\rte/sc_brakelight.h ****    
  67:source\rte/sc_brakelight.h ****     /**
  68:source\rte/sc_brakelight.h ****      * Event onUpdate
  69:source\rte/sc_brakelight.h ****      */
  70:source\rte/sc_brakelight.h ****     EventMaskType const evOnUpdate;
  71:source\rte/sc_brakelight.h ****     
  72:source\rte/sc_brakelight.h ****     
  73:source\rte/sc_brakelight.h ****     /**
  74:source\rte/sc_brakelight.h ****      * Event onError
  75:source\rte/sc_brakelight.h ****      */
  76:source\rte/sc_brakelight.h ****     EventMaskType const evOnError;
  77:source\rte/sc_brakelight.h ****     
  78:source\rte/sc_brakelight.h ****     /**
  79:source\rte/sc_brakelight.h ****      * Task Count onUpdate
  80:source\rte/sc_brakelight.h ****      */
  81:source\rte/sc_brakelight.h ****     size_t const onUpdateTaskCount;
  82:source\rte/sc_brakelight.h **** 
  83:source\rte/sc_brakelight.h ****     /**
  84:source\rte/sc_brakelight.h ****      * Task List onUpdate
  85:source\rte/sc_brakelight.h ****      */
  86:source\rte/sc_brakelight.h ****     TaskTypeArray* const onUpdateTasks;
  87:source\rte/sc_brakelight.h ****     
  88:source\rte/sc_brakelight.h ****     /**
  89:source\rte/sc_brakelight.h ****      * Task Count onError
  90:source\rte/sc_brakelight.h ****      */
  91:source\rte/sc_brakelight.h ****     size_t const onErrorTaskCount;
  92:source\rte/sc_brakelight.h **** 
  93:source\rte/sc_brakelight.h ****     /**
  94:source\rte/sc_brakelight.h ****      * Task List onError
  95:source\rte/sc_brakelight.h ****      */
  96:source\rte/sc_brakelight.h ****     TaskTypeArray* const onErrorTasks;
  97:source\rte/sc_brakelight.h **** 	
  98:source\rte/sc_brakelight.h **** 	
  99:source\rte/sc_brakelight.h **** 	/**
 100:source\rte/sc_brakelight.h **** 	 * Ressourse is active? We need an additional boolean as a ressource value 0 is valid.
 101:source\rte/sc_brakelight.h **** 	 */
 102:source\rte/sc_brakelight.h **** 	 boolean_t const resourceActive;
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 21


 103:source\rte/sc_brakelight.h **** 	 
 104:source\rte/sc_brakelight.h **** 	/**
 105:source\rte/sc_brakelight.h **** 	 * Ressourse 
 106:source\rte/sc_brakelight.h **** 	 */
 107:source\rte/sc_brakelight.h **** 	 ResourceType const resource;
 108:source\rte/sc_brakelight.h **** 
 109:source\rte/sc_brakelight.h **** };                                                                                                 
 110:source\rte/sc_brakelight.h **** typedef const struct SC_BRAKELIGHT_cfg_s SC_BRAKELIGHT_cfg_t;
 111:source\rte/sc_brakelight.h ****                               
 112:source\rte/sc_brakelight.h **** /**************************************************************************************************
 113:source\rte/sc_brakelight.h **** /* The data interface block																							*/
 114:source\rte/sc_brakelight.h **** /**************************************************************************************************
 115:source\rte/sc_brakelight.h **** 
 116:source\rte/sc_brakelight.h ****                                                                                                    
 117:source\rte/sc_brakelight.h **** 							  
 118:source\rte/sc_brakelight.h **** /**
 119:source\rte/sc_brakelight.h ****  * Instances of the struct SC_BRAKELIGHT_t represent the signal objects.
 120:source\rte/sc_brakelight.h ****  * A signal object contains the current application value 'value' as well as relevant meta data.
 121:source\rte/sc_brakelight.h ****  */
 122:source\rte/sc_brakelight.h **** struct SC_BRAKELIGHT_s
 123:source\rte/sc_brakelight.h **** {                                                                                                  
 124:source\rte/sc_brakelight.h **** 
 125:source\rte/sc_brakelight.h **** 	/**
 126:source\rte/sc_brakelight.h **** 	 * Data buffer for the application value
 127:source\rte/sc_brakelight.h **** 	 */
 128:source\rte/sc_brakelight.h ****     SC_BRAKELIGHT_data_t value;
 129:source\rte/sc_brakelight.h **** 
 130:source\rte/sc_brakelight.h ****     /**
 131:source\rte/sc_brakelight.h ****      * Current signal status
 132:source\rte/sc_brakelight.h ****      */
 133:source\rte/sc_brakelight.h ****     RTE_signalStatus_t status;
 134:source\rte/sc_brakelight.h **** 
 135:source\rte/sc_brakelight.h ****     /**
 136:source\rte/sc_brakelight.h ****      * Current age of the signal (in calling cycles)
 137:source\rte/sc_brakelight.h ****      */
 138:source\rte/sc_brakelight.h ****     uint32_t age;
 139:source\rte/sc_brakelight.h **** 
 140:source\rte/sc_brakelight.h ****     /**
 141:source\rte/sc_brakelight.h ****      * Pointer to the signal configuration
 142:source\rte/sc_brakelight.h ****      */
 143:source\rte/sc_brakelight.h **** 	const SC_BRAKELIGHT_cfg_t * const    pSigCfg;
 144:source\rte/sc_brakelight.h **** 
 145:source\rte/sc_brakelight.h **** };                                                                                                 
 146:source\rte/sc_brakelight.h **** typedef struct SC_BRAKELIGHT_s SC_BRAKELIGHT_t;
 147:source\rte/sc_brakelight.h **** 
 148:source\rte/sc_brakelight.h **** /**************************************************************************************************
 149:source\rte/sc_brakelight.h **** /* Signal initialisation   																							*/
 150:source\rte/sc_brakelight.h **** /**************************************************************************************************
 151:source\rte/sc_brakelight.h **** 
 152:source\rte/sc_brakelight.h **** /**
 153:source\rte/sc_brakelight.h ****  * Initializes a signal instance with a passed init value.
 154:source\rte/sc_brakelight.h ****  * Depending on the configured conversion or scaling function the raw_value will be calculated.
 155:source\rte/sc_brakelight.h ****  * Signal status will change from RTE_SIGNALSTATUS_STARTUP to RTE_SIGNALSTATUS_INITIALIZED.
 156:source\rte/sc_brakelight.h ****  *
 157:source\rte/sc_brakelight.h ****  * @param  SC_BRAKELIGHT_t * const signal: Pointer to the signal object which will be initialised
 158:source\rte/sc_brakelight.h ****  * @param const sc_brakelight_data_t * const value: Pointer to initial value of the application dat
 159:source\rte/sc_brakelight.h ****  * @return RC_t: standard return code, currently only RC_SUCCESS
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 22


 160:source\rte/sc_brakelight.h ****  *
 161:source\rte/sc_brakelight.h ****  **/
 162:source\rte/sc_brakelight.h **** inline RC_t RTE_SC_BRAKELIGHT_init( SC_BRAKELIGHT_t * const signal, const SC_BRAKELIGHT_data_t * co
 163:source\rte/sc_brakelight.h **** {                                                                                                  
 164:source\rte/sc_brakelight.h **** 
 165:source\rte/sc_brakelight.h ****    RC_t ret = RC_SUCCESS;
 166:source\rte/sc_brakelight.h **** 
 167:source\rte/sc_brakelight.h ****    //Set value and raw value
 168:source\rte/sc_brakelight.h ****    signal->value  = *value;
 169:source\rte/sc_brakelight.h ****    signal->age    = 0;
 170:source\rte/sc_brakelight.h ****    signal->status = RTE_SIGNALSTATUS_INITIALIZED;
 171:source\rte/sc_brakelight.h **** 
 172:source\rte/sc_brakelight.h ****    return ret;
 173:source\rte/sc_brakelight.h **** }
 174:source\rte/sc_brakelight.h **** 
 175:source\rte/sc_brakelight.h **** /**************************************************************************************************
 176:source\rte/sc_brakelight.h **** /* Status and timeout control																						*/
 177:source\rte/sc_brakelight.h **** /**************************************************************************************************
 178:source\rte/sc_brakelight.h **** 
 179:source\rte/sc_brakelight.h **** /**
 180:source\rte/sc_brakelight.h ****  *  Returns the current signal status of the passed signal instance.
 181:source\rte/sc_brakelight.h ****  *
 182:source\rte/sc_brakelight.h ****  * @param  SC_BRAKELIGHT_t * const signal: Pointer to the signal object
 183:source\rte/sc_brakelight.h ****  * @return  sig_status_t: The current signal status
 184:source\rte/sc_brakelight.h ****  *
 185:source\rte/sc_brakelight.h ****  **/
 186:source\rte/sc_brakelight.h **** inline RTE_signalStatus_t RTE_SC_BRAKELIGHT_getStatus( const SC_BRAKELIGHT_t * const signal )
 187:source\rte/sc_brakelight.h **** {
 188:source\rte/sc_brakelight.h ****    return signal->status;
 189:source\rte/sc_brakelight.h **** }
 190:source\rte/sc_brakelight.h **** 
 191:source\rte/sc_brakelight.h **** 
 192:source\rte/sc_brakelight.h **** /**
 193:source\rte/sc_brakelight.h ****  *  Sets a new signal status of the passed signal instance by passing the new status.
 194:source\rte/sc_brakelight.h ****  *
 195:source\rte/sc_brakelight.h ****  * @param  SC_BRAKELIGHT_t * const signal: Pointer to the signal object
 196:source\rte/sc_brakelight.h ****  * @param  const sig_status_t status: New signal status
 197:source\rte/sc_brakelight.h ****  * @return RC_t: standard return code, currently only RC_SUCCESS
 198:source\rte/sc_brakelight.h ****  *
 199:source\rte/sc_brakelight.h ****  */
 200:source\rte/sc_brakelight.h **** inline RC_t RTE_SC_BRAKELIGHT_setStatus( SC_BRAKELIGHT_t * const signal, const RTE_signalStatus_t s
 201:source\rte/sc_brakelight.h **** {
 202:source\rte/sc_brakelight.h ****    signal->status = status;
 203:source\rte/sc_brakelight.h ****    size_t taskNum=0;
 204:source\rte/sc_brakelight.h ****    
 205:source\rte/sc_brakelight.h ****    //Fire error events in case of invalid state
 206:source\rte/sc_brakelight.h ****    if (signal->status == RTE_SIGNALSTATUS_INVALID)
 207:source\rte/sc_brakelight.h ****    {
 208:source\rte/sc_brakelight.h **** 	    //Pointer to the Taskarray, containing the tasks receiving the onUpdate events
 209:source\rte/sc_brakelight.h **** 		TaskTypeArray* pTaskArray = signal->pSigCfg->onErrorTasks;
 210:source\rte/sc_brakelight.h **** 
 211:source\rte/sc_brakelight.h **** 		if (NULL!=signal->pSigCfg->evOnError && NULL != pTaskArray){
 212:source\rte/sc_brakelight.h **** 			for( taskNum=0 ; taskNum < signal->pSigCfg->onErrorTaskCount ;taskNum++){
 213:source\rte/sc_brakelight.h **** 				TaskType task = (*pTaskArray)[taskNum];
 214:source\rte/sc_brakelight.h **** 				SetEvent( task, signal->pSigCfg->evOnError);
 215:source\rte/sc_brakelight.h **** 			}
 216:source\rte/sc_brakelight.h **** 		}
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 23


 217:source\rte/sc_brakelight.h ****    }
 218:source\rte/sc_brakelight.h ****    
 219:source\rte/sc_brakelight.h ****    return RC_SUCCESS;
 220:source\rte/sc_brakelight.h **** }
 221:source\rte/sc_brakelight.h **** 
 222:source\rte/sc_brakelight.h **** 
 223:source\rte/sc_brakelight.h **** /**
 224:source\rte/sc_brakelight.h ****  * Returns the count of refreshing trials (refresh, set or set_raw) that failed.
 225:source\rte/sc_brakelight.h ****  * Prerquisite: The signal is refreshed cyclically
 226:source\rte/sc_brakelight.h ****  *
 227:source\rte/sc_brakelight.h ****  * @param  SC_BRAKELIGHT_t * const signal: Pointer to the signal object
 228:source\rte/sc_brakelight.h ****  * @return uint32_t: Number of cycles since the signal has been updated for the last time
 229:source\rte/sc_brakelight.h ****  */
 230:source\rte/sc_brakelight.h **** inline uint32_t RTE_SC_BRAKELIGHT_getAge( const SC_BRAKELIGHT_t * const signal )
 231:source\rte/sc_brakelight.h **** {
 232:source\rte/sc_brakelight.h ****    return signal->age;
 233:source\rte/sc_brakelight.h **** }
 234:source\rte/sc_brakelight.h **** 
 235:source\rte/sc_brakelight.h **** /**
 236:source\rte/sc_brakelight.h ****  * Should be called by application or driver if no new value can be provided.
 237:source\rte/sc_brakelight.h ****  * @param  SC_BRAKELIGHT_t * const signal: Pointer to the signal object
 238:source\rte/sc_brakelight.h ****  * @param uint32_t increment: incrementvalue, typically in [ms]
 239:source\rte/sc_brakelight.h ****  * @return void
 240:source\rte/sc_brakelight.h ****  */
 241:source\rte/sc_brakelight.h **** inline void RTE_SC_BRAKELIGHT_incAge(  SC_BRAKELIGHT_t * const signal , uint32_t increment)
 242:source\rte/sc_brakelight.h **** {
 243:source\rte/sc_brakelight.h **** 	   //Hack....
 244:source\rte/sc_brakelight.h **** 	   if ( 0xFFFF0000 > (signal->age + increment) )
  85              		.loc 5 244 0
  86 0030 044B     		ldr	r3, .L6
  87 0032 9B6A     		ldr	r3, [r3, #40]
  88 0034 1844     		add	r0, r0, r3
  89              	.LVL4:
  90 0036 10F1011F 		cmn	r0, #65537
  91 003a 01D8     		bhi	.L1
 245:source\rte/sc_brakelight.h **** 	   {
 246:source\rte/sc_brakelight.h **** 	      signal->age += increment;
  92              		.loc 5 246 0
  93 003c 014B     		ldr	r3, .L6
  94 003e 9862     		str	r0, [r3, #40]
  95              	.LVL5:
  96              	.L1:
  97 0040 7047     		bx	lr
  98              	.L7:
  99 0042 00BF     		.align	2
 100              	.L6:
 101 0044 00000000 		.word	.LANCHOR0
 102              	.LBE17:
 103              	.LBE16:
 104              		.cfi_endproc
 105              	.LFE150:
 106              		.size	RTE_timertick_sp_common_tick, .-RTE_timertick_sp_common_tick
 107              		.global	SO_BRAKELIGHT_signal
 108              		.global	SO_ENGINE_signal
 109              		.global	SO_SPEED_signal
 110              		.global	so_speed_updTasks
 111              		.global	SO_JOYSTICK_signal
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 24


 112              		.global	so_joystick_updTasks
 113              		.section	.rodata
 114              		.align	2
 115              		.type	SO_BRAKELIGHT_cfg, %object
 116              		.size	SO_BRAKELIGHT_cfg, 40
 117              	SO_BRAKELIGHT_cfg:
 118 0000 00000000 		.word	0
 119 0004 00000000 		.word	SC_BRAKELIGHT_driverOut
 120 0008 00000000 		.word	0
 121 000c 00000000 		.word	0
 122 0010 00000000 		.word	0
 123 0014 00000000 		.word	0
 124 0018 00000000 		.word	0
 125 001c 00000000 		.word	0
 126 0020 00       		.byte	0
 127 0021 000000   		.space	3
 128 0024 00000000 		.word	0
 129              		.type	SO_ENGINE_cfg, %object
 130              		.size	SO_ENGINE_cfg, 40
 131              	SO_ENGINE_cfg:
 132 0028 00000000 		.word	0
 133 002c 00000000 		.word	SC_ENGINE_driverOut
 134 0030 00000000 		.word	0
 135 0034 00000000 		.word	0
 136 0038 00000000 		.word	0
 137 003c 00000000 		.word	0
 138 0040 00000000 		.word	0
 139 0044 00000000 		.word	0
 140 0048 00       		.byte	0
 141 0049 000000   		.space	3
 142 004c 00000000 		.word	0
 143              		.type	SO_SPEED_cfg, %object
 144              		.size	SO_SPEED_cfg, 40
 145              	SO_SPEED_cfg:
 146 0050 00000000 		.word	0
 147 0054 00000000 		.word	0
 148 0058 02000000 		.word	2
 149 005c 00000000 		.word	0
 150 0060 01000000 		.word	1
 151 0064 00000000 		.word	so_speed_updTasks
 152 0068 00000000 		.word	0
 153 006c 00000000 		.word	0
 154 0070 00       		.byte	0
 155 0071 000000   		.space	3
 156 0074 00000000 		.word	0
 157              		.type	so_speed_updTasks, %object
 158              		.size	so_speed_updTasks, 4
 159              	so_speed_updTasks:
 160 0078 02000000 		.word	2
 161              		.type	SO_JOYSTICK_cfg, %object
 162              		.size	SO_JOYSTICK_cfg, 40
 163              	SO_JOYSTICK_cfg:
 164 007c 00000000 		.word	SC_JOYSTICK_driverIn
 165 0080 00000000 		.word	0
 166 0084 01000000 		.word	1
 167 0088 00000000 		.word	0
 168 008c 01000000 		.word	1
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 25


 169 0090 00000000 		.word	so_joystick_updTasks
 170 0094 00000000 		.word	0
 171 0098 00000000 		.word	0
 172 009c 00       		.byte	0
 173 009d 000000   		.space	3
 174 00a0 00000000 		.word	0
 175              		.type	so_joystick_updTasks, %object
 176              		.size	so_joystick_updTasks, 4
 177              	so_joystick_updTasks:
 178 00a4 03000000 		.word	3
 179              		.data
 180              		.align	2
 181              		.set	.LANCHOR0,. + 0
 182              		.type	SO_JOYSTICK_signal, %object
 183              		.size	SO_JOYSTICK_signal, 12
 184              	SO_JOYSTICK_signal:
 185 0000 00       		.byte	0
 186 0001 00       		.byte	0
 187 0002 00       		.byte	0
 188 0003 00       		.space	1
 189 0004 00000000 		.word	0
 190 0008 7C000000 		.word	SO_JOYSTICK_cfg
 191              		.type	SO_SPEED_signal, %object
 192              		.size	SO_SPEED_signal, 12
 193              	SO_SPEED_signal:
 194 000c 00       		.byte	0
 195 000d 00       		.byte	0
 196 000e 0000     		.space	2
 197 0010 00000000 		.word	0
 198 0014 50000000 		.word	SO_SPEED_cfg
 199              		.type	SO_ENGINE_signal, %object
 200              		.size	SO_ENGINE_signal, 12
 201              	SO_ENGINE_signal:
 202 0018 00       		.byte	0
 203 0019 00       		.byte	0
 204 001a 0000     		.space	2
 205 001c 00000000 		.word	0
 206 0020 28000000 		.word	SO_ENGINE_cfg
 207              		.type	SO_BRAKELIGHT_signal, %object
 208              		.size	SO_BRAKELIGHT_signal, 12
 209              	SO_BRAKELIGHT_signal:
 210 0024 00       		.byte	0
 211 0025 00       		.byte	0
 212 0026 0000     		.space	2
 213 0028 00000000 		.word	0
 214 002c 00000000 		.word	SO_BRAKELIGHT_cfg
 215              		.text
 216              	.Letext0:
 217              		.file 6 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 218              		.file 7 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 219              		.file 8 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 220              		.file 9 "Generated_Source\\PSoC5/ErikaOS_common_ee_types.inc"
 221              		.file 10 "Generated_Source\\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc"
 222              		.file 11 "Generated_Source\\PSoC5/ErikaOS_ee_oo_common.inc"
 223              		.file 12 ".\\source\\bsw/global.h"
 224              		.file 13 "source\\rte\\rte_types.h"
 225              		.file 14 "source\\rte\\rte.h"
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 26


 226              		.file 15 "source\\rte\\sc_joystick_type.h"
 227              		.file 16 "source\\rte\\sc_speed_type.h"
 228              		.file 17 "source\\rte\\sc_engine_type.h"
 229              		.file 18 "source\\rte\\sc_brakelight_type.h"
 230              		.file 19 "Generated_Source\\PSoC5/ErikaOS_ee_oo_intfunc.inc"
 231              		.file 20 "Generated_Source\\PSoC5/ErikaOS_cortex_mx_ee_context.inc"
 232              		.file 21 "Generated_Source\\PSoC5/ErikaOS_common_ee_primitives.inc"
 233              		.file 22 "Generated_Source\\PSoC5/core_cm3.h"
 234              		.section	.debug_info,"",%progbits
 235              	.Ldebug_info0:
 236 0000 A30A0000 		.4byte	0xaa3
 237 0004 0400     		.2byte	0x4
 238 0006 00000000 		.4byte	.Ldebug_abbrev0
 239 000a 04       		.byte	0x4
 240 000b 01       		.uleb128 0x1
 241 000c 1D020000 		.4byte	.LASF132
 242 0010 0C       		.byte	0xc
 243 0011 91040000 		.4byte	.LASF133
 244 0015 A5070000 		.4byte	.LASF134
 245 0019 00000000 		.4byte	.Ldebug_ranges0+0
 246 001d 00000000 		.4byte	0
 247 0021 00000000 		.4byte	.Ldebug_line0
 248 0025 02       		.uleb128 0x2
 249 0026 01       		.byte	0x1
 250 0027 06       		.byte	0x6
 251 0028 58080000 		.4byte	.LASF0
 252 002c 03       		.uleb128 0x3
 253 002d 2A060000 		.4byte	.LASF4
 254 0031 06       		.byte	0x6
 255 0032 1D       		.byte	0x1d
 256 0033 37000000 		.4byte	0x37
 257 0037 02       		.uleb128 0x2
 258 0038 01       		.byte	0x1
 259 0039 08       		.byte	0x8
 260 003a 20070000 		.4byte	.LASF1
 261 003e 02       		.uleb128 0x2
 262 003f 02       		.byte	0x2
 263 0040 05       		.byte	0x5
 264 0041 BE050000 		.4byte	.LASF2
 265 0045 02       		.uleb128 0x2
 266 0046 02       		.byte	0x2
 267 0047 07       		.byte	0x7
 268 0048 64080000 		.4byte	.LASF3
 269 004c 03       		.uleb128 0x3
 270 004d C8000000 		.4byte	.LASF5
 271 0051 06       		.byte	0x6
 272 0052 3F       		.byte	0x3f
 273 0053 57000000 		.4byte	0x57
 274 0057 02       		.uleb128 0x2
 275 0058 04       		.byte	0x4
 276 0059 05       		.byte	0x5
 277 005a C8050000 		.4byte	.LASF6
 278 005e 03       		.uleb128 0x3
 279 005f 2E070000 		.4byte	.LASF7
 280 0063 06       		.byte	0x6
 281 0064 41       		.byte	0x41
 282 0065 69000000 		.4byte	0x69
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 27


 283 0069 02       		.uleb128 0x2
 284 006a 04       		.byte	0x4
 285 006b 07       		.byte	0x7
 286 006c D1060000 		.4byte	.LASF8
 287 0070 02       		.uleb128 0x2
 288 0071 08       		.byte	0x8
 289 0072 05       		.byte	0x5
 290 0073 27040000 		.4byte	.LASF9
 291 0077 02       		.uleb128 0x2
 292 0078 08       		.byte	0x8
 293 0079 07       		.byte	0x7
 294 007a AC010000 		.4byte	.LASF10
 295 007e 04       		.uleb128 0x4
 296 007f 04       		.byte	0x4
 297 0080 05       		.byte	0x5
 298 0081 696E7400 		.ascii	"int\000"
 299 0085 02       		.uleb128 0x2
 300 0086 04       		.byte	0x4
 301 0087 07       		.byte	0x7
 302 0088 77000000 		.4byte	.LASF11
 303 008c 03       		.uleb128 0x3
 304 008d D7030000 		.4byte	.LASF12
 305 0091 07       		.byte	0x7
 306 0092 18       		.byte	0x18
 307 0093 2C000000 		.4byte	0x2c
 308 0097 03       		.uleb128 0x3
 309 0098 F6060000 		.4byte	.LASF13
 310 009c 07       		.byte	0x7
 311 009d 2C       		.byte	0x2c
 312 009e 4C000000 		.4byte	0x4c
 313 00a2 03       		.uleb128 0x3
 314 00a3 49010000 		.4byte	.LASF14
 315 00a7 07       		.byte	0x7
 316 00a8 30       		.byte	0x30
 317 00a9 5E000000 		.4byte	0x5e
 318 00ad 02       		.uleb128 0x2
 319 00ae 04       		.byte	0x4
 320 00af 04       		.byte	0x4
 321 00b0 86010000 		.4byte	.LASF15
 322 00b4 02       		.uleb128 0x2
 323 00b5 08       		.byte	0x8
 324 00b6 04       		.byte	0x4
 325 00b7 94080000 		.4byte	.LASF16
 326 00bb 02       		.uleb128 0x2
 327 00bc 01       		.byte	0x1
 328 00bd 08       		.byte	0x8
 329 00be 62030000 		.4byte	.LASF17
 330 00c2 03       		.uleb128 0x3
 331 00c3 C8020000 		.4byte	.LASF18
 332 00c7 08       		.byte	0x8
 333 00c8 D8       		.byte	0xd8
 334 00c9 85000000 		.4byte	0x85
 335 00cd 02       		.uleb128 0x2
 336 00ce 08       		.byte	0x8
 337 00cf 04       		.byte	0x4
 338 00d0 2D050000 		.4byte	.LASF19
 339 00d4 03       		.uleb128 0x3
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 28


 340 00d5 A0060000 		.4byte	.LASF20
 341 00d9 09       		.byte	0x9
 342 00da 53       		.byte	0x53
 343 00db 7E000000 		.4byte	0x7e
 344 00df 03       		.uleb128 0x3
 345 00e0 6C050000 		.4byte	.LASF21
 346 00e4 09       		.byte	0x9
 347 00e5 54       		.byte	0x54
 348 00e6 85000000 		.4byte	0x85
 349 00ea 03       		.uleb128 0x3
 350 00eb 98060000 		.4byte	.LASF22
 351 00ef 0A       		.byte	0xa
 352 00f0 4D       		.byte	0x4d
 353 00f1 DF000000 		.4byte	0xdf
 354 00f5 03       		.uleb128 0x3
 355 00f6 09010000 		.4byte	.LASF23
 356 00fa 0A       		.byte	0xa
 357 00fb 4F       		.byte	0x4f
 358 00fc DF000000 		.4byte	0xdf
 359 0100 03       		.uleb128 0x3
 360 0101 FD010000 		.4byte	.LASF24
 361 0105 0A       		.byte	0xa
 362 0106 78       		.byte	0x78
 363 0107 D4000000 		.4byte	0xd4
 364 010b 05       		.uleb128 0x5
 365 010c D7010000 		.4byte	.LASF25
 366 0110 0B       		.byte	0xb
 367 0111 F701     		.2byte	0x1f7
 368 0113 00010000 		.4byte	0x100
 369 0117 05       		.uleb128 0x5
 370 0118 4A000000 		.4byte	.LASF26
 371 011c 0B       		.byte	0xb
 372 011d 2C02     		.2byte	0x22c
 373 011f EA000000 		.4byte	0xea
 374 0123 02       		.uleb128 0x2
 375 0124 04       		.byte	0x4
 376 0125 07       		.byte	0x7
 377 0126 A9060000 		.4byte	.LASF27
 378 012a 03       		.uleb128 0x3
 379 012b CF020000 		.4byte	.LASF28
 380 012f 0C       		.byte	0xc
 381 0130 90       		.byte	0x90
 382 0131 25000000 		.4byte	0x25
 383 0135 03       		.uleb128 0x3
 384 0136 72030000 		.4byte	.LASF29
 385 013a 0C       		.byte	0xc
 386 013b 9C       		.byte	0x9c
 387 013c 37000000 		.4byte	0x37
 388 0140 06       		.uleb128 0x6
 389 0141 01       		.byte	0x1
 390 0142 25000000 		.4byte	0x25
 391 0146 0C       		.byte	0xc
 392 0147 CF       		.byte	0xcf
 393 0148 E9010000 		.4byte	0x1e9
 394 014c 07       		.uleb128 0x7
 395 014d 67030000 		.4byte	.LASF30
 396 0151 00       		.byte	0
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 29


 397 0152 08       		.uleb128 0x8
 398 0153 52010000 		.4byte	.LASF31
 399 0157 7F       		.sleb128 -1
 400 0158 08       		.uleb128 0x8
 401 0159 D2000000 		.4byte	.LASF32
 402 015d 7E       		.sleb128 -2
 403 015e 08       		.uleb128 0x8
 404 015f 84000000 		.4byte	.LASF33
 405 0163 7D       		.sleb128 -3
 406 0164 08       		.uleb128 0x8
 407 0165 FE040000 		.4byte	.LASF34
 408 0169 7C       		.sleb128 -4
 409 016a 08       		.uleb128 0x8
 410 016b EF080000 		.4byte	.LASF35
 411 016f 7B       		.sleb128 -5
 412 0170 08       		.uleb128 0x8
 413 0171 0F070000 		.4byte	.LASF36
 414 0175 7A       		.sleb128 -6
 415 0176 08       		.uleb128 0x8
 416 0177 EC040000 		.4byte	.LASF37
 417 017b 79       		.sleb128 -7
 418 017c 08       		.uleb128 0x8
 419 017d 18050000 		.4byte	.LASF38
 420 0181 78       		.sleb128 -8
 421 0182 08       		.uleb128 0x8
 422 0183 51070000 		.4byte	.LASF39
 423 0187 77       		.sleb128 -9
 424 0188 08       		.uleb128 0x8
 425 0189 89050000 		.4byte	.LASF40
 426 018d 76       		.sleb128 -10
 427 018e 08       		.uleb128 0x8
 428 018f E0000000 		.4byte	.LASF41
 429 0193 75       		.sleb128 -11
 430 0194 08       		.uleb128 0x8
 431 0195 9E010000 		.4byte	.LASF42
 432 0199 74       		.sleb128 -12
 433 019a 08       		.uleb128 0x8
 434 019b 0C080000 		.4byte	.LASF43
 435 019f 73       		.sleb128 -13
 436 01a0 08       		.uleb128 0x8
 437 01a1 76050000 		.4byte	.LASF44
 438 01a5 72       		.sleb128 -14
 439 01a6 08       		.uleb128 0x8
 440 01a7 2A000000 		.4byte	.LASF45
 441 01ab 71       		.sleb128 -15
 442 01ac 08       		.uleb128 0x8
 443 01ad 19060000 		.4byte	.LASF46
 444 01b1 70       		.sleb128 -16
 445 01b2 08       		.uleb128 0x8
 446 01b3 74060000 		.4byte	.LASF47
 447 01b7 6F       		.sleb128 -17
 448 01b8 08       		.uleb128 0x8
 449 01b9 5B010000 		.4byte	.LASF48
 450 01bd 6E       		.sleb128 -18
 451 01be 08       		.uleb128 0x8
 452 01bf 17000000 		.4byte	.LASF49
 453 01c3 6D       		.sleb128 -19
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 30


 454 01c4 08       		.uleb128 0x8
 455 01c5 97050000 		.4byte	.LASF50
 456 01c9 6C       		.sleb128 -20
 457 01ca 08       		.uleb128 0x8
 458 01cb C5030000 		.4byte	.LASF51
 459 01cf 6B       		.sleb128 -21
 460 01d0 08       		.uleb128 0x8
 461 01d1 5D040000 		.4byte	.LASF52
 462 01d5 6A       		.sleb128 -22
 463 01d6 08       		.uleb128 0x8
 464 01d7 F2000000 		.4byte	.LASF53
 465 01db 69       		.sleb128 -23
 466 01dc 08       		.uleb128 0x8
 467 01dd 80070000 		.4byte	.LASF54
 468 01e1 68       		.sleb128 -24
 469 01e2 08       		.uleb128 0x8
 470 01e3 00060000 		.4byte	.LASF55
 471 01e7 67       		.sleb128 -25
 472 01e8 00       		.byte	0
 473 01e9 03       		.uleb128 0x3
 474 01ea F1060000 		.4byte	.LASF56
 475 01ee 0C       		.byte	0xc
 476 01ef EA       		.byte	0xea
 477 01f0 40010000 		.4byte	0x140
 478 01f4 03       		.uleb128 0x3
 479 01f5 E3060000 		.4byte	.LASF57
 480 01f9 0D       		.byte	0xd
 481 01fa 19       		.byte	0x19
 482 01fb FF010000 		.4byte	0x1ff
 483 01ff 09       		.uleb128 0x9
 484 0200 0B010000 		.4byte	0x10b
 485 0204 0A020000 		.4byte	0x20a
 486 0208 0A       		.uleb128 0xa
 487 0209 00       		.byte	0
 488 020a 03       		.uleb128 0x3
 489 020b E0010000 		.4byte	.LASF58
 490 020f 0D       		.byte	0xd
 491 0210 2D       		.byte	0x2d
 492 0211 A2000000 		.4byte	0xa2
 493 0215 06       		.uleb128 0x6
 494 0216 01       		.byte	0x1
 495 0217 37000000 		.4byte	0x37
 496 021b 0E       		.byte	0xe
 497 021c 59       		.byte	0x59
 498 021d 3A020000 		.4byte	0x23a
 499 0221 07       		.uleb128 0x7
 500 0222 D6080000 		.4byte	.LASF59
 501 0226 00       		.byte	0
 502 0227 07       		.uleb128 0x7
 503 0228 77080000 		.4byte	.LASF60
 504 022c 01       		.byte	0x1
 505 022d 07       		.uleb128 0x7
 506 022e 48060000 		.4byte	.LASF61
 507 0232 02       		.byte	0x2
 508 0233 07       		.uleb128 0x7
 509 0234 39050000 		.4byte	.LASF62
 510 0238 03       		.byte	0x3
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 31


 511 0239 00       		.byte	0
 512 023a 03       		.uleb128 0x3
 513 023b C3080000 		.4byte	.LASF63
 514 023f 0E       		.byte	0xe
 515 0240 5E       		.byte	0x5e
 516 0241 15020000 		.4byte	0x215
 517 0245 0B       		.uleb128 0xb
 518 0246 02       		.byte	0x2
 519 0247 0F       		.byte	0xf
 520 0248 1F       		.byte	0x1f
 521 0249 66020000 		.4byte	0x266
 522 024d 0C       		.uleb128 0xc
 523 024e 70010000 		.4byte	.LASF64
 524 0252 0F       		.byte	0xf
 525 0253 21       		.byte	0x21
 526 0254 2A010000 		.4byte	0x12a
 527 0258 00       		.byte	0
 528 0259 0C       		.uleb128 0xc
 529 025a 7B010000 		.4byte	.LASF65
 530 025e 0F       		.byte	0xf
 531 025f 22       		.byte	0x22
 532 0260 2A010000 		.4byte	0x12a
 533 0264 01       		.byte	0x1
 534 0265 00       		.byte	0
 535 0266 03       		.uleb128 0x3
 536 0267 9B080000 		.4byte	.LASF66
 537 026b 0F       		.byte	0xf
 538 026c 25       		.byte	0x25
 539 026d 45020000 		.4byte	0x245
 540 0271 03       		.uleb128 0x3
 541 0272 D5040000 		.4byte	.LASF67
 542 0276 02       		.byte	0x2
 543 0277 27       		.byte	0x27
 544 0278 7C020000 		.4byte	0x27c
 545 027c 0D       		.uleb128 0xd
 546 027d 04       		.byte	0x4
 547 027e 82020000 		.4byte	0x282
 548 0282 0E       		.uleb128 0xe
 549 0283 E9010000 		.4byte	0x1e9
 550 0287 91020000 		.4byte	0x291
 551 028b 0F       		.uleb128 0xf
 552 028c 97020000 		.4byte	0x297
 553 0290 00       		.byte	0
 554 0291 0D       		.uleb128 0xd
 555 0292 04       		.byte	0x4
 556 0293 66020000 		.4byte	0x266
 557 0297 10       		.uleb128 0x10
 558 0298 91020000 		.4byte	0x291
 559 029c 03       		.uleb128 0x3
 560 029d A8040000 		.4byte	.LASF68
 561 02a1 02       		.byte	0x2
 562 02a2 2D       		.byte	0x2d
 563 02a3 A7020000 		.4byte	0x2a7
 564 02a7 0D       		.uleb128 0xd
 565 02a8 04       		.byte	0x4
 566 02a9 AD020000 		.4byte	0x2ad
 567 02ad 0E       		.uleb128 0xe
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 32


 568 02ae E9010000 		.4byte	0x1e9
 569 02b2 BC020000 		.4byte	0x2bc
 570 02b6 0F       		.uleb128 0xf
 571 02b7 C7020000 		.4byte	0x2c7
 572 02bb 00       		.byte	0
 573 02bc 0D       		.uleb128 0xd
 574 02bd 04       		.byte	0x4
 575 02be C2020000 		.4byte	0x2c2
 576 02c2 10       		.uleb128 0x10
 577 02c3 66020000 		.4byte	0x266
 578 02c7 10       		.uleb128 0x10
 579 02c8 BC020000 		.4byte	0x2bc
 580 02cc 11       		.uleb128 0x11
 581 02cd EC020000 		.4byte	.LASF80
 582 02d1 28       		.byte	0x28
 583 02d2 02       		.byte	0x2
 584 02d3 37       		.byte	0x37
 585 02d4 51030000 		.4byte	0x351
 586 02d8 0C       		.uleb128 0xc
 587 02d9 35040000 		.4byte	.LASF69
 588 02dd 02       		.byte	0x2
 589 02de 3C       		.byte	0x3c
 590 02df 51030000 		.4byte	0x351
 591 02e3 00       		.byte	0
 592 02e4 0C       		.uleb128 0xc
 593 02e5 0E050000 		.4byte	.LASF70
 594 02e9 02       		.byte	0x2
 595 02ea 41       		.byte	0x41
 596 02eb 56030000 		.4byte	0x356
 597 02ef 04       		.byte	0x4
 598 02f0 0C       		.uleb128 0xc
 599 02f1 A9030000 		.4byte	.LASF71
 600 02f5 02       		.byte	0x2
 601 02f6 46       		.byte	0x46
 602 02f7 5B030000 		.4byte	0x35b
 603 02fb 08       		.byte	0x8
 604 02fc 0C       		.uleb128 0xc
 605 02fd 39070000 		.4byte	.LASF72
 606 0301 02       		.byte	0x2
 607 0302 4C       		.byte	0x4c
 608 0303 5B030000 		.4byte	0x35b
 609 0307 0C       		.byte	0xc
 610 0308 0C       		.uleb128 0xc
 611 0309 11010000 		.4byte	.LASF73
 612 030d 02       		.byte	0x2
 613 030e 51       		.byte	0x51
 614 030f 60030000 		.4byte	0x360
 615 0313 10       		.byte	0x10
 616 0314 0C       		.uleb128 0xc
 617 0315 43070000 		.4byte	.LASF74
 618 0319 02       		.byte	0x2
 619 031a 56       		.byte	0x56
 620 031b 6B030000 		.4byte	0x36b
 621 031f 14       		.byte	0x14
 622 0320 0C       		.uleb128 0xc
 623 0321 4C040000 		.4byte	.LASF75
 624 0325 02       		.byte	0x2
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 33


 625 0326 5B       		.byte	0x5b
 626 0327 60030000 		.4byte	0x360
 627 032b 18       		.byte	0x18
 628 032c 0C       		.uleb128 0xc
 629 032d 36080000 		.4byte	.LASF76
 630 0331 02       		.byte	0x2
 631 0332 60       		.byte	0x60
 632 0333 6B030000 		.4byte	0x36b
 633 0337 1C       		.byte	0x1c
 634 0338 0C       		.uleb128 0xc
 635 0339 3B030000 		.4byte	.LASF77
 636 033d 02       		.byte	0x2
 637 033e 66       		.byte	0x66
 638 033f 70030000 		.4byte	0x370
 639 0343 20       		.byte	0x20
 640 0344 0C       		.uleb128 0xc
 641 0345 32030000 		.4byte	.LASF78
 642 0349 02       		.byte	0x2
 643 034a 6B       		.byte	0x6b
 644 034b 75030000 		.4byte	0x375
 645 034f 24       		.byte	0x24
 646 0350 00       		.byte	0
 647 0351 10       		.uleb128 0x10
 648 0352 71020000 		.4byte	0x271
 649 0356 10       		.uleb128 0x10
 650 0357 9C020000 		.4byte	0x29c
 651 035b 10       		.uleb128 0x10
 652 035c 17010000 		.4byte	0x117
 653 0360 10       		.uleb128 0x10
 654 0361 C2000000 		.4byte	0xc2
 655 0365 0D       		.uleb128 0xd
 656 0366 04       		.byte	0x4
 657 0367 F4010000 		.4byte	0x1f4
 658 036b 10       		.uleb128 0x10
 659 036c 65030000 		.4byte	0x365
 660 0370 10       		.uleb128 0x10
 661 0371 35010000 		.4byte	0x135
 662 0375 10       		.uleb128 0x10
 663 0376 0A020000 		.4byte	0x20a
 664 037a 03       		.uleb128 0x3
 665 037b FE020000 		.4byte	.LASF79
 666 037f 02       		.byte	0x2
 667 0380 6E       		.byte	0x6e
 668 0381 85030000 		.4byte	0x385
 669 0385 10       		.uleb128 0x10
 670 0386 CC020000 		.4byte	0x2cc
 671 038a 11       		.uleb128 0x11
 672 038b 3E040000 		.4byte	.LASF81
 673 038f 0C       		.byte	0xc
 674 0390 02       		.byte	0x2
 675 0391 7A       		.byte	0x7a
 676 0392 C7030000 		.4byte	0x3c7
 677 0396 0C       		.uleb128 0xc
 678 0397 04020000 		.4byte	.LASF82
 679 039b 02       		.byte	0x2
 680 039c 80       		.byte	0x80
 681 039d 66020000 		.4byte	0x266
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 34


 682 03a1 00       		.byte	0
 683 03a2 0C       		.uleb128 0xc
 684 03a3 DF030000 		.4byte	.LASF83
 685 03a7 02       		.byte	0x2
 686 03a8 85       		.byte	0x85
 687 03a9 3A020000 		.4byte	0x23a
 688 03ad 02       		.byte	0x2
 689 03ae 12       		.uleb128 0x12
 690 03af 61676500 		.ascii	"age\000"
 691 03b3 02       		.byte	0x2
 692 03b4 8A       		.byte	0x8a
 693 03b5 A2000000 		.4byte	0xa2
 694 03b9 04       		.byte	0x4
 695 03ba 0C       		.uleb128 0xc
 696 03bb 4A030000 		.4byte	.LASF84
 697 03bf 02       		.byte	0x2
 698 03c0 8F       		.byte	0x8f
 699 03c1 CD030000 		.4byte	0x3cd
 700 03c5 08       		.byte	0x8
 701 03c6 00       		.byte	0
 702 03c7 0D       		.uleb128 0xd
 703 03c8 04       		.byte	0x4
 704 03c9 7A030000 		.4byte	0x37a
 705 03cd 10       		.uleb128 0x10
 706 03ce C7030000 		.4byte	0x3c7
 707 03d2 03       		.uleb128 0x3
 708 03d3 E6030000 		.4byte	.LASF85
 709 03d7 02       		.byte	0x2
 710 03d8 92       		.byte	0x92
 711 03d9 8A030000 		.4byte	0x38a
 712 03dd 0B       		.uleb128 0xb
 713 03de 01       		.byte	0x1
 714 03df 10       		.byte	0x10
 715 03e0 1F       		.byte	0x1f
 716 03e1 F2030000 		.4byte	0x3f2
 717 03e5 0C       		.uleb128 0xc
 718 03e6 43010000 		.4byte	.LASF86
 719 03ea 10       		.byte	0x10
 720 03eb 21       		.byte	0x21
 721 03ec 8C000000 		.4byte	0x8c
 722 03f0 00       		.byte	0
 723 03f1 00       		.byte	0
 724 03f2 03       		.uleb128 0x3
 725 03f3 52030000 		.4byte	.LASF87
 726 03f7 10       		.byte	0x10
 727 03f8 24       		.byte	0x24
 728 03f9 DD030000 		.4byte	0x3dd
 729 03fd 03       		.uleb128 0x3
 730 03fe 91070000 		.4byte	.LASF88
 731 0402 03       		.byte	0x3
 732 0403 27       		.byte	0x27
 733 0404 08040000 		.4byte	0x408
 734 0408 0D       		.uleb128 0xd
 735 0409 04       		.byte	0x4
 736 040a 0E040000 		.4byte	0x40e
 737 040e 0E       		.uleb128 0xe
 738 040f E9010000 		.4byte	0x1e9
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 35


 739 0413 1D040000 		.4byte	0x41d
 740 0417 0F       		.uleb128 0xf
 741 0418 23040000 		.4byte	0x423
 742 041c 00       		.byte	0
 743 041d 0D       		.uleb128 0xd
 744 041e 04       		.byte	0x4
 745 041f F2030000 		.4byte	0x3f2
 746 0423 10       		.uleb128 0x10
 747 0424 1D040000 		.4byte	0x41d
 748 0428 03       		.uleb128 0x3
 749 0429 43080000 		.4byte	.LASF89
 750 042d 03       		.byte	0x3
 751 042e 2D       		.byte	0x2d
 752 042f 33040000 		.4byte	0x433
 753 0433 0D       		.uleb128 0xd
 754 0434 04       		.byte	0x4
 755 0435 39040000 		.4byte	0x439
 756 0439 0E       		.uleb128 0xe
 757 043a E9010000 		.4byte	0x1e9
 758 043e 48040000 		.4byte	0x448
 759 0442 0F       		.uleb128 0xf
 760 0443 53040000 		.4byte	0x453
 761 0447 00       		.byte	0
 762 0448 0D       		.uleb128 0xd
 763 0449 04       		.byte	0x4
 764 044a 4E040000 		.4byte	0x44e
 765 044e 10       		.uleb128 0x10
 766 044f F2030000 		.4byte	0x3f2
 767 0453 10       		.uleb128 0x10
 768 0454 48040000 		.4byte	0x448
 769 0458 11       		.uleb128 0x11
 770 0459 23030000 		.4byte	.LASF90
 771 045d 28       		.byte	0x28
 772 045e 03       		.byte	0x3
 773 045f 37       		.byte	0x37
 774 0460 DD040000 		.4byte	0x4dd
 775 0464 0C       		.uleb128 0xc
 776 0465 35040000 		.4byte	.LASF69
 777 0469 03       		.byte	0x3
 778 046a 3C       		.byte	0x3c
 779 046b DD040000 		.4byte	0x4dd
 780 046f 00       		.byte	0
 781 0470 0C       		.uleb128 0xc
 782 0471 0E050000 		.4byte	.LASF70
 783 0475 03       		.byte	0x3
 784 0476 41       		.byte	0x41
 785 0477 E2040000 		.4byte	0x4e2
 786 047b 04       		.byte	0x4
 787 047c 0C       		.uleb128 0xc
 788 047d A9030000 		.4byte	.LASF71
 789 0481 03       		.byte	0x3
 790 0482 46       		.byte	0x46
 791 0483 5B030000 		.4byte	0x35b
 792 0487 08       		.byte	0x8
 793 0488 0C       		.uleb128 0xc
 794 0489 39070000 		.4byte	.LASF72
 795 048d 03       		.byte	0x3
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 36


 796 048e 4C       		.byte	0x4c
 797 048f 5B030000 		.4byte	0x35b
 798 0493 0C       		.byte	0xc
 799 0494 0C       		.uleb128 0xc
 800 0495 11010000 		.4byte	.LASF73
 801 0499 03       		.byte	0x3
 802 049a 51       		.byte	0x51
 803 049b 60030000 		.4byte	0x360
 804 049f 10       		.byte	0x10
 805 04a0 0C       		.uleb128 0xc
 806 04a1 43070000 		.4byte	.LASF74
 807 04a5 03       		.byte	0x3
 808 04a6 56       		.byte	0x56
 809 04a7 6B030000 		.4byte	0x36b
 810 04ab 14       		.byte	0x14
 811 04ac 0C       		.uleb128 0xc
 812 04ad 4C040000 		.4byte	.LASF75
 813 04b1 03       		.byte	0x3
 814 04b2 5B       		.byte	0x5b
 815 04b3 60030000 		.4byte	0x360
 816 04b7 18       		.byte	0x18
 817 04b8 0C       		.uleb128 0xc
 818 04b9 36080000 		.4byte	.LASF76
 819 04bd 03       		.byte	0x3
 820 04be 60       		.byte	0x60
 821 04bf 6B030000 		.4byte	0x36b
 822 04c3 1C       		.byte	0x1c
 823 04c4 0C       		.uleb128 0xc
 824 04c5 3B030000 		.4byte	.LASF77
 825 04c9 03       		.byte	0x3
 826 04ca 66       		.byte	0x66
 827 04cb 70030000 		.4byte	0x370
 828 04cf 20       		.byte	0x20
 829 04d0 0C       		.uleb128 0xc
 830 04d1 32030000 		.4byte	.LASF78
 831 04d5 03       		.byte	0x3
 832 04d6 6B       		.byte	0x6b
 833 04d7 75030000 		.4byte	0x375
 834 04db 24       		.byte	0x24
 835 04dc 00       		.byte	0
 836 04dd 10       		.uleb128 0x10
 837 04de FD030000 		.4byte	0x3fd
 838 04e2 10       		.uleb128 0x10
 839 04e3 28040000 		.4byte	0x428
 840 04e7 03       		.uleb128 0x3
 841 04e8 B2060000 		.4byte	.LASF91
 842 04ec 03       		.byte	0x3
 843 04ed 6E       		.byte	0x6e
 844 04ee F2040000 		.4byte	0x4f2
 845 04f2 10       		.uleb128 0x10
 846 04f3 58040000 		.4byte	0x458
 847 04f7 11       		.uleb128 0x11
 848 04f8 7C030000 		.4byte	.LASF92
 849 04fc 0C       		.byte	0xc
 850 04fd 03       		.byte	0x3
 851 04fe 7A       		.byte	0x7a
 852 04ff 34050000 		.4byte	0x534
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 37


 853 0503 0C       		.uleb128 0xc
 854 0504 04020000 		.4byte	.LASF82
 855 0508 03       		.byte	0x3
 856 0509 80       		.byte	0x80
 857 050a F2030000 		.4byte	0x3f2
 858 050e 00       		.byte	0
 859 050f 0C       		.uleb128 0xc
 860 0510 DF030000 		.4byte	.LASF83
 861 0514 03       		.byte	0x3
 862 0515 85       		.byte	0x85
 863 0516 3A020000 		.4byte	0x23a
 864 051a 01       		.byte	0x1
 865 051b 12       		.uleb128 0x12
 866 051c 61676500 		.ascii	"age\000"
 867 0520 03       		.byte	0x3
 868 0521 8A       		.byte	0x8a
 869 0522 A2000000 		.4byte	0xa2
 870 0526 04       		.byte	0x4
 871 0527 0C       		.uleb128 0xc
 872 0528 4A030000 		.4byte	.LASF84
 873 052c 03       		.byte	0x3
 874 052d 8F       		.byte	0x8f
 875 052e 3A050000 		.4byte	0x53a
 876 0532 08       		.byte	0x8
 877 0533 00       		.byte	0
 878 0534 0D       		.uleb128 0xd
 879 0535 04       		.byte	0x4
 880 0536 E7040000 		.4byte	0x4e7
 881 053a 10       		.uleb128 0x10
 882 053b 34050000 		.4byte	0x534
 883 053f 03       		.uleb128 0x3
 884 0540 87030000 		.4byte	.LASF93
 885 0544 03       		.byte	0x3
 886 0545 92       		.byte	0x92
 887 0546 F7040000 		.4byte	0x4f7
 888 054a 0B       		.uleb128 0xb
 889 054b 01       		.byte	0x1
 890 054c 11       		.byte	0x11
 891 054d 1F       		.byte	0x1f
 892 054e 5F050000 		.4byte	0x55f
 893 0552 0C       		.uleb128 0xc
 894 0553 00000000 		.4byte	.LASF94
 895 0557 11       		.byte	0x11
 896 0558 21       		.byte	0x21
 897 0559 8C000000 		.4byte	0x8c
 898 055d 00       		.byte	0
 899 055e 00       		.byte	0
 900 055f 03       		.uleb128 0x3
 901 0560 B4030000 		.4byte	.LASF95
 902 0564 11       		.byte	0x11
 903 0565 24       		.byte	0x24
 904 0566 4A050000 		.4byte	0x54a
 905 056a 03       		.uleb128 0x3
 906 056b C0040000 		.4byte	.LASF96
 907 056f 04       		.byte	0x4
 908 0570 27       		.byte	0x27
 909 0571 75050000 		.4byte	0x575
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 38


 910 0575 0D       		.uleb128 0xd
 911 0576 04       		.byte	0x4
 912 0577 7B050000 		.4byte	0x57b
 913 057b 0E       		.uleb128 0xe
 914 057c E9010000 		.4byte	0x1e9
 915 0580 8A050000 		.4byte	0x58a
 916 0584 0F       		.uleb128 0xf
 917 0585 90050000 		.4byte	0x590
 918 0589 00       		.byte	0
 919 058a 0D       		.uleb128 0xd
 920 058b 04       		.byte	0x4
 921 058c 5F050000 		.4byte	0x55f
 922 0590 10       		.uleb128 0x10
 923 0591 8A050000 		.4byte	0x58a
 924 0595 03       		.uleb128 0x3
 925 0596 6F040000 		.4byte	.LASF97
 926 059a 04       		.byte	0x4
 927 059b 2D       		.byte	0x2d
 928 059c A0050000 		.4byte	0x5a0
 929 05a0 0D       		.uleb128 0xd
 930 05a1 04       		.byte	0x4
 931 05a2 A6050000 		.4byte	0x5a6
 932 05a6 0E       		.uleb128 0xe
 933 05a7 E9010000 		.4byte	0x1e9
 934 05ab B5050000 		.4byte	0x5b5
 935 05af 0F       		.uleb128 0xf
 936 05b0 C0050000 		.4byte	0x5c0
 937 05b4 00       		.byte	0
 938 05b5 0D       		.uleb128 0xd
 939 05b6 04       		.byte	0x4
 940 05b7 BB050000 		.4byte	0x5bb
 941 05bb 10       		.uleb128 0x10
 942 05bc 5F050000 		.4byte	0x55f
 943 05c0 10       		.uleb128 0x10
 944 05c1 B5050000 		.4byte	0x5b5
 945 05c5 11       		.uleb128 0x11
 946 05c6 23010000 		.4byte	.LASF98
 947 05ca 28       		.byte	0x28
 948 05cb 04       		.byte	0x4
 949 05cc 37       		.byte	0x37
 950 05cd 4A060000 		.4byte	0x64a
 951 05d1 0C       		.uleb128 0xc
 952 05d2 35040000 		.4byte	.LASF69
 953 05d6 04       		.byte	0x4
 954 05d7 3C       		.byte	0x3c
 955 05d8 4A060000 		.4byte	0x64a
 956 05dc 00       		.byte	0
 957 05dd 0C       		.uleb128 0xc
 958 05de 0E050000 		.4byte	.LASF70
 959 05e2 04       		.byte	0x4
 960 05e3 41       		.byte	0x41
 961 05e4 4F060000 		.4byte	0x64f
 962 05e8 04       		.byte	0x4
 963 05e9 0C       		.uleb128 0xc
 964 05ea A9030000 		.4byte	.LASF71
 965 05ee 04       		.byte	0x4
 966 05ef 46       		.byte	0x46
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 39


 967 05f0 5B030000 		.4byte	0x35b
 968 05f4 08       		.byte	0x8
 969 05f5 0C       		.uleb128 0xc
 970 05f6 39070000 		.4byte	.LASF72
 971 05fa 04       		.byte	0x4
 972 05fb 4C       		.byte	0x4c
 973 05fc 5B030000 		.4byte	0x35b
 974 0600 0C       		.byte	0xc
 975 0601 0C       		.uleb128 0xc
 976 0602 11010000 		.4byte	.LASF73
 977 0606 04       		.byte	0x4
 978 0607 51       		.byte	0x51
 979 0608 60030000 		.4byte	0x360
 980 060c 10       		.byte	0x10
 981 060d 0C       		.uleb128 0xc
 982 060e 43070000 		.4byte	.LASF74
 983 0612 04       		.byte	0x4
 984 0613 56       		.byte	0x56
 985 0614 6B030000 		.4byte	0x36b
 986 0618 14       		.byte	0x14
 987 0619 0C       		.uleb128 0xc
 988 061a 4C040000 		.4byte	.LASF75
 989 061e 04       		.byte	0x4
 990 061f 5B       		.byte	0x5b
 991 0620 60030000 		.4byte	0x360
 992 0624 18       		.byte	0x18
 993 0625 0C       		.uleb128 0xc
 994 0626 36080000 		.4byte	.LASF76
 995 062a 04       		.byte	0x4
 996 062b 60       		.byte	0x60
 997 062c 6B030000 		.4byte	0x36b
 998 0630 1C       		.byte	0x1c
 999 0631 0C       		.uleb128 0xc
 1000 0632 3B030000 		.4byte	.LASF77
 1001 0636 04       		.byte	0x4
 1002 0637 66       		.byte	0x66
 1003 0638 70030000 		.4byte	0x370
 1004 063c 20       		.byte	0x20
 1005 063d 0C       		.uleb128 0xc
 1006 063e 32030000 		.4byte	.LASF78
 1007 0642 04       		.byte	0x4
 1008 0643 6B       		.byte	0x6b
 1009 0644 75030000 		.4byte	0x375
 1010 0648 24       		.byte	0x24
 1011 0649 00       		.byte	0
 1012 064a 10       		.uleb128 0x10
 1013 064b 6A050000 		.4byte	0x56a
 1014 064f 10       		.uleb128 0x10
 1015 0650 95050000 		.4byte	0x595
 1016 0654 03       		.uleb128 0x3
 1017 0655 33010000 		.4byte	.LASF99
 1018 0659 04       		.byte	0x4
 1019 065a 6E       		.byte	0x6e
 1020 065b 5F060000 		.4byte	0x65f
 1021 065f 10       		.uleb128 0x10
 1022 0660 C5050000 		.4byte	0x5c5
 1023 0664 11       		.uleb128 0x11
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 40


 1024 0665 85040000 		.4byte	.LASF100
 1025 0669 0C       		.byte	0xc
 1026 066a 04       		.byte	0x4
 1027 066b 7A       		.byte	0x7a
 1028 066c A1060000 		.4byte	0x6a1
 1029 0670 0C       		.uleb128 0xc
 1030 0671 04020000 		.4byte	.LASF82
 1031 0675 04       		.byte	0x4
 1032 0676 80       		.byte	0x80
 1033 0677 5F050000 		.4byte	0x55f
 1034 067b 00       		.byte	0
 1035 067c 0C       		.uleb128 0xc
 1036 067d DF030000 		.4byte	.LASF83
 1037 0681 04       		.byte	0x4
 1038 0682 85       		.byte	0x85
 1039 0683 3A020000 		.4byte	0x23a
 1040 0687 01       		.byte	0x1
 1041 0688 12       		.uleb128 0x12
 1042 0689 61676500 		.ascii	"age\000"
 1043 068d 04       		.byte	0x4
 1044 068e 8A       		.byte	0x8a
 1045 068f A2000000 		.4byte	0xa2
 1046 0693 04       		.byte	0x4
 1047 0694 0C       		.uleb128 0xc
 1048 0695 4A030000 		.4byte	.LASF84
 1049 0699 04       		.byte	0x4
 1050 069a 8F       		.byte	0x8f
 1051 069b A7060000 		.4byte	0x6a7
 1052 069f 08       		.byte	0x8
 1053 06a0 00       		.byte	0
 1054 06a1 0D       		.uleb128 0xd
 1055 06a2 04       		.byte	0x4
 1056 06a3 54060000 		.4byte	0x654
 1057 06a7 10       		.uleb128 0x10
 1058 06a8 A1060000 		.4byte	0x6a1
 1059 06ac 03       		.uleb128 0x3
 1060 06ad 3E000000 		.4byte	.LASF101
 1061 06b1 04       		.byte	0x4
 1062 06b2 92       		.byte	0x92
 1063 06b3 64060000 		.4byte	0x664
 1064 06b7 0B       		.uleb128 0xb
 1065 06b8 01       		.byte	0x1
 1066 06b9 12       		.byte	0x12
 1067 06ba 1F       		.byte	0x1f
 1068 06bb CC060000 		.4byte	0x6cc
 1069 06bf 0C       		.uleb128 0xc
 1070 06c0 AB000000 		.4byte	.LASF102
 1071 06c4 12       		.byte	0x12
 1072 06c5 21       		.byte	0x21
 1073 06c6 35010000 		.4byte	0x135
 1074 06ca 00       		.byte	0
 1075 06cb 00       		.byte	0
 1076 06cc 03       		.uleb128 0x3
 1077 06cd 57050000 		.4byte	.LASF103
 1078 06d1 12       		.byte	0x12
 1079 06d2 24       		.byte	0x24
 1080 06d3 B7060000 		.4byte	0x6b7
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 41


 1081 06d7 03       		.uleb128 0x3
 1082 06d8 0E040000 		.4byte	.LASF104
 1083 06dc 05       		.byte	0x5
 1084 06dd 27       		.byte	0x27
 1085 06de E2060000 		.4byte	0x6e2
 1086 06e2 0D       		.uleb128 0xd
 1087 06e3 04       		.byte	0x4
 1088 06e4 E8060000 		.4byte	0x6e8
 1089 06e8 0E       		.uleb128 0xe
 1090 06e9 E9010000 		.4byte	0x1e9
 1091 06ed F7060000 		.4byte	0x6f7
 1092 06f1 0F       		.uleb128 0xf
 1093 06f2 FD060000 		.4byte	0x6fd
 1094 06f6 00       		.byte	0
 1095 06f7 0D       		.uleb128 0xd
 1096 06f8 04       		.byte	0x4
 1097 06f9 CC060000 		.4byte	0x6cc
 1098 06fd 10       		.uleb128 0x10
 1099 06fe F7060000 		.4byte	0x6f7
 1100 0702 03       		.uleb128 0x3
 1101 0703 F4030000 		.4byte	.LASF105
 1102 0707 05       		.byte	0x5
 1103 0708 2D       		.byte	0x2d
 1104 0709 0D070000 		.4byte	0x70d
 1105 070d 0D       		.uleb128 0xd
 1106 070e 04       		.byte	0x4
 1107 070f 13070000 		.4byte	0x713
 1108 0713 0E       		.uleb128 0xe
 1109 0714 E9010000 		.4byte	0x1e9
 1110 0718 22070000 		.4byte	0x722
 1111 071c 0F       		.uleb128 0xf
 1112 071d 2D070000 		.4byte	0x72d
 1113 0721 00       		.byte	0
 1114 0722 0D       		.uleb128 0xd
 1115 0723 04       		.byte	0x4
 1116 0724 28070000 		.4byte	0x728
 1117 0728 10       		.uleb128 0x10
 1118 0729 CC060000 		.4byte	0x6cc
 1119 072d 10       		.uleb128 0x10
 1120 072e 22070000 		.4byte	0x722
 1121 0732 11       		.uleb128 0x11
 1122 0733 C3010000 		.4byte	.LASF106
 1123 0737 28       		.byte	0x28
 1124 0738 05       		.byte	0x5
 1125 0739 37       		.byte	0x37
 1126 073a B7070000 		.4byte	0x7b7
 1127 073e 0C       		.uleb128 0xc
 1128 073f 35040000 		.4byte	.LASF69
 1129 0743 05       		.byte	0x5
 1130 0744 3C       		.byte	0x3c
 1131 0745 B7070000 		.4byte	0x7b7
 1132 0749 00       		.byte	0
 1133 074a 0C       		.uleb128 0xc
 1134 074b 0E050000 		.4byte	.LASF70
 1135 074f 05       		.byte	0x5
 1136 0750 41       		.byte	0x41
 1137 0751 BC070000 		.4byte	0x7bc
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 42


 1138 0755 04       		.byte	0x4
 1139 0756 0C       		.uleb128 0xc
 1140 0757 A9030000 		.4byte	.LASF71
 1141 075b 05       		.byte	0x5
 1142 075c 46       		.byte	0x46
 1143 075d 5B030000 		.4byte	0x35b
 1144 0761 08       		.byte	0x8
 1145 0762 0C       		.uleb128 0xc
 1146 0763 39070000 		.4byte	.LASF72
 1147 0767 05       		.byte	0x5
 1148 0768 4C       		.byte	0x4c
 1149 0769 5B030000 		.4byte	0x35b
 1150 076d 0C       		.byte	0xc
 1151 076e 0C       		.uleb128 0xc
 1152 076f 11010000 		.4byte	.LASF73
 1153 0773 05       		.byte	0x5
 1154 0774 51       		.byte	0x51
 1155 0775 60030000 		.4byte	0x360
 1156 0779 10       		.byte	0x10
 1157 077a 0C       		.uleb128 0xc
 1158 077b 43070000 		.4byte	.LASF74
 1159 077f 05       		.byte	0x5
 1160 0780 56       		.byte	0x56
 1161 0781 6B030000 		.4byte	0x36b
 1162 0785 14       		.byte	0x14
 1163 0786 0C       		.uleb128 0xc
 1164 0787 4C040000 		.4byte	.LASF75
 1165 078b 05       		.byte	0x5
 1166 078c 5B       		.byte	0x5b
 1167 078d 60030000 		.4byte	0x360
 1168 0791 18       		.byte	0x18
 1169 0792 0C       		.uleb128 0xc
 1170 0793 36080000 		.4byte	.LASF76
 1171 0797 05       		.byte	0x5
 1172 0798 60       		.byte	0x60
 1173 0799 6B030000 		.4byte	0x36b
 1174 079d 1C       		.byte	0x1c
 1175 079e 0C       		.uleb128 0xc
 1176 079f 3B030000 		.4byte	.LASF77
 1177 07a3 05       		.byte	0x5
 1178 07a4 66       		.byte	0x66
 1179 07a5 70030000 		.4byte	0x370
 1180 07a9 20       		.byte	0x20
 1181 07aa 0C       		.uleb128 0xc
 1182 07ab 32030000 		.4byte	.LASF78
 1183 07af 05       		.byte	0x5
 1184 07b0 6B       		.byte	0x6b
 1185 07b1 75030000 		.4byte	0x375
 1186 07b5 24       		.byte	0x24
 1187 07b6 00       		.byte	0
 1188 07b7 10       		.uleb128 0x10
 1189 07b8 D7060000 		.4byte	0x6d7
 1190 07bc 10       		.uleb128 0x10
 1191 07bd 02070000 		.4byte	0x702
 1192 07c1 03       		.uleb128 0x3
 1193 07c2 34060000 		.4byte	.LASF107
 1194 07c6 05       		.byte	0x5
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 43


 1195 07c7 6E       		.byte	0x6e
 1196 07c8 CC070000 		.4byte	0x7cc
 1197 07cc 10       		.uleb128 0x10
 1198 07cd 32070000 		.4byte	0x732
 1199 07d1 11       		.uleb128 0x11
 1200 07d2 C1060000 		.4byte	.LASF108
 1201 07d6 0C       		.byte	0xc
 1202 07d7 05       		.byte	0x5
 1203 07d8 7A       		.byte	0x7a
 1204 07d9 0E080000 		.4byte	0x80e
 1205 07dd 0C       		.uleb128 0xc
 1206 07de 04020000 		.4byte	.LASF82
 1207 07e2 05       		.byte	0x5
 1208 07e3 80       		.byte	0x80
 1209 07e4 CC060000 		.4byte	0x6cc
 1210 07e8 00       		.byte	0
 1211 07e9 0C       		.uleb128 0xc
 1212 07ea DF030000 		.4byte	.LASF83
 1213 07ee 05       		.byte	0x5
 1214 07ef 85       		.byte	0x85
 1215 07f0 3A020000 		.4byte	0x23a
 1216 07f4 01       		.byte	0x1
 1217 07f5 12       		.uleb128 0x12
 1218 07f6 61676500 		.ascii	"age\000"
 1219 07fa 05       		.byte	0x5
 1220 07fb 8A       		.byte	0x8a
 1221 07fc A2000000 		.4byte	0xa2
 1222 0800 04       		.byte	0x4
 1223 0801 0C       		.uleb128 0xc
 1224 0802 4A030000 		.4byte	.LASF84
 1225 0806 05       		.byte	0x5
 1226 0807 8F       		.byte	0x8f
 1227 0808 14080000 		.4byte	0x814
 1228 080c 08       		.byte	0x8
 1229 080d 00       		.byte	0
 1230 080e 0D       		.uleb128 0xd
 1231 080f 04       		.byte	0x4
 1232 0810 C1070000 		.4byte	0x7c1
 1233 0814 10       		.uleb128 0x10
 1234 0815 0E080000 		.4byte	0x80e
 1235 0819 03       		.uleb128 0x3
 1236 081a 88060000 		.4byte	.LASF109
 1237 081e 05       		.byte	0x5
 1238 081f 92       		.byte	0x92
 1239 0820 D1070000 		.4byte	0x7d1
 1240 0824 13       		.uleb128 0x13
 1241 0825 92000000 		.4byte	.LASF112
 1242 0829 05       		.byte	0x5
 1243 082a F1       		.byte	0xf1
 1244 082b 03       		.byte	0x3
 1245 082c 47080000 		.4byte	0x847
 1246 0830 14       		.uleb128 0x14
 1247 0831 58000000 		.4byte	.LASF110
 1248 0835 05       		.byte	0x5
 1249 0836 F1       		.byte	0xf1
 1250 0837 4D080000 		.4byte	0x84d
 1251 083b 14       		.uleb128 0x14
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 44


 1252 083c 6D000000 		.4byte	.LASF111
 1253 0840 05       		.byte	0x5
 1254 0841 F1       		.byte	0xf1
 1255 0842 A2000000 		.4byte	0xa2
 1256 0846 00       		.byte	0
 1257 0847 0D       		.uleb128 0xd
 1258 0848 04       		.byte	0x4
 1259 0849 19080000 		.4byte	0x819
 1260 084d 10       		.uleb128 0x10
 1261 084e 47080000 		.4byte	0x847
 1262 0852 13       		.uleb128 0x13
 1263 0853 D7020000 		.4byte	.LASF113
 1264 0857 04       		.byte	0x4
 1265 0858 F1       		.byte	0xf1
 1266 0859 03       		.byte	0x3
 1267 085a 75080000 		.4byte	0x875
 1268 085e 14       		.uleb128 0x14
 1269 085f 58000000 		.4byte	.LASF110
 1270 0863 04       		.byte	0x4
 1271 0864 F1       		.byte	0xf1
 1272 0865 7B080000 		.4byte	0x87b
 1273 0869 14       		.uleb128 0x14
 1274 086a 6D000000 		.4byte	.LASF111
 1275 086e 04       		.byte	0x4
 1276 086f F1       		.byte	0xf1
 1277 0870 A2000000 		.4byte	0xa2
 1278 0874 00       		.byte	0
 1279 0875 0D       		.uleb128 0xd
 1280 0876 04       		.byte	0x4
 1281 0877 AC060000 		.4byte	0x6ac
 1282 087b 10       		.uleb128 0x10
 1283 087c 75080000 		.4byte	0x875
 1284 0880 13       		.uleb128 0x13
 1285 0881 AA050000 		.4byte	.LASF114
 1286 0885 03       		.byte	0x3
 1287 0886 F1       		.byte	0xf1
 1288 0887 03       		.byte	0x3
 1289 0888 A3080000 		.4byte	0x8a3
 1290 088c 14       		.uleb128 0x14
 1291 088d 58000000 		.4byte	.LASF110
 1292 0891 03       		.byte	0x3
 1293 0892 F1       		.byte	0xf1
 1294 0893 A9080000 		.4byte	0x8a9
 1295 0897 14       		.uleb128 0x14
 1296 0898 6D000000 		.4byte	.LASF111
 1297 089c 03       		.byte	0x3
 1298 089d F1       		.byte	0xf1
 1299 089e A2000000 		.4byte	0xa2
 1300 08a2 00       		.byte	0
 1301 08a3 0D       		.uleb128 0xd
 1302 08a4 04       		.byte	0x4
 1303 08a5 3F050000 		.4byte	0x53f
 1304 08a9 10       		.uleb128 0x10
 1305 08aa A3080000 		.4byte	0x8a3
 1306 08ae 13       		.uleb128 0x13
 1307 08af 92030000 		.4byte	.LASF115
 1308 08b3 02       		.byte	0x2
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 45


 1309 08b4 F1       		.byte	0xf1
 1310 08b5 03       		.byte	0x3
 1311 08b6 D1080000 		.4byte	0x8d1
 1312 08ba 14       		.uleb128 0x14
 1313 08bb 58000000 		.4byte	.LASF110
 1314 08bf 02       		.byte	0x2
 1315 08c0 F1       		.byte	0xf1
 1316 08c1 D7080000 		.4byte	0x8d7
 1317 08c5 14       		.uleb128 0x14
 1318 08c6 6D000000 		.4byte	.LASF111
 1319 08ca 02       		.byte	0x2
 1320 08cb F1       		.byte	0xf1
 1321 08cc A2000000 		.4byte	0xa2
 1322 08d0 00       		.byte	0
 1323 08d1 0D       		.uleb128 0xd
 1324 08d2 04       		.byte	0x4
 1325 08d3 D2030000 		.4byte	0x3d2
 1326 08d7 10       		.uleb128 0x10
 1327 08d8 D1080000 		.4byte	0x8d1
 1328 08dc 15       		.uleb128 0x15
 1329 08dd AB020000 		.4byte	.LASF135
 1330 08e1 01       		.byte	0x1
 1331 08e2 D8       		.byte	0xd8
 1332 08e3 00000000 		.4byte	.LFB150
 1333 08e7 48000000 		.4byte	.LFE150-.LFB150
 1334 08eb 01       		.uleb128 0x1
 1335 08ec 9C       		.byte	0x9c
 1336 08ed 95090000 		.4byte	0x995
 1337 08f1 16       		.uleb128 0x16
 1338 08f2 52050000 		.4byte	.LASF136
 1339 08f6 01       		.byte	0x1
 1340 08f7 D8       		.byte	0xd8
 1341 08f8 A2000000 		.4byte	0xa2
 1342 08fc 00000000 		.4byte	.LLST0
 1343 0900 17       		.uleb128 0x17
 1344 0901 AE080000 		.4byte	0x8ae
 1345 0905 00000000 		.4byte	.LBB10
 1346 0909 10000000 		.4byte	.LBE10-.LBB10
 1347 090d 01       		.byte	0x1
 1348 090e D9       		.byte	0xd9
 1349 090f 26090000 		.4byte	0x926
 1350 0913 18       		.uleb128 0x18
 1351 0914 C5080000 		.4byte	0x8c5
 1352 0918 21000000 		.4byte	.LLST1
 1353 091c 18       		.uleb128 0x18
 1354 091d BA080000 		.4byte	0x8ba
 1355 0921 34000000 		.4byte	.LLST2
 1356 0925 00       		.byte	0
 1357 0926 17       		.uleb128 0x17
 1358 0927 80080000 		.4byte	0x880
 1359 092b 10000000 		.4byte	.LBB12
 1360 092f 10000000 		.4byte	.LBE12-.LBB12
 1361 0933 01       		.byte	0x1
 1362 0934 DA       		.byte	0xda
 1363 0935 4C090000 		.4byte	0x94c
 1364 0939 18       		.uleb128 0x18
 1365 093a 97080000 		.4byte	0x897
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 46


 1366 093e 4C000000 		.4byte	.LLST3
 1367 0942 18       		.uleb128 0x18
 1368 0943 8C080000 		.4byte	0x88c
 1369 0947 5F000000 		.4byte	.LLST4
 1370 094b 00       		.byte	0
 1371 094c 17       		.uleb128 0x17
 1372 094d 52080000 		.4byte	0x852
 1373 0951 20000000 		.4byte	.LBB14
 1374 0955 10000000 		.4byte	.LBE14-.LBB14
 1375 0959 01       		.byte	0x1
 1376 095a DB       		.byte	0xdb
 1377 095b 72090000 		.4byte	0x972
 1378 095f 18       		.uleb128 0x18
 1379 0960 69080000 		.4byte	0x869
 1380 0964 77000000 		.4byte	.LLST5
 1381 0968 18       		.uleb128 0x18
 1382 0969 5E080000 		.4byte	0x85e
 1383 096d 8A000000 		.4byte	.LLST6
 1384 0971 00       		.byte	0
 1385 0972 19       		.uleb128 0x19
 1386 0973 24080000 		.4byte	0x824
 1387 0977 30000000 		.4byte	.LBB16
 1388 097b 18000000 		.4byte	.LBE16-.LBB16
 1389 097f 01       		.byte	0x1
 1390 0980 DC       		.byte	0xdc
 1391 0981 18       		.uleb128 0x18
 1392 0982 3B080000 		.4byte	0x83b
 1393 0986 A2000000 		.4byte	.LLST7
 1394 098a 18       		.uleb128 0x18
 1395 098b 30080000 		.4byte	0x830
 1396 098f C3000000 		.4byte	.LLST8
 1397 0993 00       		.byte	0
 1398 0994 00       		.byte	0
 1399 0995 1A       		.uleb128 0x1a
 1400 0996 ED010000 		.4byte	.LASF116
 1401 099a 01       		.byte	0x1
 1402 099b 33       		.byte	0x33
 1403 099c 7A030000 		.4byte	0x37a
 1404 09a0 05       		.uleb128 0x5
 1405 09a1 03       		.byte	0x3
 1406 09a2 7C000000 		.4byte	SO_JOYSTICK_cfg
 1407 09a6 1A       		.uleb128 0x1a
 1408 09a7 DE050000 		.4byte	.LASF117
 1409 09ab 01       		.byte	0x1
 1410 09ac 62       		.byte	0x62
 1411 09ad E7040000 		.4byte	0x4e7
 1412 09b1 05       		.uleb128 0x5
 1413 09b2 03       		.byte	0x3
 1414 09b3 50000000 		.4byte	SO_SPEED_cfg
 1415 09b7 1A       		.uleb128 0x1a
 1416 09b8 5F000000 		.4byte	.LASF118
 1417 09bc 01       		.byte	0x1
 1418 09bd 8E       		.byte	0x8e
 1419 09be 54060000 		.4byte	0x654
 1420 09c2 05       		.uleb128 0x5
 1421 09c3 03       		.byte	0x3
 1422 09c4 28000000 		.4byte	SO_ENGINE_cfg
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 47


 1423 09c8 1A       		.uleb128 0x1a
 1424 09c9 8C010000 		.4byte	.LASF119
 1425 09cd 01       		.byte	0x1
 1426 09ce BA       		.byte	0xba
 1427 09cf C1070000 		.4byte	0x7c1
 1428 09d3 05       		.uleb128 0x5
 1429 09d4 03       		.byte	0x3
 1430 09d5 00000000 		.4byte	SO_BRAKELIGHT_cfg
 1431 09d9 1B       		.uleb128 0x1b
 1432 09da 1E080000 		.4byte	.LASF120
 1433 09de 13       		.byte	0x13
 1434 09df 40       		.byte	0x40
 1435 09e0 EA000000 		.4byte	0xea
 1436 09e4 1B       		.uleb128 0x1b
 1437 09e5 F3070000 		.4byte	.LASF121
 1438 09e9 13       		.byte	0x13
 1439 09ea 47       		.byte	0x47
 1440 09eb F5000000 		.4byte	0xf5
 1441 09ef 1B       		.uleb128 0x1b
 1442 09f0 0A020000 		.4byte	.LASF122
 1443 09f4 13       		.byte	0x13
 1444 09f5 4A       		.byte	0x4a
 1445 09f6 EA000000 		.4byte	0xea
 1446 09fa 1B       		.uleb128 0x1b
 1447 09fb 67070000 		.4byte	.LASF123
 1448 09ff 14       		.byte	0x14
 1449 0a00 48       		.byte	0x48
 1450 0a01 00010000 		.4byte	0x100
 1451 0a05 1B       		.uleb128 0x1b
 1452 0a06 5F060000 		.4byte	.LASF124
 1453 0a0a 15       		.byte	0x15
 1454 0a0b 44       		.byte	0x44
 1455 0a0c EA000000 		.4byte	0xea
 1456 0a10 1C       		.uleb128 0x1c
 1457 0a11 D1050000 		.4byte	.LASF125
 1458 0a15 16       		.byte	0x16
 1459 0a16 1207     		.2byte	0x712
 1460 0a18 1C0A0000 		.4byte	0xa1c
 1461 0a1c 1D       		.uleb128 0x1d
 1462 0a1d 97000000 		.4byte	0x97
 1463 0a21 1E       		.uleb128 0x1e
 1464 0a22 10030000 		.4byte	.LASF126
 1465 0a26 01       		.byte	0x1
 1466 0a27 47       		.byte	0x47
 1467 0a28 D2030000 		.4byte	0x3d2
 1468 0a2c 05       		.uleb128 0x5
 1469 0a2d 03       		.byte	0x3
 1470 0a2e 00000000 		.4byte	SO_JOYSTICK_signal
 1471 0a32 1E       		.uleb128 0x1e
 1472 0a33 07000000 		.4byte	.LASF127
 1473 0a37 01       		.byte	0x1
 1474 0a38 76       		.byte	0x76
 1475 0a39 3F050000 		.4byte	0x53f
 1476 0a3d 05       		.uleb128 0x5
 1477 0a3e 03       		.byte	0x3
 1478 0a3f 00000000 		.4byte	SO_SPEED_signal
 1479 0a43 1E       		.uleb128 0x1e
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 48


 1480 0a44 FE060000 		.4byte	.LASF128
 1481 0a48 01       		.byte	0x1
 1482 0a49 A2       		.byte	0xa2
 1483 0a4a AC060000 		.4byte	0x6ac
 1484 0a4e 05       		.uleb128 0x5
 1485 0a4f 03       		.byte	0x3
 1486 0a50 00000000 		.4byte	SO_ENGINE_signal
 1487 0a54 1E       		.uleb128 0x1e
 1488 0a55 AE080000 		.4byte	.LASF129
 1489 0a59 01       		.byte	0x1
 1490 0a5a CE       		.byte	0xce
 1491 0a5b 19080000 		.4byte	0x819
 1492 0a5f 05       		.uleb128 0x5
 1493 0a60 03       		.byte	0x3
 1494 0a61 00000000 		.4byte	SO_BRAKELIGHT_signal
 1495 0a65 09       		.uleb128 0x9
 1496 0a66 750A0000 		.4byte	0xa75
 1497 0a6a 750A0000 		.4byte	0xa75
 1498 0a6e 1F       		.uleb128 0x1f
 1499 0a6f 23010000 		.4byte	0x123
 1500 0a73 00       		.byte	0
 1501 0a74 00       		.byte	0
 1502 0a75 10       		.uleb128 0x10
 1503 0a76 0B010000 		.4byte	0x10b
 1504 0a7a 1E       		.uleb128 0x1e
 1505 0a7b EB050000 		.4byte	.LASF130
 1506 0a7f 01       		.byte	0x1
 1507 0a80 30       		.byte	0x30
 1508 0a81 8B0A0000 		.4byte	0xa8b
 1509 0a85 05       		.uleb128 0x5
 1510 0a86 03       		.byte	0x3
 1511 0a87 00000000 		.4byte	so_joystick_updTasks
 1512 0a8b 10       		.uleb128 0x10
 1513 0a8c 650A0000 		.4byte	0xa65
 1514 0a90 1E       		.uleb128 0x1e
 1515 0a91 B6000000 		.4byte	.LASF131
 1516 0a95 01       		.byte	0x1
 1517 0a96 5F       		.byte	0x5f
 1518 0a97 A10A0000 		.4byte	0xaa1
 1519 0a9b 05       		.uleb128 0x5
 1520 0a9c 03       		.byte	0x3
 1521 0a9d 00000000 		.4byte	so_speed_updTasks
 1522 0aa1 10       		.uleb128 0x10
 1523 0aa2 650A0000 		.4byte	0xa65
 1524 0aa6 00       		.byte	0
 1525              		.section	.debug_abbrev,"",%progbits
 1526              	.Ldebug_abbrev0:
 1527 0000 01       		.uleb128 0x1
 1528 0001 11       		.uleb128 0x11
 1529 0002 01       		.byte	0x1
 1530 0003 25       		.uleb128 0x25
 1531 0004 0E       		.uleb128 0xe
 1532 0005 13       		.uleb128 0x13
 1533 0006 0B       		.uleb128 0xb
 1534 0007 03       		.uleb128 0x3
 1535 0008 0E       		.uleb128 0xe
 1536 0009 1B       		.uleb128 0x1b
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 49


 1537 000a 0E       		.uleb128 0xe
 1538 000b 55       		.uleb128 0x55
 1539 000c 17       		.uleb128 0x17
 1540 000d 11       		.uleb128 0x11
 1541 000e 01       		.uleb128 0x1
 1542 000f 10       		.uleb128 0x10
 1543 0010 17       		.uleb128 0x17
 1544 0011 00       		.byte	0
 1545 0012 00       		.byte	0
 1546 0013 02       		.uleb128 0x2
 1547 0014 24       		.uleb128 0x24
 1548 0015 00       		.byte	0
 1549 0016 0B       		.uleb128 0xb
 1550 0017 0B       		.uleb128 0xb
 1551 0018 3E       		.uleb128 0x3e
 1552 0019 0B       		.uleb128 0xb
 1553 001a 03       		.uleb128 0x3
 1554 001b 0E       		.uleb128 0xe
 1555 001c 00       		.byte	0
 1556 001d 00       		.byte	0
 1557 001e 03       		.uleb128 0x3
 1558 001f 16       		.uleb128 0x16
 1559 0020 00       		.byte	0
 1560 0021 03       		.uleb128 0x3
 1561 0022 0E       		.uleb128 0xe
 1562 0023 3A       		.uleb128 0x3a
 1563 0024 0B       		.uleb128 0xb
 1564 0025 3B       		.uleb128 0x3b
 1565 0026 0B       		.uleb128 0xb
 1566 0027 49       		.uleb128 0x49
 1567 0028 13       		.uleb128 0x13
 1568 0029 00       		.byte	0
 1569 002a 00       		.byte	0
 1570 002b 04       		.uleb128 0x4
 1571 002c 24       		.uleb128 0x24
 1572 002d 00       		.byte	0
 1573 002e 0B       		.uleb128 0xb
 1574 002f 0B       		.uleb128 0xb
 1575 0030 3E       		.uleb128 0x3e
 1576 0031 0B       		.uleb128 0xb
 1577 0032 03       		.uleb128 0x3
 1578 0033 08       		.uleb128 0x8
 1579 0034 00       		.byte	0
 1580 0035 00       		.byte	0
 1581 0036 05       		.uleb128 0x5
 1582 0037 16       		.uleb128 0x16
 1583 0038 00       		.byte	0
 1584 0039 03       		.uleb128 0x3
 1585 003a 0E       		.uleb128 0xe
 1586 003b 3A       		.uleb128 0x3a
 1587 003c 0B       		.uleb128 0xb
 1588 003d 3B       		.uleb128 0x3b
 1589 003e 05       		.uleb128 0x5
 1590 003f 49       		.uleb128 0x49
 1591 0040 13       		.uleb128 0x13
 1592 0041 00       		.byte	0
 1593 0042 00       		.byte	0
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 50


 1594 0043 06       		.uleb128 0x6
 1595 0044 04       		.uleb128 0x4
 1596 0045 01       		.byte	0x1
 1597 0046 0B       		.uleb128 0xb
 1598 0047 0B       		.uleb128 0xb
 1599 0048 49       		.uleb128 0x49
 1600 0049 13       		.uleb128 0x13
 1601 004a 3A       		.uleb128 0x3a
 1602 004b 0B       		.uleb128 0xb
 1603 004c 3B       		.uleb128 0x3b
 1604 004d 0B       		.uleb128 0xb
 1605 004e 01       		.uleb128 0x1
 1606 004f 13       		.uleb128 0x13
 1607 0050 00       		.byte	0
 1608 0051 00       		.byte	0
 1609 0052 07       		.uleb128 0x7
 1610 0053 28       		.uleb128 0x28
 1611 0054 00       		.byte	0
 1612 0055 03       		.uleb128 0x3
 1613 0056 0E       		.uleb128 0xe
 1614 0057 1C       		.uleb128 0x1c
 1615 0058 0B       		.uleb128 0xb
 1616 0059 00       		.byte	0
 1617 005a 00       		.byte	0
 1618 005b 08       		.uleb128 0x8
 1619 005c 28       		.uleb128 0x28
 1620 005d 00       		.byte	0
 1621 005e 03       		.uleb128 0x3
 1622 005f 0E       		.uleb128 0xe
 1623 0060 1C       		.uleb128 0x1c
 1624 0061 0D       		.uleb128 0xd
 1625 0062 00       		.byte	0
 1626 0063 00       		.byte	0
 1627 0064 09       		.uleb128 0x9
 1628 0065 01       		.uleb128 0x1
 1629 0066 01       		.byte	0x1
 1630 0067 49       		.uleb128 0x49
 1631 0068 13       		.uleb128 0x13
 1632 0069 01       		.uleb128 0x1
 1633 006a 13       		.uleb128 0x13
 1634 006b 00       		.byte	0
 1635 006c 00       		.byte	0
 1636 006d 0A       		.uleb128 0xa
 1637 006e 21       		.uleb128 0x21
 1638 006f 00       		.byte	0
 1639 0070 00       		.byte	0
 1640 0071 00       		.byte	0
 1641 0072 0B       		.uleb128 0xb
 1642 0073 13       		.uleb128 0x13
 1643 0074 01       		.byte	0x1
 1644 0075 0B       		.uleb128 0xb
 1645 0076 0B       		.uleb128 0xb
 1646 0077 3A       		.uleb128 0x3a
 1647 0078 0B       		.uleb128 0xb
 1648 0079 3B       		.uleb128 0x3b
 1649 007a 0B       		.uleb128 0xb
 1650 007b 01       		.uleb128 0x1
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 51


 1651 007c 13       		.uleb128 0x13
 1652 007d 00       		.byte	0
 1653 007e 00       		.byte	0
 1654 007f 0C       		.uleb128 0xc
 1655 0080 0D       		.uleb128 0xd
 1656 0081 00       		.byte	0
 1657 0082 03       		.uleb128 0x3
 1658 0083 0E       		.uleb128 0xe
 1659 0084 3A       		.uleb128 0x3a
 1660 0085 0B       		.uleb128 0xb
 1661 0086 3B       		.uleb128 0x3b
 1662 0087 0B       		.uleb128 0xb
 1663 0088 49       		.uleb128 0x49
 1664 0089 13       		.uleb128 0x13
 1665 008a 38       		.uleb128 0x38
 1666 008b 0B       		.uleb128 0xb
 1667 008c 00       		.byte	0
 1668 008d 00       		.byte	0
 1669 008e 0D       		.uleb128 0xd
 1670 008f 0F       		.uleb128 0xf
 1671 0090 00       		.byte	0
 1672 0091 0B       		.uleb128 0xb
 1673 0092 0B       		.uleb128 0xb
 1674 0093 49       		.uleb128 0x49
 1675 0094 13       		.uleb128 0x13
 1676 0095 00       		.byte	0
 1677 0096 00       		.byte	0
 1678 0097 0E       		.uleb128 0xe
 1679 0098 15       		.uleb128 0x15
 1680 0099 01       		.byte	0x1
 1681 009a 27       		.uleb128 0x27
 1682 009b 19       		.uleb128 0x19
 1683 009c 49       		.uleb128 0x49
 1684 009d 13       		.uleb128 0x13
 1685 009e 01       		.uleb128 0x1
 1686 009f 13       		.uleb128 0x13
 1687 00a0 00       		.byte	0
 1688 00a1 00       		.byte	0
 1689 00a2 0F       		.uleb128 0xf
 1690 00a3 05       		.uleb128 0x5
 1691 00a4 00       		.byte	0
 1692 00a5 49       		.uleb128 0x49
 1693 00a6 13       		.uleb128 0x13
 1694 00a7 00       		.byte	0
 1695 00a8 00       		.byte	0
 1696 00a9 10       		.uleb128 0x10
 1697 00aa 26       		.uleb128 0x26
 1698 00ab 00       		.byte	0
 1699 00ac 49       		.uleb128 0x49
 1700 00ad 13       		.uleb128 0x13
 1701 00ae 00       		.byte	0
 1702 00af 00       		.byte	0
 1703 00b0 11       		.uleb128 0x11
 1704 00b1 13       		.uleb128 0x13
 1705 00b2 01       		.byte	0x1
 1706 00b3 03       		.uleb128 0x3
 1707 00b4 0E       		.uleb128 0xe
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 52


 1708 00b5 0B       		.uleb128 0xb
 1709 00b6 0B       		.uleb128 0xb
 1710 00b7 3A       		.uleb128 0x3a
 1711 00b8 0B       		.uleb128 0xb
 1712 00b9 3B       		.uleb128 0x3b
 1713 00ba 0B       		.uleb128 0xb
 1714 00bb 01       		.uleb128 0x1
 1715 00bc 13       		.uleb128 0x13
 1716 00bd 00       		.byte	0
 1717 00be 00       		.byte	0
 1718 00bf 12       		.uleb128 0x12
 1719 00c0 0D       		.uleb128 0xd
 1720 00c1 00       		.byte	0
 1721 00c2 03       		.uleb128 0x3
 1722 00c3 08       		.uleb128 0x8
 1723 00c4 3A       		.uleb128 0x3a
 1724 00c5 0B       		.uleb128 0xb
 1725 00c6 3B       		.uleb128 0x3b
 1726 00c7 0B       		.uleb128 0xb
 1727 00c8 49       		.uleb128 0x49
 1728 00c9 13       		.uleb128 0x13
 1729 00ca 38       		.uleb128 0x38
 1730 00cb 0B       		.uleb128 0xb
 1731 00cc 00       		.byte	0
 1732 00cd 00       		.byte	0
 1733 00ce 13       		.uleb128 0x13
 1734 00cf 2E       		.uleb128 0x2e
 1735 00d0 01       		.byte	0x1
 1736 00d1 3F       		.uleb128 0x3f
 1737 00d2 19       		.uleb128 0x19
 1738 00d3 03       		.uleb128 0x3
 1739 00d4 0E       		.uleb128 0xe
 1740 00d5 3A       		.uleb128 0x3a
 1741 00d6 0B       		.uleb128 0xb
 1742 00d7 3B       		.uleb128 0x3b
 1743 00d8 0B       		.uleb128 0xb
 1744 00d9 27       		.uleb128 0x27
 1745 00da 19       		.uleb128 0x19
 1746 00db 20       		.uleb128 0x20
 1747 00dc 0B       		.uleb128 0xb
 1748 00dd 01       		.uleb128 0x1
 1749 00de 13       		.uleb128 0x13
 1750 00df 00       		.byte	0
 1751 00e0 00       		.byte	0
 1752 00e1 14       		.uleb128 0x14
 1753 00e2 05       		.uleb128 0x5
 1754 00e3 00       		.byte	0
 1755 00e4 03       		.uleb128 0x3
 1756 00e5 0E       		.uleb128 0xe
 1757 00e6 3A       		.uleb128 0x3a
 1758 00e7 0B       		.uleb128 0xb
 1759 00e8 3B       		.uleb128 0x3b
 1760 00e9 0B       		.uleb128 0xb
 1761 00ea 49       		.uleb128 0x49
 1762 00eb 13       		.uleb128 0x13
 1763 00ec 00       		.byte	0
 1764 00ed 00       		.byte	0
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 53


 1765 00ee 15       		.uleb128 0x15
 1766 00ef 2E       		.uleb128 0x2e
 1767 00f0 01       		.byte	0x1
 1768 00f1 3F       		.uleb128 0x3f
 1769 00f2 19       		.uleb128 0x19
 1770 00f3 03       		.uleb128 0x3
 1771 00f4 0E       		.uleb128 0xe
 1772 00f5 3A       		.uleb128 0x3a
 1773 00f6 0B       		.uleb128 0xb
 1774 00f7 3B       		.uleb128 0x3b
 1775 00f8 0B       		.uleb128 0xb
 1776 00f9 27       		.uleb128 0x27
 1777 00fa 19       		.uleb128 0x19
 1778 00fb 11       		.uleb128 0x11
 1779 00fc 01       		.uleb128 0x1
 1780 00fd 12       		.uleb128 0x12
 1781 00fe 06       		.uleb128 0x6
 1782 00ff 40       		.uleb128 0x40
 1783 0100 18       		.uleb128 0x18
 1784 0101 9742     		.uleb128 0x2117
 1785 0103 19       		.uleb128 0x19
 1786 0104 01       		.uleb128 0x1
 1787 0105 13       		.uleb128 0x13
 1788 0106 00       		.byte	0
 1789 0107 00       		.byte	0
 1790 0108 16       		.uleb128 0x16
 1791 0109 05       		.uleb128 0x5
 1792 010a 00       		.byte	0
 1793 010b 03       		.uleb128 0x3
 1794 010c 0E       		.uleb128 0xe
 1795 010d 3A       		.uleb128 0x3a
 1796 010e 0B       		.uleb128 0xb
 1797 010f 3B       		.uleb128 0x3b
 1798 0110 0B       		.uleb128 0xb
 1799 0111 49       		.uleb128 0x49
 1800 0112 13       		.uleb128 0x13
 1801 0113 02       		.uleb128 0x2
 1802 0114 17       		.uleb128 0x17
 1803 0115 00       		.byte	0
 1804 0116 00       		.byte	0
 1805 0117 17       		.uleb128 0x17
 1806 0118 1D       		.uleb128 0x1d
 1807 0119 01       		.byte	0x1
 1808 011a 31       		.uleb128 0x31
 1809 011b 13       		.uleb128 0x13
 1810 011c 11       		.uleb128 0x11
 1811 011d 01       		.uleb128 0x1
 1812 011e 12       		.uleb128 0x12
 1813 011f 06       		.uleb128 0x6
 1814 0120 58       		.uleb128 0x58
 1815 0121 0B       		.uleb128 0xb
 1816 0122 59       		.uleb128 0x59
 1817 0123 0B       		.uleb128 0xb
 1818 0124 01       		.uleb128 0x1
 1819 0125 13       		.uleb128 0x13
 1820 0126 00       		.byte	0
 1821 0127 00       		.byte	0
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 54


 1822 0128 18       		.uleb128 0x18
 1823 0129 05       		.uleb128 0x5
 1824 012a 00       		.byte	0
 1825 012b 31       		.uleb128 0x31
 1826 012c 13       		.uleb128 0x13
 1827 012d 02       		.uleb128 0x2
 1828 012e 17       		.uleb128 0x17
 1829 012f 00       		.byte	0
 1830 0130 00       		.byte	0
 1831 0131 19       		.uleb128 0x19
 1832 0132 1D       		.uleb128 0x1d
 1833 0133 01       		.byte	0x1
 1834 0134 31       		.uleb128 0x31
 1835 0135 13       		.uleb128 0x13
 1836 0136 11       		.uleb128 0x11
 1837 0137 01       		.uleb128 0x1
 1838 0138 12       		.uleb128 0x12
 1839 0139 06       		.uleb128 0x6
 1840 013a 58       		.uleb128 0x58
 1841 013b 0B       		.uleb128 0xb
 1842 013c 59       		.uleb128 0x59
 1843 013d 0B       		.uleb128 0xb
 1844 013e 00       		.byte	0
 1845 013f 00       		.byte	0
 1846 0140 1A       		.uleb128 0x1a
 1847 0141 34       		.uleb128 0x34
 1848 0142 00       		.byte	0
 1849 0143 03       		.uleb128 0x3
 1850 0144 0E       		.uleb128 0xe
 1851 0145 3A       		.uleb128 0x3a
 1852 0146 0B       		.uleb128 0xb
 1853 0147 3B       		.uleb128 0x3b
 1854 0148 0B       		.uleb128 0xb
 1855 0149 49       		.uleb128 0x49
 1856 014a 13       		.uleb128 0x13
 1857 014b 02       		.uleb128 0x2
 1858 014c 18       		.uleb128 0x18
 1859 014d 00       		.byte	0
 1860 014e 00       		.byte	0
 1861 014f 1B       		.uleb128 0x1b
 1862 0150 34       		.uleb128 0x34
 1863 0151 00       		.byte	0
 1864 0152 03       		.uleb128 0x3
 1865 0153 0E       		.uleb128 0xe
 1866 0154 3A       		.uleb128 0x3a
 1867 0155 0B       		.uleb128 0xb
 1868 0156 3B       		.uleb128 0x3b
 1869 0157 0B       		.uleb128 0xb
 1870 0158 49       		.uleb128 0x49
 1871 0159 13       		.uleb128 0x13
 1872 015a 3F       		.uleb128 0x3f
 1873 015b 19       		.uleb128 0x19
 1874 015c 3C       		.uleb128 0x3c
 1875 015d 19       		.uleb128 0x19
 1876 015e 00       		.byte	0
 1877 015f 00       		.byte	0
 1878 0160 1C       		.uleb128 0x1c
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 55


 1879 0161 34       		.uleb128 0x34
 1880 0162 00       		.byte	0
 1881 0163 03       		.uleb128 0x3
 1882 0164 0E       		.uleb128 0xe
 1883 0165 3A       		.uleb128 0x3a
 1884 0166 0B       		.uleb128 0xb
 1885 0167 3B       		.uleb128 0x3b
 1886 0168 05       		.uleb128 0x5
 1887 0169 49       		.uleb128 0x49
 1888 016a 13       		.uleb128 0x13
 1889 016b 3F       		.uleb128 0x3f
 1890 016c 19       		.uleb128 0x19
 1891 016d 3C       		.uleb128 0x3c
 1892 016e 19       		.uleb128 0x19
 1893 016f 00       		.byte	0
 1894 0170 00       		.byte	0
 1895 0171 1D       		.uleb128 0x1d
 1896 0172 35       		.uleb128 0x35
 1897 0173 00       		.byte	0
 1898 0174 49       		.uleb128 0x49
 1899 0175 13       		.uleb128 0x13
 1900 0176 00       		.byte	0
 1901 0177 00       		.byte	0
 1902 0178 1E       		.uleb128 0x1e
 1903 0179 34       		.uleb128 0x34
 1904 017a 00       		.byte	0
 1905 017b 03       		.uleb128 0x3
 1906 017c 0E       		.uleb128 0xe
 1907 017d 3A       		.uleb128 0x3a
 1908 017e 0B       		.uleb128 0xb
 1909 017f 3B       		.uleb128 0x3b
 1910 0180 0B       		.uleb128 0xb
 1911 0181 49       		.uleb128 0x49
 1912 0182 13       		.uleb128 0x13
 1913 0183 3F       		.uleb128 0x3f
 1914 0184 19       		.uleb128 0x19
 1915 0185 02       		.uleb128 0x2
 1916 0186 18       		.uleb128 0x18
 1917 0187 00       		.byte	0
 1918 0188 00       		.byte	0
 1919 0189 1F       		.uleb128 0x1f
 1920 018a 21       		.uleb128 0x21
 1921 018b 00       		.byte	0
 1922 018c 49       		.uleb128 0x49
 1923 018d 13       		.uleb128 0x13
 1924 018e 2F       		.uleb128 0x2f
 1925 018f 0B       		.uleb128 0xb
 1926 0190 00       		.byte	0
 1927 0191 00       		.byte	0
 1928 0192 00       		.byte	0
 1929              		.section	.debug_loc,"",%progbits
 1930              	.Ldebug_loc0:
 1931              	.LLST0:
 1932 0000 00000000 		.4byte	.LVL0
 1933 0004 36000000 		.4byte	.LVL4
 1934 0008 0100     		.2byte	0x1
 1935 000a 50       		.byte	0x50
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 56


 1936 000b 36000000 		.4byte	.LVL4
 1937 000f 48000000 		.4byte	.LFE150
 1938 0013 0400     		.2byte	0x4
 1939 0015 F3       		.byte	0xf3
 1940 0016 01       		.uleb128 0x1
 1941 0017 50       		.byte	0x50
 1942 0018 9F       		.byte	0x9f
 1943 0019 00000000 		.4byte	0
 1944 001d 00000000 		.4byte	0
 1945              	.LLST1:
 1946 0021 00000000 		.4byte	.LVL0
 1947 0025 10000000 		.4byte	.LVL1
 1948 0029 0100     		.2byte	0x1
 1949 002b 50       		.byte	0x50
 1950 002c 00000000 		.4byte	0
 1951 0030 00000000 		.4byte	0
 1952              	.LLST2:
 1953 0034 00000000 		.4byte	.LVL0
 1954 0038 10000000 		.4byte	.LVL1
 1955 003c 0600     		.2byte	0x6
 1956 003e 03       		.byte	0x3
 1957 003f 00000000 		.4byte	SO_JOYSTICK_signal
 1958 0043 9F       		.byte	0x9f
 1959 0044 00000000 		.4byte	0
 1960 0048 00000000 		.4byte	0
 1961              	.LLST3:
 1962 004c 10000000 		.4byte	.LVL1
 1963 0050 20000000 		.4byte	.LVL2
 1964 0054 0100     		.2byte	0x1
 1965 0056 50       		.byte	0x50
 1966 0057 00000000 		.4byte	0
 1967 005b 00000000 		.4byte	0
 1968              	.LLST4:
 1969 005f 10000000 		.4byte	.LVL1
 1970 0063 20000000 		.4byte	.LVL2
 1971 0067 0600     		.2byte	0x6
 1972 0069 03       		.byte	0x3
 1973 006a 00000000 		.4byte	SO_SPEED_signal
 1974 006e 9F       		.byte	0x9f
 1975 006f 00000000 		.4byte	0
 1976 0073 00000000 		.4byte	0
 1977              	.LLST5:
 1978 0077 20000000 		.4byte	.LVL2
 1979 007b 30000000 		.4byte	.LVL3
 1980 007f 0100     		.2byte	0x1
 1981 0081 50       		.byte	0x50
 1982 0082 00000000 		.4byte	0
 1983 0086 00000000 		.4byte	0
 1984              	.LLST6:
 1985 008a 20000000 		.4byte	.LVL2
 1986 008e 30000000 		.4byte	.LVL3
 1987 0092 0600     		.2byte	0x6
 1988 0094 03       		.byte	0x3
 1989 0095 00000000 		.4byte	SO_ENGINE_signal
 1990 0099 9F       		.byte	0x9f
 1991 009a 00000000 		.4byte	0
 1992 009e 00000000 		.4byte	0
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 57


 1993              	.LLST7:
 1994 00a2 30000000 		.4byte	.LVL3
 1995 00a6 36000000 		.4byte	.LVL4
 1996 00aa 0100     		.2byte	0x1
 1997 00ac 50       		.byte	0x50
 1998 00ad 36000000 		.4byte	.LVL4
 1999 00b1 40000000 		.4byte	.LVL5
 2000 00b5 0400     		.2byte	0x4
 2001 00b7 F3       		.byte	0xf3
 2002 00b8 01       		.uleb128 0x1
 2003 00b9 50       		.byte	0x50
 2004 00ba 9F       		.byte	0x9f
 2005 00bb 00000000 		.4byte	0
 2006 00bf 00000000 		.4byte	0
 2007              	.LLST8:
 2008 00c3 30000000 		.4byte	.LVL3
 2009 00c7 40000000 		.4byte	.LVL5
 2010 00cb 0600     		.2byte	0x6
 2011 00cd 03       		.byte	0x3
 2012 00ce 00000000 		.4byte	SO_BRAKELIGHT_signal
 2013 00d2 9F       		.byte	0x9f
 2014 00d3 00000000 		.4byte	0
 2015 00d7 00000000 		.4byte	0
 2016              		.section	.debug_aranges,"",%progbits
 2017 0000 1C000000 		.4byte	0x1c
 2018 0004 0200     		.2byte	0x2
 2019 0006 00000000 		.4byte	.Ldebug_info0
 2020 000a 04       		.byte	0x4
 2021 000b 00       		.byte	0
 2022 000c 0000     		.2byte	0
 2023 000e 0000     		.2byte	0
 2024 0010 00000000 		.4byte	.LFB150
 2025 0014 48000000 		.4byte	.LFE150-.LFB150
 2026 0018 00000000 		.4byte	0
 2027 001c 00000000 		.4byte	0
 2028              		.section	.debug_ranges,"",%progbits
 2029              	.Ldebug_ranges0:
 2030 0000 00000000 		.4byte	.LFB150
 2031 0004 48000000 		.4byte	.LFE150
 2032 0008 00000000 		.4byte	0
 2033 000c 00000000 		.4byte	0
 2034              		.section	.debug_line,"",%progbits
 2035              	.Ldebug_line0:
 2036 0000 80030000 		.section	.debug_str,"MS",%progbits,1
 2036      02005803 
 2036      00000201 
 2036      FB0E0D00 
 2036      01010101 
 2037              	.LASF94:
 2038 0000 656E6769 		.ascii	"engine\000"
 2038      6E6500
 2039              	.LASF127:
 2040 0007 534F5F53 		.ascii	"SO_SPEED_signal\000"
 2040      50454544 
 2040      5F736967 
 2040      6E616C00 
 2041              	.LASF49:
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 58


 2042 0017 52435F45 		.ascii	"RC_ERROR_NOT_MATCH\000"
 2042      52524F52 
 2042      5F4E4F54 
 2042      5F4D4154 
 2042      434800
 2043              	.LASF45:
 2044 002a 52435F45 		.ascii	"RC_ERROR_WRITE_ONLY\000"
 2044      52524F52 
 2044      5F575249 
 2044      54455F4F 
 2044      4E4C5900 
 2045              	.LASF101:
 2046 003e 53435F45 		.ascii	"SC_ENGINE_t\000"
 2046      4E47494E 
 2046      455F7400 
 2047              	.LASF26:
 2048 004a 4576656E 		.ascii	"EventMaskType\000"
 2048      744D6173 
 2048      6B547970 
 2048      6500
 2049              	.LASF110:
 2050 0058 7369676E 		.ascii	"signal\000"
 2050      616C00
 2051              	.LASF118:
 2052 005f 534F5F45 		.ascii	"SO_ENGINE_cfg\000"
 2052      4E47494E 
 2052      455F6366 
 2052      6700
 2053              	.LASF111:
 2054 006d 696E6372 		.ascii	"increment\000"
 2054      656D656E 
 2054      7400
 2055              	.LASF11:
 2056 0077 756E7369 		.ascii	"unsigned int\000"
 2056      676E6564 
 2056      20696E74 
 2056      00
 2057              	.LASF33:
 2058 0084 52435F45 		.ascii	"RC_ERROR_ZERO\000"
 2058      52524F52 
 2058      5F5A4552 
 2058      4F00
 2059              	.LASF112:
 2060 0092 5254455F 		.ascii	"RTE_SC_BRAKELIGHT_incAge\000"
 2060      53435F42 
 2060      52414B45 
 2060      4C494748 
 2060      545F696E 
 2061              	.LASF102:
 2062 00ab 6272616B 		.ascii	"brakeLight\000"
 2062      654C6967 
 2062      687400
 2063              	.LASF131:
 2064 00b6 736F5F73 		.ascii	"so_speed_updTasks\000"
 2064      70656564 
 2064      5F757064 
 2064      5461736B 
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 59


 2064      7300
 2065              	.LASF5:
 2066 00c8 5F5F696E 		.ascii	"__int32_t\000"
 2066      7433325F 
 2066      7400
 2067              	.LASF32:
 2068 00d2 52435F45 		.ascii	"RC_ERROR_NULL\000"
 2068      52524F52 
 2068      5F4E554C 
 2068      4C00
 2069              	.LASF41:
 2070 00e0 52435F45 		.ascii	"RC_ERROR_TIME_OUT\000"
 2070      52524F52 
 2070      5F54494D 
 2070      455F4F55 
 2070      5400
 2071              	.LASF53:
 2072 00f2 52435F45 		.ascii	"RC_ERROR_INVALID_STATE\000"
 2072      52524F52 
 2072      5F494E56 
 2072      414C4944 
 2072      5F535441 
 2073              	.LASF23:
 2074 0109 45455F46 		.ascii	"EE_FREG\000"
 2074      52454700 
 2075              	.LASF73:
 2076 0111 6F6E5570 		.ascii	"onUpdateTaskCount\000"
 2076      64617465 
 2076      5461736B 
 2076      436F756E 
 2076      7400
 2077              	.LASF98:
 2078 0123 53435F45 		.ascii	"SC_ENGINE_cfg_s\000"
 2078      4E47494E 
 2078      455F6366 
 2078      675F7300 
 2079              	.LASF99:
 2080 0133 53435F45 		.ascii	"SC_ENGINE_cfg_t\000"
 2080      4E47494E 
 2080      455F6366 
 2080      675F7400 
 2081              	.LASF86:
 2082 0143 73706565 		.ascii	"speed\000"
 2082      6400
 2083              	.LASF14:
 2084 0149 75696E74 		.ascii	"uint32_t\000"
 2084      33325F74 
 2084      00
 2085              	.LASF31:
 2086 0152 52435F45 		.ascii	"RC_ERROR\000"
 2086      52524F52 
 2086      00
 2087              	.LASF48:
 2088 015b 52435F45 		.ascii	"RC_ERROR_WRITE_FAILS\000"
 2088      52524F52 
 2088      5F575249 
 2088      54455F46 
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 60


 2088      41494C53 
 2089              	.LASF64:
 2090 0170 4A6F7973 		.ascii	"Joystick_X\000"
 2090      7469636B 
 2090      5F5800
 2091              	.LASF65:
 2092 017b 4A6F7973 		.ascii	"Joystick_Y\000"
 2092      7469636B 
 2092      5F5900
 2093              	.LASF15:
 2094 0186 666C6F61 		.ascii	"float\000"
 2094      7400
 2095              	.LASF119:
 2096 018c 534F5F42 		.ascii	"SO_BRAKELIGHT_cfg\000"
 2096      52414B45 
 2096      4C494748 
 2096      545F6366 
 2096      6700
 2097              	.LASF42:
 2098 019e 52435F45 		.ascii	"RC_ERROR_OPEN\000"
 2098      52524F52 
 2098      5F4F5045 
 2098      4E00
 2099              	.LASF10:
 2100 01ac 6C6F6E67 		.ascii	"long long unsigned int\000"
 2100      206C6F6E 
 2100      6720756E 
 2100      7369676E 
 2100      65642069 
 2101              	.LASF106:
 2102 01c3 53435F42 		.ascii	"SC_BRAKELIGHT_cfg_s\000"
 2102      52414B45 
 2102      4C494748 
 2102      545F6366 
 2102      675F7300 
 2103              	.LASF25:
 2104 01d7 5461736B 		.ascii	"TaskType\000"
 2104      54797065 
 2104      00
 2105              	.LASF58:
 2106 01e0 5265736F 		.ascii	"ResourceType\000"
 2106      75726365 
 2106      54797065 
 2106      00
 2107              	.LASF116:
 2108 01ed 534F5F4A 		.ascii	"SO_JOYSTICK_cfg\000"
 2108      4F595354 
 2108      49434B5F 
 2108      63666700 
 2109              	.LASF24:
 2110 01fd 45455F54 		.ascii	"EE_TID\000"
 2110      494400
 2111              	.LASF82:
 2112 0204 76616C75 		.ascii	"value\000"
 2112      6500
 2113              	.LASF122:
 2114 020a 45455F41 		.ascii	"EE_ApplicationMode\000"
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 61


 2114      70706C69 
 2114      63617469 
 2114      6F6E4D6F 
 2114      646500
 2115              	.LASF132:
 2116 021d 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2116      43313120 
 2116      352E342E 
 2116      31203230 
 2116      31363036 
 2117 0250 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2117      20726576 
 2117      6973696F 
 2117      6E203233 
 2117      37373135 
 2118 0283 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2118      66756E63 
 2118      74696F6E 
 2118      2D736563 
 2118      74696F6E 
 2119              	.LASF135:
 2120 02ab 5254455F 		.ascii	"RTE_timertick_sp_common_tick\000"
 2120      74696D65 
 2120      72746963 
 2120      6B5F7370 
 2120      5F636F6D 
 2121              	.LASF18:
 2122 02c8 73697A65 		.ascii	"size_t\000"
 2122      5F7400
 2123              	.LASF28:
 2124 02cf 73696E74 		.ascii	"sint8_t\000"
 2124      385F7400 
 2125              	.LASF113:
 2126 02d7 5254455F 		.ascii	"RTE_SC_ENGINE_incAge\000"
 2126      53435F45 
 2126      4E47494E 
 2126      455F696E 
 2126      63416765 
 2127              	.LASF80:
 2128 02ec 53435F4A 		.ascii	"SC_JOYSTICK_cfg_s\000"
 2128      4F595354 
 2128      49434B5F 
 2128      6366675F 
 2128      7300
 2129              	.LASF79:
 2130 02fe 53435F4A 		.ascii	"SC_JOYSTICK_cfg_t\000"
 2130      4F595354 
 2130      49434B5F 
 2130      6366675F 
 2130      7400
 2131              	.LASF126:
 2132 0310 534F5F4A 		.ascii	"SO_JOYSTICK_signal\000"
 2132      4F595354 
 2132      49434B5F 
 2132      7369676E 
 2132      616C00
 2133              	.LASF90:
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 62


 2134 0323 53435F53 		.ascii	"SC_SPEED_cfg_s\000"
 2134      50454544 
 2134      5F636667 
 2134      5F7300
 2135              	.LASF78:
 2136 0332 7265736F 		.ascii	"resource\000"
 2136      75726365 
 2136      00
 2137              	.LASF77:
 2138 033b 7265736F 		.ascii	"resourceActive\000"
 2138      75726365 
 2138      41637469 
 2138      766500
 2139              	.LASF84:
 2140 034a 70536967 		.ascii	"pSigCfg\000"
 2140      43666700 
 2141              	.LASF87:
 2142 0352 53435F53 		.ascii	"SC_SPEED_data_t\000"
 2142      50454544 
 2142      5F646174 
 2142      615F7400 
 2143              	.LASF17:
 2144 0362 63686172 		.ascii	"char\000"
 2144      00
 2145              	.LASF30:
 2146 0367 52435F53 		.ascii	"RC_SUCCESS\000"
 2146      55434345 
 2146      535300
 2147              	.LASF29:
 2148 0372 626F6F6C 		.ascii	"boolean_t\000"
 2148      65616E5F 
 2148      7400
 2149              	.LASF92:
 2150 037c 53435F53 		.ascii	"SC_SPEED_s\000"
 2150      50454544 
 2150      5F7300
 2151              	.LASF93:
 2152 0387 53435F53 		.ascii	"SC_SPEED_t\000"
 2152      50454544 
 2152      5F7400
 2153              	.LASF115:
 2154 0392 5254455F 		.ascii	"RTE_SC_JOYSTICK_incAge\000"
 2154      53435F4A 
 2154      4F595354 
 2154      49434B5F 
 2154      696E6341 
 2155              	.LASF71:
 2156 03a9 65764F6E 		.ascii	"evOnUpdate\000"
 2156      55706461 
 2156      746500
 2157              	.LASF95:
 2158 03b4 53435F45 		.ascii	"SC_ENGINE_data_t\000"
 2158      4E47494E 
 2158      455F6461 
 2158      74615F74 
 2158      00
 2159              	.LASF51:
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 63


 2160 03c5 52435F45 		.ascii	"RC_ERROR_BAD_DATA\000"
 2160      52524F52 
 2160      5F424144 
 2160      5F444154 
 2160      4100
 2161              	.LASF12:
 2162 03d7 75696E74 		.ascii	"uint8_t\000"
 2162      385F7400 
 2163              	.LASF83:
 2164 03df 73746174 		.ascii	"status\000"
 2164      757300
 2165              	.LASF85:
 2166 03e6 53435F4A 		.ascii	"SC_JOYSTICK_t\000"
 2166      4F595354 
 2166      49434B5F 
 2166      7400
 2167              	.LASF105:
 2168 03f4 53435F42 		.ascii	"SC_BRAKELIGHT_driverOut_t\000"
 2168      52414B45 
 2168      4C494748 
 2168      545F6472 
 2168      69766572 
 2169              	.LASF104:
 2170 040e 53435F42 		.ascii	"SC_BRAKELIGHT_driverIn_t\000"
 2170      52414B45 
 2170      4C494748 
 2170      545F6472 
 2170      69766572 
 2171              	.LASF9:
 2172 0427 6C6F6E67 		.ascii	"long long int\000"
 2172      206C6F6E 
 2172      6720696E 
 2172      7400
 2173              	.LASF69:
 2174 0435 696E4472 		.ascii	"inDriver\000"
 2174      69766572 
 2174      00
 2175              	.LASF81:
 2176 043e 53435F4A 		.ascii	"SC_JOYSTICK_s\000"
 2176      4F595354 
 2176      49434B5F 
 2176      7300
 2177              	.LASF75:
 2178 044c 6F6E4572 		.ascii	"onErrorTaskCount\000"
 2178      726F7254 
 2178      61736B43 
 2178      6F756E74 
 2178      00
 2179              	.LASF52:
 2180 045d 52435F45 		.ascii	"RC_ERROR_CANCELED\000"
 2180      52524F52 
 2180      5F43414E 
 2180      43454C45 
 2180      4400
 2181              	.LASF97:
 2182 046f 53435F45 		.ascii	"SC_ENGINE_driverOut_t\000"
 2182      4E47494E 
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 64


 2182      455F6472 
 2182      69766572 
 2182      4F75745F 
 2183              	.LASF100:
 2184 0485 53435F45 		.ascii	"SC_ENGINE_s\000"
 2184      4E47494E 
 2184      455F7300 
 2185              	.LASF133:
 2186 0491 736F7572 		.ascii	"source\\rte\\sp_common.c\000"
 2186      63655C72 
 2186      74655C73 
 2186      705F636F 
 2186      6D6D6F6E 
 2187              	.LASF68:
 2188 04a8 53435F4A 		.ascii	"SC_JOYSTICK_driverOut_t\000"
 2188      4F595354 
 2188      49434B5F 
 2188      64726976 
 2188      65724F75 
 2189              	.LASF96:
 2190 04c0 53435F45 		.ascii	"SC_ENGINE_driverIn_t\000"
 2190      4E47494E 
 2190      455F6472 
 2190      69766572 
 2190      496E5F74 
 2191              	.LASF67:
 2192 04d5 53435F4A 		.ascii	"SC_JOYSTICK_driverIn_t\000"
 2192      4F595354 
 2192      49434B5F 
 2192      64726976 
 2192      6572496E 
 2193              	.LASF37:
 2194 04ec 52435F45 		.ascii	"RC_ERROR_UNDERRUN\000"
 2194      52524F52 
 2194      5F554E44 
 2194      45525255 
 2194      4E00
 2195              	.LASF34:
 2196 04fe 52435F45 		.ascii	"RC_ERROR_MEMORY\000"
 2196      52524F52 
 2196      5F4D454D 
 2196      4F525900 
 2197              	.LASF70:
 2198 050e 6F757444 		.ascii	"outDriver\000"
 2198      72697665 
 2198      7200
 2199              	.LASF38:
 2200 0518 52435F45 		.ascii	"RC_ERROR_BUFFER_FULL\000"
 2200      52524F52 
 2200      5F425546 
 2200      4645525F 
 2200      46554C4C 
 2201              	.LASF19:
 2202 052d 6C6F6E67 		.ascii	"long double\000"
 2202      20646F75 
 2202      626C6500 
 2203              	.LASF62:
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 65


 2204 0539 5254455F 		.ascii	"RTE_SIGNALSTATUS_INVALID\000"
 2204      5349474E 
 2204      414C5354 
 2204      41545553 
 2204      5F494E56 
 2205              	.LASF136:
 2206 0552 7469636B 		.ascii	"tick\000"
 2206      00
 2207              	.LASF103:
 2208 0557 53435F42 		.ascii	"SC_BRAKELIGHT_data_t\000"
 2208      52414B45 
 2208      4C494748 
 2208      545F6461 
 2208      74615F74 
 2209              	.LASF21:
 2210 056c 45455F55 		.ascii	"EE_UINT32\000"
 2210      494E5433 
 2210      3200
 2211              	.LASF44:
 2212 0576 52435F45 		.ascii	"RC_ERROR_READ_ONLY\000"
 2212      52524F52 
 2212      5F524541 
 2212      445F4F4E 
 2212      4C5900
 2213              	.LASF40:
 2214 0589 52435F45 		.ascii	"RC_ERROR_BUSY\000"
 2214      52524F52 
 2214      5F425553 
 2214      5900
 2215              	.LASF50:
 2216 0597 52435F45 		.ascii	"RC_ERROR_BAD_PARAM\000"
 2216      52524F52 
 2216      5F424144 
 2216      5F504152 
 2216      414D00
 2217              	.LASF114:
 2218 05aa 5254455F 		.ascii	"RTE_SC_SPEED_incAge\000"
 2218      53435F53 
 2218      50454544 
 2218      5F696E63 
 2218      41676500 
 2219              	.LASF2:
 2220 05be 73686F72 		.ascii	"short int\000"
 2220      7420696E 
 2220      7400
 2221              	.LASF6:
 2222 05c8 6C6F6E67 		.ascii	"long int\000"
 2222      20696E74 
 2222      00
 2223              	.LASF125:
 2224 05d1 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2224      52784275 
 2224      66666572 
 2224      00
 2225              	.LASF117:
 2226 05de 534F5F53 		.ascii	"SO_SPEED_cfg\000"
 2226      50454544 
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 66


 2226      5F636667 
 2226      00
 2227              	.LASF130:
 2228 05eb 736F5F6A 		.ascii	"so_joystick_updTasks\000"
 2228      6F797374 
 2228      69636B5F 
 2228      75706454 
 2228      61736B73 
 2229              	.LASF55:
 2230 0600 52435F45 		.ascii	"RC_ERROR_NOT_IMPLEMENTED\000"
 2230      52524F52 
 2230      5F4E4F54 
 2230      5F494D50 
 2230      4C454D45 
 2231              	.LASF46:
 2232 0619 52435F45 		.ascii	"RC_ERROR_INVALID\000"
 2232      52524F52 
 2232      5F494E56 
 2232      414C4944 
 2232      00
 2233              	.LASF4:
 2234 062a 5F5F7569 		.ascii	"__uint8_t\000"
 2234      6E74385F 
 2234      7400
 2235              	.LASF107:
 2236 0634 53435F42 		.ascii	"SC_BRAKELIGHT_cfg_t\000"
 2236      52414B45 
 2236      4C494748 
 2236      545F6366 
 2236      675F7400 
 2237              	.LASF61:
 2238 0648 5254455F 		.ascii	"RTE_SIGNALSTATUS_VALID\000"
 2238      5349474E 
 2238      414C5354 
 2238      41545553 
 2238      5F56414C 
 2239              	.LASF124:
 2240 065f 45455F49 		.ascii	"EE_IRQ_nesting_level\000"
 2240      52515F6E 
 2240      65737469 
 2240      6E675F6C 
 2240      6576656C 
 2241              	.LASF47:
 2242 0674 52435F45 		.ascii	"RC_ERROR_READ_FAILS\000"
 2242      52524F52 
 2242      5F524541 
 2242      445F4641 
 2242      494C5300 
 2243              	.LASF109:
 2244 0688 53435F42 		.ascii	"SC_BRAKELIGHT_t\000"
 2244      52414B45 
 2244      4C494748 
 2244      545F7400 
 2245              	.LASF22:
 2246 0698 45455F55 		.ascii	"EE_UREG\000"
 2246      52454700 
 2247              	.LASF20:
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 67


 2248 06a0 45455F49 		.ascii	"EE_INT32\000"
 2248      4E543332 
 2248      00
 2249              	.LASF27:
 2250 06a9 73697A65 		.ascii	"sizetype\000"
 2250      74797065 
 2250      00
 2251              	.LASF91:
 2252 06b2 53435F53 		.ascii	"SC_SPEED_cfg_t\000"
 2252      50454544 
 2252      5F636667 
 2252      5F7400
 2253              	.LASF108:
 2254 06c1 53435F42 		.ascii	"SC_BRAKELIGHT_s\000"
 2254      52414B45 
 2254      4C494748 
 2254      545F7300 
 2255              	.LASF8:
 2256 06d1 6C6F6E67 		.ascii	"long unsigned int\000"
 2256      20756E73 
 2256      69676E65 
 2256      6420696E 
 2256      7400
 2257              	.LASF57:
 2258 06e3 5461736B 		.ascii	"TaskTypeArray\000"
 2258      54797065 
 2258      41727261 
 2258      7900
 2259              	.LASF56:
 2260 06f1 52435F74 		.ascii	"RC_t\000"
 2260      00
 2261              	.LASF13:
 2262 06f6 696E7433 		.ascii	"int32_t\000"
 2262      325F7400 
 2263              	.LASF128:
 2264 06fe 534F5F45 		.ascii	"SO_ENGINE_signal\000"
 2264      4E47494E 
 2264      455F7369 
 2264      676E616C 
 2264      00
 2265              	.LASF36:
 2266 070f 52435F45 		.ascii	"RC_ERROR_OVERRUN\000"
 2266      52524F52 
 2266      5F4F5645 
 2266      5252554E 
 2266      00
 2267              	.LASF1:
 2268 0720 756E7369 		.ascii	"unsigned char\000"
 2268      676E6564 
 2268      20636861 
 2268      7200
 2269              	.LASF7:
 2270 072e 5F5F7569 		.ascii	"__uint32_t\000"
 2270      6E743332 
 2270      5F7400
 2271              	.LASF72:
 2272 0739 65764F6E 		.ascii	"evOnError\000"
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 68


 2272      4572726F 
 2272      7200
 2273              	.LASF74:
 2274 0743 6F6E5570 		.ascii	"onUpdateTasks\000"
 2274      64617465 
 2274      5461736B 
 2274      7300
 2275              	.LASF39:
 2276 0751 52435F45 		.ascii	"RC_ERROR_BUFFER_EMTPY\000"
 2276      52524F52 
 2276      5F425546 
 2276      4645525F 
 2276      454D5450 
 2277              	.LASF123:
 2278 0767 45455F73 		.ascii	"EE_std_endcycle_next_tid\000"
 2278      74645F65 
 2278      6E646379 
 2278      636C655F 
 2278      6E657874 
 2279              	.LASF54:
 2280 0780 52435F45 		.ascii	"RC_ERROR_UNKNOWN\000"
 2280      52524F52 
 2280      5F554E4B 
 2280      4E4F574E 
 2280      00
 2281              	.LASF88:
 2282 0791 53435F53 		.ascii	"SC_SPEED_driverIn_t\000"
 2282      50454544 
 2282      5F647269 
 2282      76657249 
 2282      6E5F7400 
 2283              	.LASF134:
 2284 07a5 433A5C4A 		.ascii	"C:\\Jason\\EIT\\Semester_02\\01_EAA\\Lab\\Assignmen"
 2284      61736F6E 
 2284      5C454954 
 2284      5C53656D 
 2284      65737465 
 2285 07d2 745F315C 		.ascii	"t_1\\01_Electronic_GasPedal.cydsn\000"
 2285      30315F45 
 2285      6C656374 
 2285      726F6E69 
 2285      635F4761 
 2286              	.LASF121:
 2287 07f3 45455F6F 		.ascii	"EE_oo_IRQ_suspend_status\000"
 2287      6F5F4952 
 2287      515F7375 
 2287      7370656E 
 2287      645F7374 
 2288              	.LASF43:
 2289 080c 52435F45 		.ascii	"RC_ERROR_CHECKSUM\000"
 2289      52524F52 
 2289      5F434845 
 2289      434B5355 
 2289      4D00
 2290              	.LASF120:
 2291 081e 45455F6F 		.ascii	"EE_oo_IRQ_disable_count\000"
 2291      6F5F4952 
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 69


 2291      515F6469 
 2291      7361626C 
 2291      655F636F 
 2292              	.LASF76:
 2293 0836 6F6E4572 		.ascii	"onErrorTasks\000"
 2293      726F7254 
 2293      61736B73 
 2293      00
 2294              	.LASF89:
 2295 0843 53435F53 		.ascii	"SC_SPEED_driverOut_t\000"
 2295      50454544 
 2295      5F647269 
 2295      7665724F 
 2295      75745F74 
 2296              	.LASF0:
 2297 0858 7369676E 		.ascii	"signed char\000"
 2297      65642063 
 2297      68617200 
 2298              	.LASF3:
 2299 0864 73686F72 		.ascii	"short unsigned int\000"
 2299      7420756E 
 2299      7369676E 
 2299      65642069 
 2299      6E7400
 2300              	.LASF60:
 2301 0877 5254455F 		.ascii	"RTE_SIGNALSTATUS_INITIALIZED\000"
 2301      5349474E 
 2301      414C5354 
 2301      41545553 
 2301      5F494E49 
 2302              	.LASF16:
 2303 0894 646F7562 		.ascii	"double\000"
 2303      6C6500
 2304              	.LASF66:
 2305 089b 53435F4A 		.ascii	"SC_JOYSTICK_data_t\000"
 2305      4F595354 
 2305      49434B5F 
 2305      64617461 
 2305      5F7400
 2306              	.LASF129:
 2307 08ae 534F5F42 		.ascii	"SO_BRAKELIGHT_signal\000"
 2307      52414B45 
 2307      4C494748 
 2307      545F7369 
 2307      676E616C 
 2308              	.LASF63:
 2309 08c3 5254455F 		.ascii	"RTE_signalStatus_t\000"
 2309      7369676E 
 2309      616C5374 
 2309      61747573 
 2309      5F7400
 2310              	.LASF59:
 2311 08d6 5254455F 		.ascii	"RTE_SIGNALSTATUS_STARTUP\000"
 2311      5349474E 
 2311      414C5354 
 2311      41545553 
 2311      5F535441 
ARM GAS  C:\Users\JASON\AppData\Local\Temp\ccThNsJl.s 			page 70


 2312              	.LASF35:
 2313 08ef 52435F45 		.ascii	"RC_ERROR_RANGE\000"
 2313      52524F52 
 2313      5F52414E 
 2313      474500
 2314              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
